#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[ruled]{algorithm2e}
\newtheorem{clm}{Claim}
\newtheorem{mydef}{Definition}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Response Time Analysis of G-EDF and G-RMA based Multiprocessors with Contention
 Manager
\end_layout

\begin_layout Author
Mohammed Elshambakey, Binoy Ravindran
\end_layout

\begin_layout Abstract
This paper addresses the the problem of response time analysis of multiprocessor
 systems scheduled with G-EDF and G-RMA with synchronization handled by
 STM.
 Three types of contention managers are used; EDF CM with G-EDF systems,
 RMA CM with G-RMA systems, and FIFO CM with both G-RMA and G-EDF systems.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Not finished.
\end_layout

\begin_layout Section
Notations
\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="82" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="15cm">
<column alignment="left" valignment="top" width="15cm">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\zeta_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks with shorter relative deadline than 
\begin_inset Formula $D_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $c_{ji}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The new WCET of 
\begin_inset Formula $T_{j}$
\end_inset

 relative to the studied task 
\begin_inset Formula $T_{i}$
\end_inset

.
 This length changes according to the studied task.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections in all tasks that share object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s\_\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A short resource.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $l\_\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A long resource.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g(s\_\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A group containing only short resource.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g(l\_\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A group containing only long resources.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R_{k}(g(s\_\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(s\_\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R_{k}(g(l\_\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(l\_\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|R_{k}(g(s\_\theta))|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The size of the request and it equals the sum of all nested accesses to
 resources in 
\begin_inset Formula $g(s\_\theta)$
\end_inset

 made by 
\begin_inset Formula $T_{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|R_{k}(g(l\_\theta))|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The sum of nested requests by 
\begin_inset Formula $T_{k}$
\end_inset

 to the group containing 
\begin_inset Formula $l\_\theta$
\end_inset

, plus 
\begin_inset Formula $max_{s\_\theta\in\theta_{k}}[\sum_{h=1,h\ne k}^{min(m,n)-1}|R_{h}(g(s\_\theta))|]$
\end_inset

, if 
\begin_inset Formula $s\_\theta$
\end_inset

 can be called inside 
\begin_inset Formula $l\_\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{i,l}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests long resources.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{i,s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests short resources.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
The following notations are used for the LCM
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Psi$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Under LCM, it is a predefined thershold that lies in 
\begin_inset Formula $[0,1]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\epsilon_{i}^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Under LCM, it is the remaining execution length of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 when interfered by another transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{ij}^{kl}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Under LCM, it is the ratio between 
\begin_inset Formula $len\left(s_{j}^{l}\right)$
\end_inset

 and 
\begin_inset Formula $len$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{ji}^{lk}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The time 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 waits for the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, where the former belongs to a higher priority job.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
THE FLLOWING SYMBOLS ARE CAPTURED FROM CHECKPOINTING PAPERS
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SYMBOL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
DEFINITION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
USED
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $TM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transactional Memory.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $CM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contention Manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $STM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Software Transactional Memory.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $HTM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hardware Transactional Memory.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $ECM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Earliest Deadline Contention Manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RCM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ratemonotonic Contention Manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $LCM$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Length-based Contention Manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $PNF$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priority with Negative value and First access contention manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $FBLT$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First Bounded, Last Timestamp contention manager.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $CPFBLT$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Checkpointing First Bounded, Last Timestamp contention manager.
 The original FBLT is also known as non-checkpointing FBLT (NCPFBLT) to
 differentiate it from CPFBLT.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $EDF$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Earliest Deadline First scheduling.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $G-EDF$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global Earliest Deadline First scheduling.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RMS$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rate-Monotonic Scheduling.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $G-RMS$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global Rate-Monotonic Scheduling.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of processors in a multiprocessor systems.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $n$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of tasks in a set of sporadic tasks.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Real-time task's notations
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $i^{th}$
\end_inset

 task in the task set.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{i}^{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $j^{th}$
\end_inset

 instance (job) of the 
\begin_inset Formula $i^{th}$
\end_inset

 task.
 
\begin_inset Formula $\tau_{i}$
\end_inset

 is used to generally represent any instance 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 (
\begin_inset Formula $j$
\end_inset

 is indeterminate).
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Worst case execution time (WCET) of any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum period between any two consequitive instances of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $D_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relative deadline of any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 In case of implicit deadline system, 
\begin_inset Formula $D_{i}=T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $r_{i}^{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Release time of job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d_{i}^{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Absolute deadline of job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 (
\begin_inset Formula $d_{i}^{j}=r_{i}^{j}+D_{i}$
\end_inset

).
 
\begin_inset Formula $d_{i}^{j}$
\end_inset

 is also the absolute deadline of any atomic section (transaction) in 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{i}^{j}$
\end_inset

, 
\begin_inset Formula $p_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{i}^{j}$
\end_inset

 is priority of job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

.
 If 
\begin_inset Formula $p_{i}^{j}$
\end_inset

 is fixed for all jobs of 
\begin_inset Formula $\tau_{i}$
\end_inset

, then 
\begin_inset Formula $p_{i}^{j}=p_{i}$
\end_inset

, 
\begin_inset Formula $\forall j$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g_{ij}^{A}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum number of interferences made by any job 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 to only one job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during an interval 
\begin_inset Formula $L$
\end_inset

, where 
\begin_inset Formula $L\le T_{i}$
\end_inset

, under scheduling algorithm 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Atomic section's (transaction's) notations
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta$
\end_inset

, 
\begin_inset Formula $\Theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta$
\end_inset

 is one object that can be accessed within an atomic section (transaction)
 of any task.
 Whereas 
\begin_inset Formula $\Theta$
\end_inset

 is a set of objects.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections (transactions) in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The 
\begin_inset Formula $k^{th}$
\end_inset

 atomic section (transaction) in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{o}(s_{i}^{k}),\, p(s_{i}^{k})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{o}(s_{i}^{k})$
\end_inset

 is the orginal priority of atomic section (transaction) 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Throughout this document, if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 belongs to job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

, then 
\begin_inset Formula $p_{o}(s_{i}^{k})=p_{j}^{l}$
\end_inset

.
 
\begin_inset Formula $p(s_{i}^{k})=p_{o}(s_{i}^{k})$
\end_inset

 unless priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 changes due to behaviour of underlying synchronization technique.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of distincit objects accessed directly by all atomic sections (transactions)
 in 
\begin_inset Formula $s_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections (transactions) of any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 that directly access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta_{i}^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The set of distincit objects accessed directly by 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\Theta_{i}^{k}\subseteq\Theta_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}^{k}(\Theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The same as 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{i}^{k}(\Theta)$
\end_inset

 states that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 accesses a set of objects 
\begin_inset Formula $\Theta\subseteq\Theta_{i}^{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $len\left(s_{i}^{k}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Length of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $len\left(c_{1}s_{a1}^{b1}+c2s_{a2}^{b2}+..+c_{z}s_{az}^{bz}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Summation of each of the product of constant 
\begin_inset Formula $c_{i}$
\end_inset

 by the length of transaction 
\begin_inset Formula $s_{ai}^{bi}$
\end_inset

 where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $1\le i\le z$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $len\left(s_{i}\left(\theta\right)\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sum of lenghts of all transactions in any job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks that share object 
\begin_inset Formula $\theta$
\end_inset

 with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 Each task in 
\begin_inset Formula $\gamma_{i}(\theta)$
\end_inset

 has direct access to 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks that other than 
\begin_inset Formula $\tau_{i}$
\end_inset

 that access at least one object in 
\begin_inset Formula $\Theta_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks that share any object with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Each task in 
\begin_inset Formula $\gamma_{i}$
\end_inset

 has direct access to at least one object in 
\begin_inset Formula $\Theta_{i}^{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum length atomic section (transaction) in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 that accesses object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i_{max}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum length atomic section (transaction) in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{max}(\Theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum length atomic section (transaction) in all tasks that accesses
 any object 
\begin_inset Formula $\theta\in\Theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{max}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Length of the longest atomic section (transaction) in all tasks.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $S(s_{i}^{k})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start time of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $S(s_{i}^{k})$
\end_inset

 is updated each time 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $max\_s_{ik}^{jl}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum length atomic section (transaction) in all tasks that accesses
 
\begin_inset Formula $\theta$
\end_inset

 and its priority is lower than 
\begin_inset Formula $p(s_{j}^{l})$
\end_inset

 and higher than 
\begin_inset Formula $p(s_{i}^{k})$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $max\_s_{ik}^{jl}(\Theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $max\{max\_s_{ik}^{jl}(\theta):\forall\theta\in\Theta\}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $W_{i}^{p}(s_{j}^{k})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum time 
\begin_inset Formula $s_{i}^{p}$
\end_inset

 aborts and retries due to a conflict with 
\begin_inset Formula $s_{j}^{k}$
\end_inset

.
 If 
\begin_inset Formula $s_{i}^{p}$
\end_inset

 was executing before 
\begin_inset Formula $s_{j}^{k}$
\end_inset

 was released, then 
\begin_inset Formula $s_{i}^{p}$
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset

interfered transaction
\begin_inset Quotes erd
\end_inset

, whereas 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $s_{j}^{k}$
\end_inset


\begin_inset Quotes erd
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset

interfering transaction
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta_{i}^{*}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of distincit objects not accessed directly by transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

, but can cause transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry.
 While 
\begin_inset Formula $\Theta_{i}$
\end_inset

 respresent 
\begin_inset Quotes eld
\end_inset

direct objects
\begin_inset Quotes erd
\end_inset

 accessed by 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\Theta_{i}^{*}$
\end_inset

 represent 
\begin_inset Quotes eld
\end_inset

indirect objects
\begin_inset Quotes erd
\end_inset

 accessed by transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\Theta_{i}\cap\Theta_{i}^{*}=\emptyset$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta_{i}^{ex}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Extended set of objects accessed 
\begin_inset Quotes eld
\end_inset

directly
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

indirectly
\begin_inset Quotes erd
\end_inset

 by 
\begin_inset Formula $\tau_{i}$
\end_inset

 (i.e., 
\begin_inset Formula $\Theta_{i}^{ex}=\Theta_{i}\cup\Theta_{i}^{*}$
\end_inset

).
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Theta_{i}^{k^{ex}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subset of objects in 
\begin_inset Formula $\Theta_{i}^{ex}$
\end_inset

 that are accessed by 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks, other than 
\begin_inset Formula $\tau_{i}$
\end_inset

, that access at least one object in 
\begin_inset Formula $\Theta_{i}^{*}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks, other than 
\begin_inset Formula $\tau_{i}$
\end_inset

, that access at least one object in 
\begin_inset Formula $\Theta_{i}^{ex}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}^{k^{ex}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks, other than 
\begin_inset Formula $\tau_{i}$
\end_inset

, that access objects in 
\begin_inset Formula $\Theta_{i}^{k^{ex}}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{i}(L)$
\end_inset

, 
\begin_inset Formula $RC_{i}$
\end_inset

, 
\begin_inset Formula $RC$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{i}(L)$
\end_inset

 is maximum retry cost of any job in 
\begin_inset Formula $\tau_{i}$
\end_inset

 due to conflict between transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 and transactions in other tasks during an interval 
\begin_inset Formula $L$
\end_inset

.
 If 
\begin_inset Formula $L$
\end_inset

 is omitted, then 
\begin_inset Formula $L=T_{i}$
\end_inset

.
 If 
\begin_inset Formula $i$
\end_inset

 is omitted, then 
\begin_inset Formula $i$
\end_inset

 can be any task (i.e., 
\begin_inset Formula $i\le n$
\end_inset

).
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{i_{re}}(L)$
\end_inset

, 
\begin_inset Formula $RC_{i_{re}}$
\end_inset

, 
\begin_inset Formula $RC_{re}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{i_{re}}(L)$
\end_inset

 is maximum retry cost of any job in 
\begin_inset Formula $\tau_{i}$
\end_inset

 due to release of higher priority jobs of tasks other than 
\begin_inset Formula $\tau_{i}$
\end_inset

 during an interval 
\begin_inset Formula $L$
\end_inset

.
 If 
\begin_inset Formula $L$
\end_inset

 is omitted, then 
\begin_inset Formula $L=T_{i}$
\end_inset

.
 If 
\begin_inset Formula $i$
\end_inset

 is omitted, then 
\begin_inset Formula $i$
\end_inset

 can be any task (i.e., 
\begin_inset Formula $i\le n$
\end_inset

).
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{i_{to}}(L)$
\end_inset

, 
\begin_inset Formula $RC_{to}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum total retry cost of any job in 
\begin_inset Formula $\tau_{i}$
\end_inset

 during an interval 
\begin_inset Formula $L$
\end_inset

 (i.e., 
\begin_inset Formula $RC_{i_{to}}(L)=RC_{i}(L)+RC_{i_{re}}(L)$
\end_inset

).
 If 
\begin_inset Formula $i$
\end_inset

 is known, then 
\begin_inset Formula $i$
\end_inset

 is omitted.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $W_{ij}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left
In absence of retry cost, 
\begin_inset Formula $W_{ij}(L)$
\end_inset

 is the amount of time any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 increases response time of any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $cp_{i}^{k}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Recorded checkpoint in 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 for the newly accessed object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Lock-free notations
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $r_{max}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum execution cost of a single iteration of any retry-loop lock-free
 of any task.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
System model
\end_layout

\begin_layout Standard
Sporadic, hard real time multiprocessor system with G-EDF, G-RMA.
 EDF CM is used with G-EDF systems, RMA CM is used with G-RMA, and FIFO
 CM is used with both.
 Any instance 
\begin_inset Formula $T_{i}^{k}$
\end_inset

 can have any number of atomic sections, of different lengths, and the relative
 deadline of each task is equal to its period.
\end_layout

\begin_layout Section
Response time of G-EDF system with EDF CM
\end_layout

\begin_layout Standard
To get the response time of task 
\begin_inset Formula $T_{i}$
\end_inset

 with synchronization controlled by STM with EDF CM, it must be noted that
 atomic sections of different tasks that access the same object run in a
 sequential order, not in parallel, because only one atomic section will
 execute while the others retry, or will discover that they should retry.
 This means that an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 can be delayed by the commulative sum of atomic sections of other tasks
 that share the same atomic object, not by parallelizing these atomic sections
 (as is done in response time analysis of multiprocessor system without
 shared resources).
 Toward this goal, we must first determine the maximum number of interferences
 of task 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Subsection
Maximum Interference of tasks with G-EDF scheduler
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:max_job_no_exist_j_interval_r}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Regardless of the used scheduler, maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can exist in time interval 
\begin_inset Formula $R$
\end_inset

 is upper bounded by 
\begin_inset Formula 
\begin{equation}
\left\lceil \frac{R}{T_{j}}\right\rceil +1\label{eq:max_job_no_exist_j_interval_r}
\end{equation}

\end_inset

where at most two jobs 
\begin_inset Formula $\tau_{j}$
\end_inset

 can be partially included in 
\begin_inset Formula $R$
\end_inset

.
 The remaining jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 are totally included in 
\begin_inset Formula $R$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Generally, 
\begin_inset Formula $R=aT_{j}+b$
\end_inset

, 
\begin_inset Formula $0\le b<T_{j}$
\end_inset

.
 
\begin_inset Formula $a$
\end_inset

 is the maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that contribute by their minimum periods 
\begin_inset Formula $T_{j}$
\end_inset

 during 
\begin_inset Formula $R$
\end_inset

.
 If 
\begin_inset Formula $b\ge T_{j}$
\end_inset

, then there are more than 
\begin_inset Formula $a$
\end_inset

 jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 contributing by their minimum periods 
\begin_inset Formula $T_{j}$
\end_inset

 during 
\begin_inset Formula $R$
\end_inset

, which contradicts definition of 
\begin_inset Formula $a$
\end_inset

.
 The remaining inverval 
\begin_inset Formula $b(=R-aT_{j},\, b>0)$
\end_inset

 can be devided between at most two jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

.
 If 
\begin_inset Formula $b$
\end_inset

 can be devided between more than two jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

, then there is more than 
\begin_inset Formula $a$
\end_inset

 jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that contribute by their minimum periods 
\begin_inset Formula $T_{j}$
\end_inset

 during 
\begin_inset Formula $R$
\end_inset

.
 This contradicts definition of 
\begin_inset Formula $a$
\end_inset

.
 So, if 
\begin_inset Formula $b>0$
\end_inset

, then maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can exist during 
\begin_inset Formula $R$
\end_inset

 is 
\begin_inset Formula $a+2=\left\lceil \frac{R}{T_{j}}\right\rceil +1$
\end_inset

 .
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $b=0$
\end_inset

, then jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 can be shifted to the left or the right during 
\begin_inset Formula $R$
\end_inset

.
 This results in 
\begin_inset Formula $a+1$
\end_inset

 jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 during 
\begin_inset Formula $R$
\end_inset

.
 So, if 
\begin_inset Formula $b=0$
\end_inset

, then maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can exist during 
\begin_inset Formula $R$
\end_inset

 is 
\begin_inset Formula $a+1=\left\lceil \frac{R}{T_{j}}\right\rceil +1$
\end_inset

.
 Claim follows.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:gedf_max_job_no_interfer_j_i}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $T_{i}=aT_{j}+b$
\end_inset

, 
\begin_inset Formula $0\le b<T_{j}$
\end_inset

.
 Under G-EDF scheduler, maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfer with one job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during time interval 
\begin_inset Formula $L(=T_{i}-f$
\end_inset

, 
\begin_inset Formula $0\le f<T_{i})$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
g_{ij}^{gedf}\left(L\right)=\begin{cases}
\left\lceil \frac{T_{i}}{T_{j}}\right\rceil  & ,\, f\le b\\
\\
\left\lceil \frac{L}{T_{j}}\right\rceil +1 & ,\, Otherwise
\end{cases}\label{eq:gedf_max_job_no_interfer_j_i}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $L=T_{i}-f=aT_{j}+b-f$
\end_inset

.
 If 
\begin_inset Formula $b-f\ge0$
\end_inset

, then following proof of Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{clm:max_job_no_exist_j_interval_r}
\end_layout

\end_inset

, 
\begin_inset Formula $b-f$
\end_inset

 can be devided between at most two jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 during 
\begin_inset Formula $L$
\end_inset

.
 These two jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 are: 1) 
\shape italic
carried-in job
\shape default
 (i.e., 
\begin_inset Formula $\tau_{j}^{s}$
\end_inset

 where 
\begin_inset Formula $r_{j}^{s}<r_{i}^{x}$
\end_inset

 and 
\begin_inset Formula $d_{j}^{s}<d_{i}^{x}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
cite{key-2}
\end_layout

\end_inset

) .
 2) 
\shape italic
carried-out job
\shape default
 (
\begin_inset Formula $\tau_{j}^{e}$
\end_inset

 where 
\begin_inset Formula $r_{j}^{e}>r_{i}^{x}$
\end_inset

 and 
\begin_inset Formula $d_{j}^{s}>d_{i}^{x}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
cite{key-2}
\end_layout

\end_inset

).
 Under G-EDF, only jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 with absolute deadline less than 
\begin_inset Formula $d_{i}^{x}$
\end_inset

 can interfer with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Thus, carried-out job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 cannot interfer with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 So, 
\begin_inset Formula $b-f$
\end_inset

 can be the contribution of only the carried-in job.
 Following proof of Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{clm:max_job_no_exist_j_interval_r}
\end_layout

\end_inset

, maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfer with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is 
\begin_inset Formula $a+1=\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 if 
\begin_inset Formula $f\le b$
\end_inset

.
 Otherwise, Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{clm:max_job_no_exist_j_interval_r}
\end_layout

\end_inset

 is used to determine maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 during 
\begin_inset Formula $L$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The maximum number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that can occur within the period of 
\begin_inset Formula $T_{i}$
\end_inset

 occurs when the deadline of one instance of the former coincides with the
 deadline of the latter as depicted in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 and shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

.
 The first instance (
\begin_inset Formula $T_{j}^{1}$
\end_inset

) is delayed by a suitable amount of jitter (
\begin_inset Formula $j_{j}$
\end_inset

) that makes it contributes by all its execution time into the period of
 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure1.eps
	scale 50
	BoundingBox 0bp 0bp 542bp 162bp
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig1"

\end_inset

Maximum interference between two tasks in G-EDF system
\end_layout

\end_inset


\end_layout

\end_inset

This can be proved by noting that 
\begin_inset Formula $\frac{T_{i}}{T_{j}}=c.T_{j}+\delta$
\end_inset

.
 
\series bold
\shape italic
In case 
\begin_inset Formula $\delta\ne0$
\end_inset


\series default
,
\shape default
 then part of an instance of 
\begin_inset Formula $T_{j}$
\end_inset

 contributes in the period of 
\begin_inset Formula $T_{i}$
\end_inset

.
 If this part is 
\begin_inset Formula $T_{j}^{1}$
\end_inset

, then it has a workload over 
\begin_inset Formula $T_{i}$
\end_inset

 because it has a shorter absolute deadline than 
\begin_inset Formula $T_{i}$
\end_inset

.
 Otherwise, if this part is left to the end, and the first instance of 
\begin_inset Formula $T_{j}$
\end_inset

 , 
\begin_inset Formula $T_{j}^{1}$
\end_inset

, conincides in its release with 
\begin_inset Formula $T_{i}$
\end_inset

 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig2"

\end_inset

, this means that 
\begin_inset Formula $T_{j}$
\end_inset

 has been shifted to right, and the absolute deadline of 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will be greater than that of 
\begin_inset Formula $T_{i}$
\end_inset

, so it will have no effect on it, and the workload of 
\begin_inset Formula $T_{j}$
\end_inset

 is lowered by one instance.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure2.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig2"

\end_inset

Relase of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 coinciedes with 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $T_{j}$
\end_inset

 is shifted to left by any amount until the deadline of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

coincides with the start of 
\begin_inset Formula $T_{i}$
\end_inset

, this will not have higher effect on 
\begin_inset Formula $T_{i}$
\end_inset

 because the deadline of 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 is still longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

 which will make no effect for this instance, meanwhile, it reduces the
 effect of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

.
 This is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig3"

\end_inset

.
 Thus the maximum number of 
\begin_inset Formula $T_{j}$
\end_inset

 instances that can interfere with 
\begin_inset Formula $T_{i}$
\end_inset

 in this case is 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure3.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig3"

\end_inset

Deadline of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 coincides with 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\begin_inset Formula $\delta=0$
\end_inset

,
\series default
\shape default
 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig4"

\end_inset

, then the maximum number of 
\begin_inset Formula $T_{j}$
\end_inset

 instances interfering with 
\begin_inset Formula $T_{i}$
\end_inset

 is still 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil$
\end_inset

 because if 
\begin_inset Formula $T_{j}^{1}$
\end_inset

is shifted right and delayed with jitter, it will enforce the deadline of
 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 to exceed that of 
\begin_inset Formula $T_{i}$
\end_inset

, so the addition of one instance resulted in subtraction of another.
 And if 
\begin_inset Formula $T_{j}$
\end_inset

 is shifted left, this will not make 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 has any effect on 
\begin_inset Formula $T_{i}$
\end_inset

 , because its absolute deadline is still longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

, until the deadline of 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 coincides with that of 
\begin_inset Formula $T_{i}$
\end_inset

, but in this case, 
\begin_inset Formula $T_{j}^{2}$
\end_inset

 will be removed completely from the period of 
\begin_inset Formula $T_{i}$
\end_inset

, and as before, the addition of one instance resulted in the cancelation
 of anoter.
 Then, the maximum number of interfering instances is still the same as
 before.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure4.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig4"

\end_inset


\begin_inset Formula $t(T_{i})$
\end_inset

 is an integral multiple of 
\begin_inset Formula $t(T_{j})$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This last case differs from that mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, where the maximum number of interferences is 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\lfloor\frac{T_{i}}{T_{j}}\rfloor+1$
\end_inset


\begin_inset Quotes erd
\end_inset

, which equals 
\begin_inset Formula $c+1$
\end_inset

, wherease it should be only 
\begin_inset Formula $c$
\end_inset

.
\end_layout

\begin_layout Standard
So, in all cases, the maximum number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that can be released during 
\begin_inset Formula $t(T_{i})$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
G_{ij}(t(T_{i}))=\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\label{eq1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the maximum workload contributed by 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 during the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
W_{ij}(t(T_{i}))=G_{ij}(t(T_{j})).c_{j}\label{eq8}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The workload defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq8"

\end_inset

 is consistent with situation shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

 and may be an upper bound for the maximum workload because in the case
 shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 contributes partially to 
\begin_inset Formula $T_{i}$
\end_inset

 rather than with all its WCET.
 So, a tighter value than that of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq8"

\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
W_{ij}^{*}(t(T_{i}))=\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor.c_{j}+min(c_{j},t(T_{i})-\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor.t(T_{j}))\label{eq11}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The bounds used in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 to calculate an upper bound on the response time for EDF systems compares
 between three formulas to take the minimum.
 The first one is useful when the calculated upper bound is not extended
 to reach the last instance of the interfering task, while the second one
 is used in that case because the maximum pattern of interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 changes according to whether it is calculated over the whole period of
 
\begin_inset Formula $T_{i}$
\end_inset

, or part of it.
 This is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9"

\end_inset

 where in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, the first instance 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 can contribute partially to 
\begin_inset Formula $T_{i}$
\end_inset

, but the last instance 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 contributes by its total WCET, this is the worst pattern of interference
 over 
\begin_inset Formula $t(T_{i})$
\end_inset

, wherease in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-b"

\end_inset

, interference pattern is calculated only over 
\begin_inset Formula $L$
\end_inset

, so the WCET of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 is totally included in the pattern, because instances of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 up to 
\begin_inset Formula $T_{j}^{k-1}$
\end_inset

 can contribute to the total workload over 
\begin_inset Formula $T_{i}$
\end_inset

 as their deadlines are shorter than that of 
\begin_inset Formula $T_{i}$
\end_inset

, while in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, the inclusion of the whole WCET of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 will exclude 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 because this will make its absolute deadline longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

.
 So, over period 
\begin_inset Formula $L$
\end_inset

, contribution of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
\hat{W}{}_{ij}(L)=(\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).c_{j}\label{eq12}
\end{equation}

\end_inset

which is a little different than that mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 because 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 disscusses response time analysis for a set of feasible tasks, but here
 it is not known yet whether these tasks are feasible or not.
\end_layout

\begin_layout Standard
So, the overall workload will be
\begin_inset Formula 
\begin{equation}
W_{ij}(L)=min(\hat{W}_{ij}(L),W_{ij}^{*}(t(T_{i})))\label{eq13}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure9-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure9-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9"

\end_inset

(a)Maximum interference during 
\begin_inset Formula $t(T_{i})$
\end_inset

 (b)Maximum interference during part 
\begin_inset Formula $L$
\end_inset

 of 
\begin_inset Formula $t(T_{i})$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retrial cost of atomic sections
\end_layout

\begin_layout Standard
To get the retrial cost of any atomic section under different types of scheduler
s with the specified CM, it must be noted that there are two reasons for
 retrial:- 1) conflict occurs between atomic sections.
 2) a task with lower priority, running on one of the processors, gets preempted
 by a higher priority task while the former is executing an atomic section.
 So, retrial cost of both must be calculated and summed together.
\end_layout

\begin_layout Subsubsection

\series bold
\shape italic
Retrial cost due to confliction between atomic sections
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
REMEMBER TO WRITE THE MORE CORRECT PROOF FOR RETRIAL OF ONE ATOMIC SECTION
 DUE TO ANOTHER ATOMIC SECTION (NOT DUE TO MULTIPLE ATOMIC SECTIONS).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If there are two tasks 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

, where the former is of longer absolute deadline than the latter, then
 EDF CM will give priority to conflicting atomic sections of 
\begin_inset Formula $T_{j}$
\end_inset

 over 
\begin_inset Formula $T_{i}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
 So, an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, will exprience its maximum dealy when it is at the end, and the one of
 
\begin_inset Formula $T_{j}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, is just beginning, then the CM will enforce 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 to retry.
 Despite validation time (i.
 e., eager or lazy), 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will retry for the same amount of time, which is the time of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5"

\end_inset

.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-a"

\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 validates at its beginning, because of early validation, and a conflict
 is detected.
 So, 
\begin_inset Formula $T_{i}$
\end_inset

 retries multiple times (because at each start of retrial, 
\begin_inset Formula $T_{i}$
\end_inset

 validates) during the execution of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 When 
\begin_inset Formula $T_{j}$
\end_inset

 finishes its atomic section, 
\begin_inset Formula $T_{i}$
\end_inset

 executes its own.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-b"

\end_inset

, 
\begin_inset Formula $T_{i}$
\end_inset

 tries to validate at its end (because it is lazy validation), but it finds
 a conflict with 
\begin_inset Formula $T_{j}$
\end_inset

, so it has to retry, and beacuse its atomic section length is shorter than
 that of 
\begin_inset Formula $T_{j}$
\end_inset

, it tries to validate again within the execution period of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, but EDF CM tells it to retry again.
 This process continues until 
\begin_inset Formula $T_{j}$
\end_inset

 finishes its atomic section.
 If 
\begin_inset Formula $T_{i}$
\end_inset

's atomic section length is longer than that of 
\begin_inset Formula $T_{j}$
\end_inset

's, 
\begin_inset Formula $T_{i}$
\end_inset

 would have taken the same amount of tiem to retry, because 
\begin_inset Formula $T_{j}$
\end_inset

 will validate when 
\begin_inset Formula $T_{i}$
\end_inset

 is retrying, and 
\begin_inset Formula $T_{i}$
\end_inset

 will retry again as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-c"

\end_inset

.
 So, the retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be 
\begin_inset Formula $len(s_{i}^{k}(\theta)+s_{j}^{l}(\theta))$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure5-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename figures/figure5-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure5-c.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\size small
\begin_inset CommandInset label
LatexCommand label
name "fig5-c"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5"

\end_inset

(a)Early validation (b)Lazy validation with 
\begin_inset Formula $s_{i}^{k}(\theta)\le s_{j}^{l}(\theta)$
\end_inset

 (c)
\size small
Lazy validation with 
\begin_inset Formula $s_{i}^{k}(\theta)>s_{j}^{l}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
But what if there are multiple tasks interfering with 
\begin_inset Formula $T_{i}$
\end_inset

 or interfering with each other and 
\begin_inset Formula $T_{i}$
\end_inset

, as shown in Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-a"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

.
 We should note that these figures are only two examples of many possible
 patterns for interference between tasks and the resulting transactional
 retries.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{mydef}
\backslash
label{def:re_con_tx}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ReCon\left(s_{i}^{k},t_{s},t_{e}\right)$
\end_inset

 is the highest priority transaction at time interval 
\begin_inset Formula $[t_{s},t_{e}]$
\end_inset

 that is conflicting 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:effect_one_tx_in_rc_multiple_txs}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let conflict between transactions be resolved by priority (i.e., lower priority
 transaction aborts and retries due to higher priority transactions).
 Let 
\begin_inset Formula $conf\left\{ s_{i}^{k}\right\} $
\end_inset

 be the set of all transactions that do not belong to any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 and are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Each transaction 
\begin_inset Formula $s_{j}^{l}\in conf\left\{ s_{i}^{k}\right\} $
\end_inset

 contributes to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by at most 
\begin_inset Formula 
\begin{equation}
len\left(s_{j}^{l}+max\_s_{ik}^{jl}(\Theta)\right)\label{eq:effect_one_tx_in_rc_multiple_txs}
\end{equation}

\end_inset

where 
\begin_inset Formula $max\_s_{ik}^{jl}(\Theta)$
\end_inset

 is the maximum length atomic section (transaction) in all tasks that accesses
 
\begin_inset Formula $\Theta$
\end_inset

 and its priority is lower than 
\begin_inset Formula $p(s_{j}^{l})$
\end_inset

 and higher than 
\begin_inset Formula $p(s_{i}^{k})$
\end_inset

.
 
\begin_inset Formula $max\_s_{ik}^{jl}\not\in s_{i},\, s_{j}$
\end_inset

 and 
\begin_inset Formula $\Theta\subseteq\Theta_{i}^{k}\cap\Theta_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At any point of time when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries due to other conflicting transactions, either 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is not running, or 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is the only transaction that currently conflicts only with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, or a set of transactions including 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 are currently running and conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 As conflict is resolved by transactional priority, then only transactions
 with higher priorities than 
\begin_inset Formula $p(s_{i}^{k})$
\end_inset

 will cause 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to abort and retry.
 So, at any point of time when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries, either:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{j}^{l}$
\end_inset

 has finished before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 starts.
 Or, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 starts after 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 finishes.
 In this case, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will not cause 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to abort and retry.
 Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:effect_one_tx_in_rc_multiple_txs"

\end_inset

) still upper bounds effect of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{j}^{l}$
\end_inset

 the only transaction that currently aborting 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 So, Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:effect_one_tx_in_rc_multiple_txs"

\end_inset

) follows directly from Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{clm:basic_2_tx_rc}
\end_layout

\end_inset

 as 
\begin_inset Formula $len\left(s_{i}^{k}\right)\le len\left(max\_s_{ik}^{jl}(\Theta)\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
A set of transactions 
\begin_inset Formula $S\subseteq conf\{s_{i}^{k}\}$
\end_inset

 are currently aborting 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}\in S$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 itself is not aborting and retrying due to any other transaction with higher
 priority than 
\begin_inset Formula $p(s_{j}^{l})$
\end_inset

.
 So, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 executes only once.
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 aborts one of the transactions with lower priority than 
\begin_inset Formula $p(s_{j}^{l})$
\end_inset

 for only once.
 Thus, Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:effect_one_tx_in_rc_multiple_txs"

\end_inset

) upper bounds effect of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Enumerate
A set of transactions 
\begin_inset Formula $S\subseteq conf\{s_{i}^{k}\}$
\end_inset

 are currently aborting 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}\in S$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 itself is aborting and retrying due to other transactions with higher priority
 than 
\begin_inset Formula $p(s_{j}^{l})$
\end_inset

.
 Without losing generality, let 
\begin_inset Formula $s_{h}^{u}$
\end_inset

 be the transaction that is currently aborting 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, and 
\begin_inset Formula $s_{h}^{u}$
\end_inset

 is not abroting and retrying due to any other higher priority transaction.
 Then, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 are both waiting for 
\begin_inset Formula $s_{h}^{u}$
\end_inset

 to finish.
 Thus, while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is retrying, effect of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is covered by effect of 
\begin_inset Formula $s_{h}^{u}$
\end_inset

 to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 When 
\begin_inset Formula $s_{h}^{u}$
\end_inset

 finishes and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is not aborted by any other higher priority transaction, effect of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 to the retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is the same as in the third case.
 By expanding this case to more than three tansactions, then each transaction
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is either aborting one of the lower priority transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 only once, or 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 are aborted by a higher priority transaction 
\begin_inset Formula $s_{h}^{u}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In each case, each atomic section of the shorter deadline tasks contribute
 to the dealy of 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

 by its total length, plus a retrial to some atomic section in the longer
 deadline tasks.
 For example, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 contributes by 
\begin_inset Formula $len(s_{j}^{l}(\theta)+s_{i}^{p}(\theta))$
\end_inset

 in both figures, 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

 causes a retrial to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

, and 
\begin_inset Formula $s_{h}^{w}(\theta)$
\end_inset

 causes a retrial to 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

 in the same figure.
\end_layout

\begin_layout Standard
As it is not known in advance what atomic section will be retried because
 of another one, then it can be assumed that each atomic section (that share
 the same object with the studied one) in a longer deadline task contributes
 by its total length, in addition to the maximum length between all atomic
 sections that share the same object, 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

.
\begin_inset Formula 
\begin{equation}
\mbox{\ensuremath{W_{i}^{p}(s_{j}^{k}(\theta))=len(s_{j}^{l}(\theta)+s_{max}(\theta))}}\label{eq2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure6-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure6-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/circle.eps
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Replaced in calculations by 
\begin_inset Formula $s_{max}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/dotted_circle.eps
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Replaced in calculations by 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6"

\end_inset

(a)Other tasks interfere only with 
\begin_inset Formula $T_{i}$
\end_inset

 (b)All tasks interfere with each other and 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, the total contribution- of all atomic sections of all other tasks that
 share objects with the studeid task- to the retrial cost of the studied
 task in the period 
\begin_inset Formula $t(T_{i})$
\end_inset

 is 
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(T_{i}) & = & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))\label{eq3}\\
 &  & -s_{max}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}(\theta)\in s_{j}}len(s_{j}(\theta)+s_{max}(\theta))$
\end_inset

 referes to the contribution of all instances of 
\begin_inset Formula $T_{j}$
\end_inset

-as calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq1"

\end_inset

) - during the period of 
\begin_inset Formula $T_{i}$
\end_inset

, and this contribution is added to all tasks.
 The last part in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

)- 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $s_{i_{max}}(\theta)-s_{max}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

- is added because the it is known that the last atomic section to execute
 is 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

, and one of the other atomic sections (e.
 g.; 
\begin_inset Formula $s_{m}^{n}(\theta)$
\end_inset

) should have as a contribution 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{i_{max}}(\theta))$
\end_inset

 instead of 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{max}(\theta))$
\end_inset

, that is why one 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 is subtracted, and 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is added.
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is taken to get the worst case contribution by all other tasks to the studied
 task, as one atomic section in the latter can be interfered by more than
 one atomic section in any task, but the reverse is not true, and there
 can be multiple atomic sections in the studied task that share the same
 object.
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) can be modified a little by noting that an atomic section conflicts with
 the sections of other tasks, not with its own task, because it is a hard
 real time sporadic model, so each instance must finish before the next
 begins.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will turn to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

).
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(T_{i}) & = & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))\label{eq4}\\
 &  & -\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{max}^{*}(\theta)\in s(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{max}^{*}(\theta)\not\in s_{j}(\theta)$
\end_inset

 because 
\begin_inset Formula $T_{j}$
\end_inset

 will not cause a retrial to one of its instances.
\end_layout

\begin_layout Itemize
To get 
\begin_inset Formula $\bar{s}{}_{max}(\theta)$
\end_inset

, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
the maximum atomic section of each task that accesse object 
\begin_inset Formula $\theta$
\end_inset

 is grouped into an array of non increasing order of their lengths, and
 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 will be the first one, while 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\bar{s}{}_{max}(\theta)$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
 will be the next.
 This can be illustrated by Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig7"

\end_inset

, where the maximum atomic section of each task that access object 
\begin_inset Formula $\theta$
\end_inset

 is associated with its corresponding task.
 When eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) is applied, all tasks but 
\begin_inset Formula $T_{j}$
\end_inset

 will choose 
\begin_inset Formula $s_{j_{max}}(\theta)$
\end_inset

 as the value of 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

, as it is the maximum atomic section not assciated with the interfering
 task.
 But when 
\begin_inset Formula $T_{j}$
\end_inset

 is the one whose contribution is studeid, it will choose 
\begin_inset Formula $s_{k_{max}}(\theta)$
\end_inset

 as it is the maximum one not assciated with 
\begin_inset Formula $T_{j}$
\end_inset

.
 This way, it can be seen that the maximum value alawys lies between two
 values.
 Of course, these two values can be equal, or the maximum value can be associate
d with the studeid task itself, not with any one of the interfering tasks,
 in which case, the chosen value will alawys be the one associated with
 the studied task, but still the chosen value lies between the most two
 maximum values.
 This means that the subtracted 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) must be replaced with one of these two values, but as it is not known
 a priori which one to use as it is not known which one will interfer with
 the studied task, the minimum between them is chosen to get the worst case
 retrial cost (as this value is going to be subtracted), and this minimum
 is the second maximum.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure7.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig7"

\end_inset

Values associated with 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
If the maximum atomic section (
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

) is associated with the studeid task (
\begin_inset Formula $T_{i}$
\end_inset

), then all other tasks will choose it, and the result of eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) for this specific object 
\begin_inset Formula $\theta$
\end_inset

 (i.
 e.; if 
\begin_inset Formula $\theta$
\end_inset

 is the only shared object between tasks) will be 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{i_{max}}(\theta)-s_{i_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

, wherease eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{i_{max}}(\theta)-s_{k_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

 (assuming that 
\begin_inset Formula $\bar{s}_{max}(\theta)=s_{k_{max}}(\theta)$
\end_inset

), but as 
\begin_inset Formula $s_{k_{max}}(\theta)\leq s_{i_{max}}(\theta)$
\end_inset

, then eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will give a smaller or equal value to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) for object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Standard
If the maximum atomic section (
\begin_inset Formula $s_{j_{max}}(\theta)$
\end_inset

) is associated with some other task (
\begin_inset Formula $T_{j}$
\end_inset

), not with the studied task (
\begin_inset Formula $T_{i}$
\end_inset

), and 
\begin_inset Formula $T_{j}$
\end_inset

 has 
\begin_inset Formula $n$
\end_inset

 atomic sections that share object 
\begin_inset Formula $\theta$
\end_inset

, and 
\begin_inset Formula $\bar{s}_{max}(\theta)=s_{k_{max}}(\theta)$
\end_inset

.
 Then, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

)- for object 
\begin_inset Formula $\theta$
\end_inset

- will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{j_{max}}(\theta)+n.s_{j_{max}}(\theta)-s_{j_{max}}(\theta)+s_{i_{max}}(\theta)=Const+(p+n-1).s_{j_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

, while eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{j_{max}}(\theta)+n.s_{k_{max}}(\theta)-s_{k_{max}}(\theta)+s_{i_{max}}(\theta)=Const+p.s_{j_{max}}(\theta)+(n-1).s_{k_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 If 
\begin_inset Formula $n=1$
\end_inset

, then both equations give the same result, otherwise, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will give a smaller value than eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

).
\end_layout

\begin_layout Standard
It can be seen that the two equations can differ according the considered
 object, but we can alawys take the minimum one for the considered object.
 So, equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) can be combined into eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(T_{i})=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))\\
-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))\\
-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\end{cases}\label{eq5}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
\shape italic
Retrial cost due to preemption by higher priority tasks
\end_layout

\begin_layout Standard
When the studeid job (
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

) has a long absolute deadline among all tasks running on the 
\begin_inset Formula $m$
\end_inset

 processors, and another job (
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

) is released 
\begin_inset Formula $d_{j}^{l}<d_{i}^{x}$
\end_inset

, then 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 will be preempted in favor of 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

, but this can happen when 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is at the end of one of its atomic sections, which will enforce it to retry-
 despite there is no conflict .
 This situation is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig8"

\end_inset

.
\end_layout

\begin_layout Standard
Generally, for any instance 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 to be able to preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, then two conditions must be satisfied: 
\begin_inset Formula $r_{i}^{x}<r_{j}^{l}<d_{i}^{x}$
\end_inset

, and 
\begin_inset Formula $d_{j}^{l}\le d_{i}^{x}$
\end_inset

.
 Wihout the first condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 would have been released already before 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and it will not preempt it.
 Without the second condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 will be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and will not preempt it.
 So, If 
\begin_inset Formula $D_{j}\ge D_{i}$
\end_inset

, then no instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 will preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

because there will be at most one instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 with higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, and this instance must have been released before 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the first condition.
 Otherwise, this instance will be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the second condition.
\end_layout

\begin_layout Standard
So, to get the 
\begin_inset Formula $RC_{release}$
\end_inset

 of any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, only tasks with shorter relative deadline than 
\begin_inset Formula $D_{i}$
\end_inset

 are going to be considered as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(L)=\sum_{\tau_{j}\in\zeta_{i}}\begin{cases}
\left\lceil \frac{L}{T_{j}}\right\rceil s_{i_{max}} & ,L\le T_{i}-T_{j}\\
\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}} & ,L>T_{i}-T_{j}
\end{cases}\label{eq6}
\end{equation}

\end_inset

where 
\begin_inset Formula $\zeta_{i}$
\end_inset

 is the set of tasks with relative deadline shorter than 
\begin_inset Formula $D_{i}$
\end_inset

, and 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 is the longest transaction in 
\begin_inset Formula $\tau_{i}$
\end_inset

 as it is assumed that 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 preempts 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 when it is executing 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 to get the worst case scenario.
\end_layout

\begin_layout Standard
Although the total number of instances of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that are released during any interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{i}}\right\rceil +1$
\end_inset

, but for the case of G-EDF, carried-in and carried-out jobs are discarded
 because carried-in jobs are released before 
\begin_inset Formula $r_{i}^{x}$
\end_inset

, which violates the first condition mentioned above, while carried-out
 jobs are of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the second condition.
 This is why ceiling is used in the first case of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

) and floor is used in the second case.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure8.eps
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig8"

\end_inset

Transactional retries due to release of higher priority tasks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, the total retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 will be
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(T_{i})=RC_{conflict}(T_{i})+RC_{release}(T_{i})\label{eq7}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Upper bound on response time
\end_layout

\begin_layout Standard
To get an upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $RC(T_{i})$
\end_inset

 must be added to the workload by other tasks during the non-atomic execution
 of 
\begin_inset Formula $T_{i}$
\end_inset

.
 But this requires modification of WCET of each task as follows:-
\end_layout

\begin_layout Standard
WCET (
\begin_inset Formula $c_{j}$
\end_inset

) of each interfering task (
\begin_inset Formula $T_{j}$
\end_inset

) should be inflated to accomodate for the interference of tasks other than
 the studied one (
\begin_inset Formula $T_{k},$
\end_inset

 
\begin_inset Formula $k\ne j,i$
\end_inset

), meanwhile, atomic region that access shared objects between 
\begin_inset Formula $T_{j}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

 should not be considered in the inflation cost becuase they are already
 calculated in the retrial cost of the studied task (
\begin_inset Formula $T_{i}$
\end_inset

).
 So, the new WCET for 
\begin_inset Formula $T_{j}$
\end_inset

 will be
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{ji}=c_{j}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))+RC_{conflict}(T_{ji})+RC_{releas}(T_{ji})\label{eq9}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $c_{ji}$
\end_inset

 is the new WCET of 
\begin_inset Formula $T_{j}$
\end_inset

 relative to the studied task 
\begin_inset Formula $T_{i}$
\end_inset

.
 This length changes according to the studied task.
\end_layout

\begin_layout Standard
\begin_inset Formula $len(s_{j}(\theta))$
\end_inset

 is the sum of lengths of all atomic sections in 
\begin_inset Formula $T_{j}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}(T_{ji})$
\end_inset

 is calculated as in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

 without including shared objects between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{release}(T_{ji})$
\end_inset

 is calculated as in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

 without considering the release of any instance of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
The second term in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq9"

\end_inset

 is included because the length of these atomic sections is already included
 in the retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

, so as in the third term.
 The last term excludes any release of any instance of 
\begin_inset Formula $T_{i}$
\end_inset

 because it is assumed that 
\begin_inset Formula $T_{j}$
\end_inset

 is the one that affects 
\begin_inset Formula $T_{i}$
\end_inset

, not the reverse.
 Because of this, the calculated WCET is relative to the studied task, as
 it changes form task to task.
\end_layout

\begin_layout Standard
So, the upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated by the iterative equation (which is modified from theorm
 6 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

):-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(T_{i})+\lfloor\frac{1}{m}\sum_{j\ne i}W_{ij}(R_{i}^{up})\rfloor\label{eq10}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $R_{i}^{up}$
\end_inset

 is the iterative calculated upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

, and its initial value is 
\begin_inset Formula $c_{i}+RC(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

, but 
\begin_inset Formula $W_{ij}^{*}(t(T_{i}))$
\end_inset

 will be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq11"

\end_inset

) with replacing 
\begin_inset Formula $c_{j}$
\end_inset

 with 
\begin_inset Formula $c_{ji}$
\end_inset

, and 
\begin_inset Formula $\hat{W}_{ij}(L)$
\end_inset

 will be changed to 
\begin_inset Formula 
\begin{equation}
\hat{W}_{ij}(L(T_{i}))=max\begin{cases}
(\lceil\frac{L-c_{ji}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))}{t(T_{j})}\rceil+1).c_{ji}\\
\lceil\frac{L-c_{j}}{t(T_{j})}\rceil.c_{ji}+c_{j}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))
\end{cases}\label{eq14}
\end{equation}

\end_inset

where the top term is the same as that calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

) but with replacing 
\begin_inset Formula $c_{j}$
\end_inset

 with 
\begin_inset Formula $c_{ji}$
\end_inset

 and addition of legnths of atomic sections shared between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

.
 Although these lengths are already included in the retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

, but they are added here to get an approximate right start time for other
 instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that affect 
\begin_inset Formula $T_{i}$
\end_inset

.
 It is approximate because the added atomic sections are not subject to
 retrial by other tasks (because the retrial is included in 
\begin_inset Formula $RC(T_{i})$
\end_inset

), but calculations are still valid because inclusion of retrial to these
 sections will reduce the output of the ceiling in the top term, so it still
 gives a maximum value.
 
\end_layout

\begin_layout Standard
The lower term in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

) does the same except for the first instance of 
\begin_inset Formula $T_{j}$
\end_inset

 which contributes by only 
\begin_inset Formula $c_{j}$
\end_inset

, and the shared atomic sections between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

 are excluded from this first instance.
\end_layout

\begin_layout Standard
These two terms are compared becuase 
\begin_inset Formula $\lceil\frac{L-c_{j}}{t(T_{j})}\rceil.c_{ji}>\lceil\frac{L-c_{ji}}{t(T_{j})}\rceil.c_{ji}$
\end_inset

 but 
\begin_inset Formula $c_{ji}>c_{j}$
\end_inset

, this makes a tradeoff beween these two terms, so the maximum is chosen.
\end_layout

\begin_layout Subsubsection
Tighter upper bound on response time
\end_layout

\begin_layout Standard
To get a tighter upper bound on response time of 
\begin_inset Formula $T_{i}$
\end_inset

, the 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will not be fixed (as is done in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) because it is calculated over the entire period of 
\begin_inset Formula $T_{i}$
\end_inset

), rather it will change according to 
\begin_inset Formula $R_{i}^{up}$
\end_inset

.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be changed to include the modified number of interfering instances
 in the same way this number is calculated in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

), but when calculating this number for the entire 
\begin_inset Formula $t(T_{i})$
\end_inset

, a situation like that shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

 can happen.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure10.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig10"

\end_inset

Atomic sections of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 contributing to 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:rc_i_j_gedf_Ti_carry_in}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under ECM, upper bound on total retry cost given by Eq(
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq3}
\end_layout

\end_inset

) can be titghtened by considering carried_in job of each 
\begin_inset Formula $\tau_{j}$
\end_inset

 (i.e., 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

 where 
\begin_inset Formula $r_{j}^{in}<r_{i}^{x}$
\end_inset

 and 
\begin_inset Formula $d_{j}^{in}<d_{i}^{x}$
\end_inset

 as defined in
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
cite{key-2}
\end_layout

\end_inset

) conflicting with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during interval 
\begin_inset Formula $L=T_{i}-f$
\end_inset

, where 
\begin_inset Formula $0\le f<T_{i}$
\end_inset

, 
\begin_inset Formula $T_{i}=aT_{j}+b$
\end_inset

, 
\begin_inset Formula $a=\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

 and 
\begin_inset Formula $f\le b$
\end_inset

.
 Eq(
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq3}
\end_layout

\end_inset

) will be modified to 
\series bold

\begin_inset Formula 
\[
RC_{i}(L)\le\begin{cases}
\sum_{\tau_{j}\in\gamma_{i}}\left(\lambda_{1}\left(j\right)+\chi\left(i,j\right)\right) & ,f\le b\\
\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\forall s_{j}^{l},\left(\Theta=\Theta_{i}\cap\Theta_{j}^{l}\right)\neq\emptyset}len\left(s_{j}^{l}+s_{max}(\Theta)\right)\right) & ,Otherwise
\end{cases}
\]

\end_inset


\series default
where
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{max}\not\in s_{j}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda_{1}\left(j\right)=\sum_{\forall s_{j}^{l}\in\left[d_{j}^{in}-\delta,d_{j}^{in}\right],\left(\Theta=\Theta_{i}\cap\Theta_{j}^{l}\right)}len\left(s_{j}^{l^{*}}+s_{max}\left(\Theta\right)\right)$
\end_inset

, where 
\begin_inset Formula $\delta=min\left(c_{j},b\right)$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l^{*}}$
\end_inset

 is the part of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 that is contained in interval 
\begin_inset Formula $\left[d_{j}^{in}-\delta,d_{j}^{in}\right]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\chi\left(i,j\right)=\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \sum_{\forall s_{j}^{l},\left(\Theta=\Theta_{i}\cap\Theta_{j}^{l}\right)\neq\emptyset}len\left(s_{j}^{l}+s_{max}\left(\Theta\right)\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Following proof of Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{clm:gedf_max_job_no_interfer_j_i}
\end_layout

\end_inset

, maximum number of jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfere with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

.
 By definition of carried-in jobs
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
cite{key-2}
\end_layout

\end_inset

 and G-EDF scheduler, there will be 
\begin_inset Formula $\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

 jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that contribute by their whole periods 
\begin_inset Formula $T_{j}$
\end_inset

 in the interval 
\begin_inset Formula $L$
\end_inset

.
 Carried-in job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 (i.e., 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

) will contribute by at most 
\begin_inset Formula $\delta=min\left(c_{j},b\right)$
\end_inset

 during 
\begin_inset Formula $L$
\end_inset

.
 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

 is delayed by its maximum jitter to give its maximum contribution during
 
\begin_inset Formula $L$
\end_inset

.
 Thus, 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

 starts execution at 
\begin_inset Formula $d_{j}^{in}-c_{j}$
\end_inset

.
 Consequently, only transactions of 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

 that are contained in 
\begin_inset Formula $\left[d_{j}^{in}-\delta,d_{j}^{in}\right]$
\end_inset

 can contribute in the interval 
\begin_inset Formula $L$
\end_inset

.
 Also, if transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is partially contained in 
\begin_inset Formula $\left[d_{j}^{in}-\delta,d_{j}^{in}\right]$
\end_inset

, only the part of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 contained in 
\begin_inset Formula $\left[d_{j}^{in}-\delta,d_{j}^{in}\right]$
\end_inset

 (i.e., 
\begin_inset Formula $s_{j}^{l^{*}}$
\end_inset

) can conflict with transactions in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 
\begin_inset Formula $\lambda(j)$
\end_inset

 stands for the retry cost of transactions in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to conflict with transactions of 
\begin_inset Formula $\tau_{j}^{in}$
\end_inset

.
 Whereas, 
\begin_inset Formula $\chi(i,j)$
\end_inset

 stands for the retry cost of transactions in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to conflict with transactions of other jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 (i.e., non carried-in jobs).
 Combining the previous notions with Claim
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{gedf-edf}
\end_layout

\end_inset

, Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Atomic sections of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 that are contained in period 
\begin_inset Formula $\delta$
\end_inset

 are the only ones that at most can contribute to the 
\begin_inset Formula $RC(T_{i})$
\end_inset

, of course they can be lower, but cannot be greater because 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 has been delayed by its maximum jitter, so no more atomic sections can
 enter period 
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1})]$
\end_inset

.
 Besides, 
\begin_inset Formula $T_{i}$
\end_inset

 can be released in the middle of any atomic section that shares an object
 with it, so only length 
\begin_inset Formula $\mu$
\end_inset

 of this atomic section will be considered, but the effect of this 
\begin_inset Formula $\mu$
\end_inset

 will still be the retrial of one of the other atomic sections.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be modified as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(t(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l}(\theta)\in[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}}len(s_{j}^{l^{*}}(\theta)+s_{max}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l}(\theta)\in[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}}len(s_{j}^{l^{*}}(\theta)+s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\end{cases}\label{eq15}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{j}^{l^{*}}(\theta)$
\end_inset

 is the part of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 that is included in 
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}$
\end_inset

 contains 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 if it is partially or totaly included in it.
 In the latter case, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will contribute by its included length 
\begin_inset Formula $\mu$
\end_inset

.
\end_layout

\begin_layout Standard
Now, it is time to compute 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 during a period of length 
\begin_inset Formula $L$
\end_inset

 which does not extend to the last instance of 
\begin_inset Formula $T_{j}$
\end_inset

.
 In this case, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) .
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(L(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1)\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)\\
+s_{max}(\theta))))-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1)\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)\\
+s_{max}^{*}(\theta))))-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}
\end{cases}\label{eq16}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 during the upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq17"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(R_{i}^{up})=min\begin{cases}
RC_{conflict}(R_{i}^{up}(T_{i}))\\
RC_{conflict}(t(T_{i}))
\end{cases}\label{eq17}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Formula $RC_{release}(T_{i})$
\end_inset


\series default
 is also modified to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq18"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(R_{i}^{up})=\sum_{T_{k}\in\zeta(T_{i})}(\lfloor\frac{R_{i}}{T_{k}}\rfloor.s_{i_{max}}(\theta))\label{eq18}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the final retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq19"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(R_{i}^{up})=RC_{conflict}(R_{i}^{up})+RC_{release}(R_{i}^{up})\label{eq19}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, the final upper bound on response time of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) with replacing 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 with 
\begin_inset Formula $RC(R_{i}^{up})$
\end_inset

.
\end_layout

\begin_layout Section
Response time of G-RMA system with RMA CM
\end_layout

\begin_layout Standard
As G-RMA is a fixed scheduler, 
\begin_inset Formula $T_{i}$
\end_inset

 will be interfered by a specific set of tasks whose priorities are higher
 than or equal to that of 
\begin_inset Formula $T_{i}$
\end_inset

 (
\begin_inset Formula $p(T_{j})\ge p(T_{i})$
\end_inset

).
\end_layout

\begin_layout Subsection
Maximum Interference of tasks with G-RMA scheduler
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 represents the maximum interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 under G-RMA.
 As 
\begin_inset Formula $T_{j}$
\end_inset

 is of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will interfere with 
\begin_inset Formula $T_{i}$
\end_inset

 even if it is not totally included in 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 Unlike the G-EDF case shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

 where only the 
\begin_inset Formula $\delta$
\end_inset

 part of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 is considered, in G-RMA, 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will contribute with the whole 
\begin_inset Formula $c_{j}$
\end_inset

 and all atomic sections contained in 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will be considered.
 This is becasue in G-EDF, the worst case pattern releases 
\begin_inset Formula $T_{i}$
\end_inset

 before 
\begin_inset Formula $d(T_{j}^{1})$
\end_inset

 by
\begin_inset Formula $\delta$
\end_inset

 time units, and 
\begin_inset Formula $T_{i}$
\end_inset

 cannot be interfered before it is released, but in G-RMA, 
\begin_inset Formula $T_{i}$
\end_inset

 is already released, and can be interfered by the whole 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 even if this is going to render it infeasible.
\end_layout

\begin_layout Standard
So, the maximum contribution of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 for any period 
\begin_inset Formula $L$
\end_inset

 can be deduced from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 as 
\begin_inset Formula $W_{ij}(L(T_{i}))=(\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).c_{j}$
\end_inset

, where 
\begin_inset Formula $L$
\end_inset

 can extend to 
\begin_inset Formula $t(T_{i})$
\end_inset

, and not like the case of G-EDF where the pattern of interference is different
 for each interval.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure11.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig11"

\end_inset

Maximum interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 in G-RMA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retrial cost due to conflict between atomic sections
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) is used to calculate the retrial cost due to conflict between atomic sections.
 It is the same as eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) with some modifications as we do not have get the minimum of two formulas,
 because any atomic section in 
\begin_inset Formula $T_{j}$
\end_inset

 will cause retrial to one of the atomic sections in lower or equal priority
 tasks; that is why 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is used.
 Also, only tasks of higher or equal priority to 
\begin_inset Formula $T_{i}$
\end_inset

 are considered as they are the only ones to interfere with it.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i})) & = & \sum_{\theta\in\theta_{i}}((\sum_{(T_{j}\in\gamma(\theta))\wedge(p(T_{j})\ge p(T_{i}))}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\label{eq20}\\
 &  & \sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{j}(\theta))))-s_{max}^{j}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $L(T_{i})$
\end_inset

 can be extended to 
\begin_inset Formula $t(T_{i})$
\end_inset

 because of the fixed priority.
\end_layout

\begin_layout Subsection
Retrial cost due to release of higher priority tasks
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq18"

\end_inset

) can be modified to get the retrial cost due to release of higher priority
 tasks.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(L(T_{i}))=\sum_{p(T_{k})\ge p(T_{i})}(\lceil\frac{L}{T_{k}}\rceil.s_{i_{max}}(\theta))\label{eq21}
\end{equation}

\end_inset

The interval 
\begin_inset Formula $L$
\end_inset

 in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) can be extended to cover the whole period of 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 So, the total retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 (
\begin_inset Formula $RC(R_{i}^{up})$
\end_inset

) can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq19"

\end_inset

).
\end_layout

\begin_layout Subsection
Upper bound on response time
\end_layout

\begin_layout Standard
Upper bound can be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq22"

\end_inset

)
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(R_{i}^{up})+\lfloor\frac{1}{m}\sum_{j\ne i}\hat{W}{}_{ij}(R_{i}^{up})\rfloor\label{eq22}
\end{equation}

\end_inset

where 
\begin_inset Formula $\hat{W}_{ij}(R_{i}^{up})$
\end_inset

 is calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

) and 
\begin_inset Formula $c_{ji}$
\end_inset

 is calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq9"

\end_inset

) but 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{release}(T_{i})$
\end_inset

 are calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq21"

\end_inset

) respectively.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Response-time-of FIFO CM"

\end_inset

Response time of G-EDF and G-RMA system with FIFO CM
\end_layout

\begin_layout Standard
In FIFO CM, transactions are executed in the order they arrive.
 This way, the effect of an atomic section of 
\begin_inset Formula $T_{j}$
\end_inset

 to one in 
\begin_inset Formula $T_{i}$
\end_inset

 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig12-a"

\end_inset

 for early validation and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig12-b"

\end_inset

 for lazy validation.
 In both cases, 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 must retry for at most 
\begin_inset Formula $len(s_{j}^{p}(\theta))$
\end_inset

, which is less than that of EDF CM and RMA CM, but a higher priority task
 can be delayed by a lower one if the latter's atomic section arrives earlier
 than the former.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure12-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure12-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12"

\end_inset

(a)Early validation (b)Lazy validation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Retrial of atomic sections here does not depend on the scheduler, rather
 it only depends on the arrival pattern, so conflict retrial cost (
\begin_inset Formula $RC_{conflict}$
\end_inset

) will be the same for both G-EDF and G-RMA systems, and the maximum pattern
 of interference will also be the same as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

, but this pattern differs when calculating the release retrial cost (
\begin_inset Formula $RC_{release}$
\end_inset

) and the contribution of other tasks during the non-atomic part of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}$
\end_inset

 can be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq23"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC_{conflict}(L(T_{i}))=\sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))\label{eq23}
\end{equation}

\end_inset

where the lengths of all atomic sections in all tasks that share object
 
\begin_inset Formula $\theta$
\end_inset

 with 
\begin_inset Formula $T_{i}$
\end_inset

 are summed together, and 
\begin_inset Formula $L$
\end_inset

 can extend to cover 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 It should be noted that one instance can have multiple atomic sections
 that access the same object, then how can an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 be interfered by all of them while it should be interfered by only one
 of them according to its arrival time, the others will come after that
 of 
\begin_inset Formula $T_{i}$
\end_inset

? This can happen if 
\begin_inset Formula $T_{i}$
\end_inset

 was trying to execute its atomic section, then it is replaced by a higher
 priority job, then 
\begin_inset Formula $T_{i}$
\end_inset

 gets back to the processor.
 In the time of preemption, another atomic section of the same conflicting
 task can come and execute.
 This situation is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig13"

\end_inset

 where 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 retries while 
\begin_inset Formula $s_{j}^{p}$
\end_inset

 is executing, then 
\begin_inset Formula $T_{k}$
\end_inset

 is released, preempting 
\begin_inset Formula $T_{i}$
\end_inset

 to get its processor and before it finished, 
\begin_inset Formula $s_{j}^{p+1}$
\end_inset

 executes, so when 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 returns after 
\begin_inset Formula $T_{k}$
\end_inset

 finishes, it will be after 
\begin_inset Formula $s_{j}^{p+1}$
\end_inset

 and it will have to retry until it finishes.
 For this, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq23"

\end_inset

) sums the lengths of all atomic sections in each instance that access the
 same object as the studeid task.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure13.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig13"

\end_inset

Retrial of 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 by multiple atomic sections of 
\begin_inset Formula $s_{j}^{p}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The rest of analysis for both schedulers is done as before, only 
\begin_inset Formula $RC_{conflict}(L(T_{i}))$
\end_inset

 is changed.
\end_layout

\begin_layout Subsection

\series medium
In case of G-RMA
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}$
\end_inset

 can be reduced for G-RMA by noting that the case shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig13"

\end_inset

 can happen only if 
\begin_inset Formula $T_{i}$
\end_inset

 is the lowest priority among all running tasks, which reduces number of
 conflicting tasks to only those of higher or equal priority to that of
 
\begin_inset Formula $T_{i}$
\end_inset

.
 Meanwhile, if there are 
\begin_inset Formula $m$
\end_inset

 processors, this means that before 
\begin_inset Formula $T_{i}$
\end_inset

 gets preempted, it will retry for the duration of at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 atomic sections sharing the same object with 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
After 
\begin_inset Formula $T_{i}$
\end_inset

 gets preempted, no lower priority task can allocate a processor while 
\begin_inset Formula $T_{i}$
\end_inset

 is waiting, but as 
\begin_inset Formula $T_{i}$
\end_inset

 can get preempted again and again by higher priority tasks, it can be delayed
 by the sum of all atomic sections in higher priority tasks that access
 the same object as 
\begin_inset Formula $T_{i}$
\end_inset

, or for each release of a higher priority job, 
\begin_inset Formula $T_{i}$
\end_inset

 will be delayed by the maximum 
\begin_inset Formula $m-1$
\end_inset

 higher or equal priority tasks
\end_layout

\begin_layout Standard
So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 in the case of G-RMA can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i}))= & \sum_{\theta\in\theta_{i}}(\sum_{k=1}^{min(n-1,m-1)}(\omega(k,\theta))+(\sum_{(T_{j}\in\gamma(\theta))\wedge(p(T_{j})\ge p(T_{i}))}min((\lceil\frac{L}{t(T_{j})}\rceil).\label{eq24}\\
 & \sum_{k=1}^{m-1}(\omega_{high}(k,\theta)),((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))_{0\, if\, n\le m})\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $\omega(k,\theta)$
\end_inset

 is the set of 
\begin_inset Formula $s_{p_{max}}(\theta)$
\end_inset

 arranged in non-increasing order.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $\omega_{high}(k,\theta)$
\end_inset

 is the set of 
\begin_inset Formula $s_{p_{max}}(\theta)$
\end_inset

 arranged in non-increasing order, where 
\begin_inset Formula $p(T_{p})\ge p(T_{i})$
\end_inset

.
 
\end_layout

\begin_layout Standard
The second term is zero in case number of tasks is less than or equal to
 number of processors, because 
\begin_inset Formula $T_{i}$
\end_inset

 will not have to be preempted because of enough number of processors for
 tasks.
 The rest of the analysis for 
\begin_inset Formula $RC_{releas}$
\end_inset

 and workload of other tasks is the same.
\end_layout

\begin_layout Subsection

\series medium
In case of G-EDF
\end_layout

\begin_layout Standard
G-EDF is similar to G-RMA in that 
\begin_inset Formula $T_{i}$
\end_inset

- before it is preempted- it can be delayed by the maximum 
\begin_inset Formula $min(m-1,n-1)$
\end_inset

 tasks, but when if it is preempted, this means that 
\begin_inset Formula $T_{i}$
\end_inset

 is the least priority task and all other 
\begin_inset Formula $m-1$
\end_inset

 tasks are of higher or equal priority, and 
\begin_inset Formula $T_{i}$
\end_inset

- or one of higher or equal priority- is allowed to allocate a processor
 when one is available, so no 
\begin_inset Formula $T_{j}$
\end_inset

 of longer relative deadline than 
\begin_inset Formula $T_{i}$
\end_inset

 will start before it because it will have a longer absolute deadline.
 So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 in the case of G-EDF will be calculated as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

) where 
\begin_inset Formula $L$
\end_inset

 can be extended to 
\begin_inset Formula $t(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i}))= & \sum_{\theta\in\theta_{i}}(\sum_{k=1}^{min(n-1,m-1)}(\omega(k,\theta))+(\sum_{(T_{j}\in\gamma(\theta))\wedge(D(T_{j})\le D(T_{i}))}min((\lfloor\frac{L}{t(T_{j})}\rfloor).\nonumber \\
 & \sum_{k=1}^{m-1}(\omega_{high}(k,\theta)),(min[\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1,\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor].\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))_{0\, if\, n\le m}) & \text{}\label{eq25}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{release}$
\end_inset

 and workload of other tasks is the same as before.
\end_layout

\begin_layout Section
Comparison between different synchronization approaches
\end_layout

\begin_layout Subsection
Comparison between EDF CM, RMA CM and FIFO CM
\end_layout

\begin_layout Standard
In both EDF CM and RMA CM, any atomic section 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 can suffer from retrial cost of 
\begin_inset Formula $len(s_{i}^{l}+s_{j}^{k})$
\end_inset

 from an interfering task 
\begin_inset Formula $T_{j}$
\end_inset

, whereas, FIFO CM suffers only from 
\begin_inset Formula $len(s_{j}^{k})$
\end_inset

.
\end_layout

\begin_layout Standard
In case of G-RMA scheduler, both RMA CM and FIFO CM suffer from higher priority
 tasks (although the latter suffers from 
\begin_inset Formula $min(m-1,n-1)$
\end_inset

 tasks, but due to preemption by higher priority tasks, it can be affected
 by all of them as depicted in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

)) and any task 
\begin_inset Formula $T_{i}$
\end_inset

 is interfered by the same number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 for both approaches (this number can extend to the carry out job during
 the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

), but FIFO CM initially suffers from 
\begin_inset Formula $m-1$
\end_inset

 tasks that have their atomic sections ordered in the queue before it.
\end_layout

\begin_layout Standard
EDF CM is somehow similar to FIFO CM in that it initially suffers from all
 tasks, even those with longer relative deadline, because they may have
 shorter or equal aboslute deadline, but afterwards, it can suffer from
 those of shorter relative deadline if their coming instances still have
 shorter absolute deadline during the period of the studied task; in that
 it differs from RMA CM which is affected only by the higher priority tasks,
 but EDF CM is not affected by carry out instances, so a task 
\begin_inset Formula $T_{i}$
\end_inset

 may be interfereb by a lower number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
So, it can be seen that the major factors that differentiate the three contentio
n managers are:- the number of interfering tasks, which in turn is affected
 by the priority of the task, and the number of instances of any conflicting
 task.
\end_layout

\begin_layout Subsection
Comparison between lock-free and STM
\end_layout

\begin_layout Standard
In order to know when the previously mentioned STM systems are better than
 lock free approach, we follow the comparison made in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 by comparing the total utilization of each one.
 Lock free method is implemented using retrial loops 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 In each approach, execution time of each task is inflated by the retrial
 cost (in case of STM), or the loop retrial cost (in case of lock free).
\end_layout

\begin_layout Standard
Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq17"

\end_inset

) can be upper bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{j}\in\gamma_{i}}(\sum_{\theta\in\theta_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}(2.s_{max})))\label{eq30}
\end{equation}

\end_inset

where 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

 and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

, and the order of the first two summation are replaced by each other with
 
\begin_inset Formula $\gamma_{i}$
\end_inset

 is the set of tasks that share objects with 
\begin_inset Formula $T_{i}$
\end_inset

.
 These two changes are done to simplify the comparison, in addition to assuming
 that 
\begin_inset Formula $\sum_{\theta\in\theta_{i}}\sum_{\forall s_{j}^{l}(\theta)}=\beta_{i,j}^{*}$
\end_inset

.
 So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

) can be modified to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq31"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j}^{*}.s_{max}\label{eq31}
\end{equation}

\end_inset

The loop retrial cost is defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 as (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq33"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j}.r_{max}\label{eq32}
\end{equation}

\end_inset

where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is number of retry loops of 
\begin_inset Formula $T_{j}$
\end_inset

 that access the same object as accessed by some retry loop of 
\begin_inset Formula $T_{i}$
\end_inset

, but as the shared objects are the same in both STM and lock free, so 
\begin_inset Formula $\beta_{i,j}=\beta_{i,j}^{*}$
\end_inset

, and 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of
 any task.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:G-EDF-scheduler-with"

\end_inset

G-EDF scheduler with EDF CM against lock-free
\end_layout

\begin_layout Standard
\align left
So, STM acheives better or equal performance to lock-free if the total utilizati
on of the former is less than or equal to the latter as shown in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq33"

\end_inset

)
\begin_inset Formula 
\begin{eqnarray}
\sum_{T_{i}}\frac{c_{i}+\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j}.s_{max}}{t(T_{i})} & \le & \sum_{T_{i}}\frac{c_{i}+\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j}.r_{max}}{t(T_{i})}\nonumber \\
\therefore\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\nonumber \\
 & = & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}+\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}\label{eq33}
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}=\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})$
\end_inset

, 
\begin_inset Formula $\therefore\,\zeta_{1}\le\zeta_{2}$
\end_inset

 depending on 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

, and the maximum value of 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}=\frac{1}{2}$
\end_inset

 which can happen if 
\begin_inset Formula $t(T_{j})\ge t(T_{i})\,\therefore\lceil\frac{t(T_{i})}{t(T_{j})}\rceil=1$
\end_inset

, and 
\begin_inset Formula $(\ref{eq33})=1$
\end_inset

 which is its maximum value.
 Of course, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $t(T_{j})\ge t(T_{i})$
\end_inset

 means that there is small number of interferences from other tasks to 
\begin_inset Formula $T_{i}$
\end_inset

, consequently, low number of conflict, so 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be as large as 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
The theoritical minimum value for 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}$
\end_inset

 is 
\begin_inset Formula $0$
\end_inset

 which can be asymptotically reached if 
\begin_inset Formula $t(T_{j})\ll t(T_{i})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}\rightarrow\infty$
\end_inset

, so 
\begin_inset Formula $(\ref{eq33})\rightarrow1/2$
\end_inset

.
\end_layout

\begin_layout Standard
So, it can be seen that 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 has littel effect on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 as it is contained in both numerator and denominator, but number of interences
 of other tasks to 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

, has the main effect as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig14"

\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure14.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig14"

\end_inset

Effect of 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

 on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:G-RMA-scheduler-with"

\end_inset

G-RMA scheduler with RMA CM against lock-free
\end_layout

\begin_layout Standard
Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) is upper bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).2.\beta_{i,j}.s_{max}\label{eq34}
\end{equation}

\end_inset

by considering the same assumptions as in sec 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-EDF-scheduler-with"

\end_inset

, and using subscripts 
\begin_inset Formula $k,\, l$
\end_inset

 instead of 
\begin_inset Formula $i,\, j$
\end_inset

 for tasks in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

) as it will be needed to discriminate between them, then the ratio 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).2.\beta_{kl})/t(T_{k})}\label{eq35}
\end{equation}

\end_inset

The main difference between the RMA CM and the lock free is that the former
 is affected only by the higher priority tasks, while the latter is affected
 by all tasks (just as in G-EDF wiht EDF CM), but RMA CM is still affected
 by 
\begin_inset Formula $2.\beta_{i,j}$
\end_inset

 (just as in G-EDF with EDF CM).
 The subtraction of 
\begin_inset Formula $c_{j}$
\end_inset

 in the numerator in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

 may not have a great effect on the ratio of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

 as the loop retrial cost can also be modified to account for the effect
 of the first interfering instance of 
\begin_inset Formula $T_{j}$
\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) can be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).2.\beta_{kl})/t(T_{k})}\label{eq43}
\end{equation}

\end_inset

If tasks in both numerator and denominator are arranged in non-increasing
 order of priority, so that 
\begin_inset Formula $i=k$
\end_inset

, 
\begin_inset Formula $j=l$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\label{eq36}
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}=\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})$
\end_inset

.
 But, 
\begin_inset Formula $T_{j}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, which means 
\begin_inset Formula $D(T_{j})>D(T_{i})$
\end_inset

 because of the G-RMA scheduler, and this means that 
\begin_inset Formula $t(T_{j})>t(T_{i})$
\end_inset

.
 Consequently, 
\begin_inset Formula $\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil=1$
\end_inset

 for all 
\begin_inset Formula $T_{j}$
\end_inset

 and 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})$
\end_inset

, and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

) will be 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\label{eq44}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

 
\begin_inset Formula $\zeta_{1}$
\end_inset

 contains all 
\begin_inset Formula $T_{j}$
\end_inset

 of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $\zeta_{2}$
\end_inset

 contains all 
\begin_inset Formula $T_{l}$
\end_inset

 of higher or equal priority to 
\begin_inset Formula $T_{k}$
\end_inset

, and tasks are arranged in non-increasing order of priority, then for each
 
\begin_inset Formula $T_{i,j}$
\end_inset

, there exists 
\begin_inset Formula $T_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

.
 This can be shown in the following figure.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $\begin{array}{cccccc}
 & j & 1 & 2 & \cdots & n\\
i\\
1 &  & 0 & 1 & \cdots & 1\\
2 &  & 0 & 0 & \ddots & \vdots\\
\vdots &  & \vdots & \vdots & \ddots & 1\\
n &  & 0 & 0 & \cdots & 0
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{array}{cccccc}
 & l & 1 & 2 & \cdots & n\\
k\\
1 &  & 0 & 0 & \cdots & 0\\
2 &  & 1 & 0 &  & \vdots\\
\vdots &  & \vdots & \ddots & \ddots & 0\\
n &  & 1 & \cdots & 1 & 0
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
where 0 means 
\begin_inset Quotes eld
\end_inset

This pair of 
\begin_inset Formula $i,j$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{1}$
\end_inset

, and this pair of 
\begin_inset Formula $k,l$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{2}$
\end_inset


\begin_inset Quotes erd
\end_inset

, and 1 is the reverse.
 So, it can be seen that both matrices are transpose of each other, consequently
, for each 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 there exist 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

, but the number of times 
\begin_inset Formula $T_{j}$
\end_inset

 accesses a shared object with 
\begin_inset Formula $T_{i}$
\end_inset

 may not be the same as number of times 
\begin_inset Formula $T_{i}$
\end_inset

 accesses that same object, so 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not have to be the same as 
\begin_inset Formula $\beta_{k,l}$
\end_inset

, even if 
\begin_inset Formula $i,j$
\end_inset

 and 
\begin_inset Formula $k,l$
\end_inset

 are transpose of each other.
 So, we can analize behavior of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 depending on the three parameters 
\begin_inset Formula $\beta_{i,j}$
\end_inset

, 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 and 
\begin_inset Formula $\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil$
\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is increased so that 
\begin_inset Formula $\beta_{i,j}\rightarrow\infty$
\end_inset

, 
\begin_inset Formula $\therefore\,(\ref{eq44})\rightarrow\infty$
\end_inset

, and this is natureal as 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 represents times lower priority tasks 
\begin_inset Formula $T_{j}$
\end_inset

 access shared objects with the higher priority task 
\begin_inset Formula $T_{i}$
\end_inset

.
 While this number has a great effect in lock-free, it does not have any
 effect in RMA CM because lower priority tasks does not affect higher priority
 ones, so 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be much greater than 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
Although the minimum value for 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is 1, but from a mathematical point if 
\begin_inset Formula $\beta_{i,j}\rightarrow0$
\end_inset

, then 
\begin_inset Formula $(\ref{eq44})\rightarrow1/2$
\end_inset

.
 Despite changing 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not affect retrial cost of RMA CM as lower priority tasks does not
 affect higher ones, but it does affect retrial cost of lock-free bacause
 contention between tasks will be reduced, thus 
\begin_inset Formula $s_{max}$
\end_inset

 had to be reduced in this case to a little more than half of 
\begin_inset Formula $r_{max}$
\end_inset

(it is 
\begin_inset Quotes eld
\end_inset

a little more
\begin_inset Quotes erd
\end_inset

 because the minimum value of 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is actually 1 not 0).
 The change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\beta_{k,l}\rightarrow\infty\,\therefore\,(\ref{eq44})\rightarrow1/2$
\end_inset

.
 This can be explained as 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 represent number of times a higher priority task 
\begin_inset Formula $T_{l}$
\end_inset

 accesses shared objects with a lower prirority one 
\begin_inset Formula $T_{k}$
\end_inset

.
 In case of RMA CM, this will increase retrial cost, thus reducing 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

.
 But if 
\begin_inset Formula $\beta_{k,l}\rightarrow0,\,\therefore\,(\ref{eq44})\rightarrow\infty$
\end_inset

, which is explained by lower contention from higher priority task 
\begin_inset Formula $T_{l}$
\end_inset

 to the lower priority one 
\begin_inset Formula $T_{k}$
\end_inset

, consequently reduces retrial cost in case of RMA CM and allows 
\begin_inset Formula $s_{max}$
\end_inset

 to be very large compared with 
\begin_inset Formula $r_{max}$
\end_inset

.
 Of course, the actual minimum value for 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 is 1, but this is done for mathematical illustration which is shown in
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

.
\end_layout

\begin_layout Standard
The third parameter that can affect 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is the 
\begin_inset Formula $t(T_{k})/t(T_{l})$
\end_inset

.
 If 
\begin_inset Formula $t(T_{l})\ll t(T_{k}),\,\therefore\,\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil\rightarrow\infty$
\end_inset

, and 
\begin_inset Formula $(\ref{eq44})\rightarrow1/2$
\end_inset

.
 This is explained by a high number of interferences of higher priority
 tasks 
\begin_inset Formula $T_{l}$
\end_inset

 to a lower priority one 
\begin_inset Formula $T_{k}$
\end_inset

 that increases retrial cost in case of RMA CM, consequently, reduces 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

.
 But if 
\begin_inset Formula $t(T_{l})=t(T_{k})$
\end_inset

 (which is the maximum value for 
\begin_inset Formula $t(T_{l})$
\end_inset

 as 
\begin_inset Formula $D(T_{l})\le D(T_{k})$
\end_inset

 because 
\begin_inset Formula $T_{l}$
\end_inset

 is of higher or equal priority to 
\begin_inset Formula $T_{k}$
\end_inset

), 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil\rightarrow1$
\end_inset

 and the right side of 
\begin_inset Formula $([eq44])\rightarrow\frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(2.\beta_{kl}))/t(T_{k})}$
\end_inset

 which renders the system one of the two previous cases shown in Figures
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure15-a.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15-a"

\end_inset

(a)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure15-b.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15-b"

\end_inset

(b)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15"

\end_inset

Change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 a) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 vs.
 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 b) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 vs.
 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 c)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
FIFO CM against lock-free
\end_layout

\begin_layout Standard
For both G-EDF and G-RMA with FIFO CM, the retrial cost is the same, and
 the 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 will be
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\nonumber \\
 & \le & 1\label{eq37}
\end{eqnarray}

\end_inset

So, in the case of FIFO CM, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be as large as that of 
\begin_inset Formula $r_{max}$
\end_inset

 without degrading performance than lock free implementation.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparison-between-FMLP"

\end_inset

Comparison between FMLP and G-EDF with EDF CM and FIFO CM
\end_layout

\begin_layout Standard
As FMLP is used with G-EDF, G-EDF with EDF CM and FIFO CM are compared here.
 For the case of non-nested requests, each resource (short or long) will
 be contained in its own group, and the three terms of blocking by FMLP
 can be upper bounded as follows:-
\begin_inset Formula 
\begin{eqnarray*}
BW(T_{i}) & \le & \sum_{s\_\theta\in\theta_{i}}(m-1).|s\_\theta|_{i,max}\\
 & = & N_{i,s}.(m-1).|s\_\theta|_{i,max}\\
 & \le & N_{i,s}.(m-1).|s\_\theta|_{max}
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $N_{i,s}$
\end_inset

 is the number of times 
\begin_inset Formula $T_{i}$
\end_inset

 requests a short resource, and 
\begin_inset Formula $|s\_\theta|_{i,max}$
\end_inset

 is the maximum request for a short resource by 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $|s\_\theta|_{max}$
\end_inset

 is the maximum short request by any task.
 And 
\begin_inset Formula 
\begin{eqnarray*}
NPB(T_{i}) & \le & (1+N_{i,l}).max(BW_{k\ne i}(T_{k})+|s\_\theta|_{k,max})\\
 & \le & (1+N_{i,l}).max(BW_{k\ne i}(T_{k})+|s\_\theta|_{max})\\
 & = & (1+N_{i,l}).|s\_\theta|_{max}.max_{k\ne i}(N_{k,s}.(m-1)+1)
\end{eqnarray*}

\end_inset

and
\begin_inset Formula 
\begin{eqnarray*}
DB(T_{i}) & \le & N_{i,l}.(n-1).|l\_\theta|_{i,max}\\
 & \le & N_{i,l}.(n-1).|l\_\theta|_{max}
\end{eqnarray*}

\end_inset

if 
\begin_inset Formula $|l\_\theta|_{max}\le c1.|s\_\theta|_{max}$
\end_inset

 where 
\begin_inset Formula $c1$
\end_inset

 is the minimum constant that satisfies this relation, then
\begin_inset Formula 
\[
DB(T_{i})\le N_{i,l}.(n-1).c1.|s\_\theta|_{max}
\]

\end_inset

The total blocking of each task is added to its execution time, and as before,
 the total utilization of G-EDF system (with both contention managers) is
 compared to that of FMLP.
 For performance of G-EDF with EDF CM to be better than FMLP, then
\begin_inset Formula 
\begin{eqnarray*}
s_{max}\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i}) & \le|s\_\theta|_{max}\sum_{T_{i}}[( & N_{i,s}.(m-1)+\\
 & + & (1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)\\
 & + & N_{i,l}.(n-1).c1)]/t(T_{i})
\end{eqnarray*}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}\le\frac{\sum_{T_{i}}[(N_{i,s}.(m-1)+(1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)+N_{i,l}.(n-1).c1)]/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\label{eq38}
\end{equation}

\end_inset

and for G-EDF with FIFO CM, this ratio will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}\le\frac{\sum_{T_{i}}[(N_{i,s}.(m-1)+(1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)+N_{i,l}.(n-1).c1)]/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\label{eq39}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
From (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq39"

\end_inset

), it can be seen that 
\begin_inset Formula $T_{i}$
\end_inset

, in FMLP, depends on 
\begin_inset Formula $m,\, n$
\end_inset

 and number of times it requests resources (in contrast to G-EDF with EDF
 or FIFO CM, which depends on number of times the conflicting 
\begin_inset Formula $T_{j}$
\end_inset

 requests resources).
 So, if 
\begin_inset Formula $N_{i,s},\, N_{i,l}$
\end_inset

 and 
\begin_inset Formula $N_{k,s}$
\end_inset

 can all be upper bounded by some constant 
\begin_inset Formula $C_{2}$
\end_inset

, which is the maximum number of times any 
\begin_inset Formula $T_{i}$
\end_inset

 can ask for a short or long resource, then the numerator in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq39"

\end_inset

) is 
\begin_inset Formula $O(n(n+m))$
\end_inset

, while the denominator is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 So, 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}=O(\frac{m}{n})\label{eq45}
\end{equation}

\end_inset

which means, for 
\begin_inset Formula $n<m$
\end_inset

, contention between tasks in both STM and FMLP is low (even for short resources
 in FMLP), but FMLP is more affected by 
\begin_inset Formula $NTB$
\end_inset

.
 But when 
\begin_inset Formula $n>m$
\end_inset

, contention increases, but FMLP arranges requests in a FIFO queue, so it
 is leass affected than EDF CM which sufferes from number of conflicting
 tasks and number of instances of each conflicting one.
 FMLP is not affected by number of instances of each conflicting task, and
 FIFO CM, although arranging requests in a FIFO order, but this order can
 change due to release in higher priority tasks as previously discussed
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Response-time-of FIFO CM"

\end_inset

, so FIFO CM is also affected by number of instances of conflicting tasks.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Comparison-of-OMLP"

\end_inset

Comparison of OMLP with STM
\end_layout

\begin_layout Standard
As blocking time for OMLP is 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
bounded by
\begin_inset Formula 
\[
b_{i}\triangleq\sum_{k=1}^{q}N_{i,k}.2.(m-1).max_{1\le i\le n}\{L_{i,k}\}
\]

\end_inset

where 
\begin_inset Formula $N_{i,k}$
\end_inset

 is the maximum number of times 
\begin_inset Formula $T_{i}$
\end_inset

 requests resource 
\begin_inset Formula $k$
\end_inset

, and 
\begin_inset Formula $L_{i,k}$
\end_inset

 is the maximum length of such a request.
 So, if 
\begin_inset Formula $L_{max}=max_{\forall i,\forall k}L_{i,k}$
\end_inset

, 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\[
bi\le2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}
\]

\end_inset

and for performance of G-EDF with EDF CM to be better than global OMLP,
 then
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\label{eq40}
\end{equation}

\end_inset

For G-RMA with RMA CM, the ratio will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).2.\beta_{i,j})/t(T_{i})}\label{eq41}
\end{equation}

\end_inset

and for FIFO CM for both G-EDF and G-RMA schedulers
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\label{eq42}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\sum_{k=1}^{q}N_{i,k}$
\end_inset

 is upper bounded by 
\begin_inset Formula $C_{3}$
\end_inset

, which is a constant representing the maximum total number of requests
 for resources by any 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}=O(\frac{nm}{n^{2}})=O(\frac{m}{n})\label{eq46}
\end{equation}

\end_inset

for each of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq40"

\end_inset

), (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq41"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq42"

\end_inset

) which is similar to that of FMLP.
\end_layout

\begin_layout Subsection
Conclusion on comparison between synchronization techniques
\end_layout

\begin_layout Standard
Comparison between STM, with the three contention managers, against lock-free
 is somehow different than that between STM and locking protocols in that
 the former have similar parameters that affect retrial cost of both STM
 and lock-free (i.
 e.; number of conflicting tasks, number of instances of these conflicting
 tasks, number of shared objects and number of their requests by conflicting
 tasks).
 So, 
\begin_inset Formula $T_{i}$
\end_inset

 is mostly affected by the nature of other tasks.
 But blocking time in FMLP and OMLP depend on some different parameters
 than that in STM and lock-free, as requests are arranged in a queue, and
 the order of the request in the queue does not change (except for the case
 of the priority queue in OMLP), so blocking time depend on number of tasks
 but not on number of instances of conflicting tasks, and it depends on
 number of requests made by 
\begin_inset Formula $T_{i}$
\end_inset

 itself, and not the coflicting tasks; it also depends on number of processors
 in both protocols, which is not the case in STM and lock-free.
 That is why comparison between STM and locking protocols has the asymptotic
 nature, while in STM and lock-free, effect of different parameters can
 be compared together.
\end_layout

\begin_layout Standard
For the comparison between STM and lock-free, it has been seen that both
 EDF and RMA CM suffer from 
\begin_inset Formula $2.s_{max}$
\end_inset

 retrial cost for each atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 by one atomic section of 
\begin_inset Formula $T_{j}$
\end_inset

, while FIFO CM does not.
 Retrial in RMA, FIFO CM and lock-free is affected by a larger number of
 conflicting instances than that of EDF CM, while EDF, FIFO CM and lock-free
 can be affected by all other tasks, but RMA CM is affected only by higher
 priority tasks.
 Due to the different parameters affecting STM and lock-free, the 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 differs to keep STM better or good as lock-free.
 In G-EDF with EDF CM, this ratio cannot exceed 1 and it can be kept at
 one half for higher number of conflicting tasks.
 For, G-RMA with RMA CM, it differs according to different parameters, but
 
\begin_inset Formula $s_{max}$
\end_inset

 can be larger than 
\begin_inset Formula $r_{max}$
\end_inset

 by many times at some cases, but the common case to keep STM performance
 well, is to keep it at one half of 
\begin_inset Formula $r_{max}$
\end_inset

.
 For the FIFO CM, 
\begin_inset Formula $s_{max}$
\end_inset

 can be as large as 
\begin_inset Formula $r_{max}$
\end_inset

, so it increased the minimum bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 over that of EDF and RMA CM, but RMA can have a larger 
\begin_inset Formula $s_{max}$
\end_inset

 in some cases.
\end_layout

\begin_layout Standard
So, it appears that each method has its merits and disadvantages.
 It is up to the designer to choose according to the parameters values of
 its application, in addition to noting the simplisity of STM programability,
 in contrast to that of lock-free approache.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Further improvements to ECM and RCM: multi-object transactions and reducing
 retry cost
\end_layout

\begin_layout Subsection
Probelm Description
\begin_inset CommandInset label
LatexCommand label
name "probelm description"

\end_inset


\end_layout

\begin_layout Standard
Previous analysis is suitable only for transactions that share one object,
 but this is not suitable for reality.
 Some reasons that make the analysis for multi-object transactions difficult
 can be illustrated by the following example.
\end_layout

\begin_layout Standard

\series bold
Example 1:
\series default
 Assume three atomic sections 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 belonging to jobs 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

,
\begin_inset Formula $\tau_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

, with priorities 
\begin_inset Formula $p_{1}^{x}>p_{2}^{y}>p_{3}^{z}$
\end_inset

.
 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 share objects, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 share objects, but 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 do not share objects.
 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 can make 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 to retry which in turn will make 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 to retry, this means that 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 is retrying transitively because of 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, which will increase retry cost of 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 Problem gets more complicated if another atomic section 
\begin_inset Formula $s_{4}^{f}$
\end_inset

, belonging to 
\begin_inset Formula $\tau_{4}^{f}$
\end_inset

 where 
\begin_inset Formula $p_{4}^{f}>p_{1}^{x}$
\end_inset

, shares objects with 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, but shares nothing with 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 nor 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 Thus, transitive retry will move from 
\begin_inset Formula $s_{4}^{f}$
\end_inset

 to 
\begin_inset Formula $s_{3}^{z}$
\end_inset

, increasing the retry cost of 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 The situation gets worse as more tasks of higer priority are added where
 each task shares objects with its immediate lower priority task.
 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

 may have atomic sections that share objects with 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

, but this will not prevent the effect of transitive retry due to 
\begin_inset Formula $s_{1}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Transitive Retry:
\series default
 A transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 suffers from transitive retry when it conflicts with a higer priority transacti
on 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn conflicts with a higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 Still, when 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 retries due to 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 also retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Thus, the effect of the higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is transitively moved to the lower priority transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, despite they do not conflict on common objects.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "ecm-rcm-transitive-retry"

\end_inset


\end_layout

\begin_layout Standard
ECM and RCM suffer from transitive retry for multi-object transactions.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Example 1, mentioned previously, applies under both ECM and RCM where priority
 for each transaction in ECM is defined as its containing job absolute deadline,
 and in RCM, transaction priority is the period of the containg task.
 Claim follows.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, what is needed here is to extend the set of objects that can make an
 atomic section of lower priority job to retry.
 This can be done by initializing the set of conflicting object to all objects
 accessed by all transactions in the analyzed task, then looping through
 all transactions belonging to all other higher priority tasks, and each
 trasnaction that accesses at least one of the objects in the set of conflicting
 objects is going to add all other objects accessed by this transaction
 to the set.
 This loop over all higher priority tasks is repeated again and again, each
 time with the new set of objects until there is no more transactions accessing
 any object in the set.
 As it seems, this solution can extend the set of conflicting objects too
 much, and may even contain all objects access by all tasks.
\end_layout

\begin_layout Standard
So, what is provided here is a new contention manager that avoids the effect
 of transitive retry.
 This contention manager is called Priority Contention Manager with Negative
 values and First access (PCM-N-F) and is described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f"

\end_inset

.
 For convenince, terms 
\begin_inset Quotes eld
\end_inset

atomic section
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

transaction
\begin_inset Quotes erd
\end_inset

 are used interchangably, and the priority of a transaction is the priority
 of the enclosing job.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f"

\end_inset

Priority Contention Manager with Negative values and First Access (PCM-N-F)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}
\end_layout

\begin_layout Plain Layout


\backslash
footnotesize{
\end_layout

\begin_layout Plain Layout


\backslash
linesnumbered
\end_layout

\begin_layout Plain Layout


\backslash
KwData{
\end_layout

\begin_layout Plain Layout

Executing Transaction: is one that cannot be aborted by any other transaction,
 nor preempted by a higer priority task
\backslash
;
\end_layout

\begin_layout Plain Layout

m
\backslash
_set: m-length set that contains only non-conflicting exececuting transactions
\backslash
;
\end_layout

\begin_layout Plain Layout

n
\backslash
_set: n-length set that contains retrying transactions for n tasks in non-increa
sing order of priority
\backslash
;
\end_layout

\begin_layout Plain Layout

n(z): transaction at index z of the n
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_i^k$: a new released transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_j^l$: one of the executing transactions
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
KwResult{which atomic section(s) is(are) going to commit}
\end_layout

\begin_layout Plain Layout


\backslash
eIf{$s_i^k$ does not conflict with any executing transaction
\backslash
label{s_i^k true}}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

Assign $s_i^k$ as an executing transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

Add $s_i^k$ to the m
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_i^k$ is to commit
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

Add $s_i^k$ to the n
\backslash
_set according to its priority
\backslash
label{move to n}
\backslash
;
\end_layout

\begin_layout Plain Layout

Assign temporal priority to job that owns $s_i^k$ to -1
\backslash
label{priority to -1}
\backslash
;
\end_layout

\begin_layout Plain Layout

The conflicting executing transaction(s) with $s_i^k$ is(are) the one(s)
 to commit
\backslash
label{s_i^k commit}
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
If{$s_j^l$ commits
\backslash
label{s_j^l commits}}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	
\backslash
For{z=1 to size of n
\backslash
_set
\backslash
label{traverse n_set}}
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		
\backslash
If{n(z) does not conflict with any executing transaction
\backslash
label{n(z) no conflict}}
\end_layout

\begin_layout Plain Layout

		{
\end_layout

\begin_layout Plain Layout

			
\backslash
If{processor available
\backslash
label{processor available}}
\end_layout

\begin_layout Plain Layout

			{
\end_layout

\begin_layout Plain Layout

				Restore priority of task owning n(z)
\backslash
;
\end_layout

\begin_layout Plain Layout

				Assign n(z) as executing transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

				Add n(z) to m
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

				n(z) to commit
\backslash
;
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

		move to the next n(z)
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{PCM-N-F} 
\backslash
label{PCM-N-F-algorithm}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
PCM-N-F works as defined in Algorithm 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{PCM-N-F-algorithm}
\end_layout

\end_inset

.
 It manages two sets: the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 which contains at most m non-conflicting transactions, where m is the number
 of processors in the system, as there cannot be more than m executing transacti
ons (or generally, m executing jobs) the the same time.
 When a transaction is entered in the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

, it executes non-preemptively and no other transaction can abort it.
 Any transaction in the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset

Executing Transaction
\begin_inset Quotes erd
\end_inset

.
 This means when a transaction is executing before the arrival of higher
 priority conflicting transactions, then the one that started executing
 first is the one to commit (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_i^k commit}
\end_layout

\end_inset

), hence the term 
\begin_inset Quotes eld
\end_inset

First
\begin_inset Quotes erd
\end_inset

 is in the name of the algorithm.
\end_layout

\begin_layout Standard
The other set is the 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 which holds the the transactions that are retrying because of conflict
 with one or more of the 
\begin_inset Quotes eld
\end_inset

Executing Transactions
\begin_inset Quotes erd
\end_inset

 (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{move to n}
\end_layout

\end_inset

), and 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 stands for the number of tasks in the system.
 It also holds transactions that cannot execute currently because processors
 are busy, either by processing 
\begin_inset Quotes eld
\end_inset

Executing Transactions
\begin_inset Quotes erd
\end_inset

 and/or by processing higher priority jobs.
 Any transaction in the 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 is assigned a temporal priority of 
\begin_inset Quotes eld
\end_inset

-1
\begin_inset Quotes erd
\end_inset

 (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{priority to -1}
\end_layout

\end_inset

), hence the term 
\begin_inset Quotes eld
\end_inset

Negative
\begin_inset Quotes erd
\end_inset

 in the name of the algorithm.
 
\begin_inset Quotes eld
\end_inset

Negative
\begin_inset Quotes erd
\end_inset

 priority is considered smaller than any normal priority, and a transaction
 continues to hold this negative priority until it is moved to the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

 where it restores its normal priority.
 The 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 can hold transactions that had been preempted by higher prirority jobs,
 even if these higher priority jobs do not have transactions to conflict
 with those preempted transactions, hence this set is of length 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 as there can be at most n jobs in the system at the same time.
 This list keeps track even of preempted transactions, because as it will
 be shown, these transactions are examined when any of the executing transaction
 commits, and any of these transactions can restore its original priority
 which can be higher than the preempting job, thus the aborted transaction
 can preempt the job which previously preempted it when the transaction
 was in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
When a new transaction is released, and it does not conflict with any one
 of the executing transactions (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_i^k true}
\end_layout

\end_inset

), then it is going to allocate a slot in the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 and become an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 itself.
 As this transaction is released, this means that its owning task is already
 allocated to processor, so this new transaction does not face the problem
 of unavailable processors.
 This new transaction might have a conflict with any of the transactions
 in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, but as transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 have priorities of -1, so they cannot prevent this new transaction from
 executing if does not conflict with any of the executing transactions.
\end_layout

\begin_layout Standard
When one of the executing transactions commits (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_j^l commits}
\end_layout

\end_inset

), then it is time to select one of the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 transactions to commit.
 The 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is traversed from the highest priority transaction to the lower priority
 (where priority here refers to the original priority of the transactions,
 not the -1) (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{traverse n_set}
\end_layout

\end_inset

), and if the examined transaction in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, does not conflict with any executing transaction (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{n(z) no conflict}
\end_layout

\end_inset

), and there is an available processor for it (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{processor available}
\end_layout

\end_inset

) (where 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

 means either an idle processor, or one that is executing a job of lower
 priority than that of the examined transaction), then this examined transaction
 in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is moved to the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 where it becomes an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 and restores its original prirority.
 If 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 is added to the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, the new 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 is used in comparison against other transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 with lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

.
 So, if one of the transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Formula $s_{d}^{g}$
\end_inset

, is of lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 and is conflicting with 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, it will remain in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 So, the choice of the new transaction from the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 depends on original priority of transactions, hence the term 
\begin_inset Quotes eld
\end_inset

PCM
\begin_inset Quotes erd
\end_inset

 in the name of the algorithm.
 So, the algorithm avoids inturrpting an already executing transaction to
 reduce its retry cost, meanwhile, it tries to avoid delaying the higest
 priority transaction in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 when it is time to select a new one to commit, even if this highest priority
 transaction arrives after other lower priority transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Illustrative Example
\end_layout

\begin_layout Standard
We are goingt to clarify behaviour of PNF by the following example.
 Throught the example, the following notions are used: 
\begin_inset Formula $s_{a}^{b}\in\tau_{a}^{k}$
\end_inset

 is transaction 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 in job 
\begin_inset Formula $\tau_{a}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{a}^{b}(\theta_{1},\theta_{2},\theta_{3})$
\end_inset

 means 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 accesses objects 
\begin_inset Formula $\theta_{1},\theta_{2},\theta_{3}$
\end_inset

.
 
\begin_inset Formula $p(s_{a}^{b})$
\end_inset

 is the priority of transaction 
\begin_inset Formula $s_{a}^{b}$
\end_inset

.
 
\begin_inset Formula $p_{i}^{j}$
\end_inset

 is priority of job 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

.
 If 
\begin_inset Formula $s_{a}^{b}\in\tau_{a}^{j},\,\therefore p_{o}(s_{a}^{b})=p_{a}^{j}$
\end_inset

, where 
\begin_inset Formula $p_{o}(s_{a}^{b})$
\end_inset

 is the original priority of 
\begin_inset Formula $s_{a}^{b}$
\end_inset

.
 
\begin_inset Formula $p(s_{a}^{b})=-1$
\end_inset

, if 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 is a retrying transaction, 
\begin_inset Formula $p(s_{a}^{b})=p_{o}(s_{a}^{b})$
\end_inset

 otherwise.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{i}^{k}}$
\end_inset

 means 
\begin_inset Formula $m\_set$
\end_inset

 contains transactions 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 regardless of their order.
 
\begin_inset Formula $n\_set={s_{a}^{b},s_{i}^{k}}$
\end_inset

 means 
\begin_inset Formula $n\_set$
\end_inset

 contains transactions 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in that order, where 
\begin_inset Formula $p_{o}(s_{a}^{b})>p_{o}(s_{i}^{k})$
\end_inset

.
 If 
\begin_inset Formula $m\_set\,(n\_set)={\phi}$
\end_inset

 means 
\begin_inset Formula $m\_set\,(n\_set)$
\end_inset

 is empty.
 Assume there are 5 processors.
\end_layout

\begin_layout Enumerate
Initially, 
\begin_inset Formula $m\_set=n\_set=\phi$
\end_inset

.
 
\begin_inset Formula $s_{a}^{b}(\theta_{1},\theta_{2})\in\tau_{a}^{b}$
\end_inset

 is released and checks 
\begin_inset Formula $m\_set$
\end_inset

 for conflicting transactions.
 As 
\begin_inset Formula $m\_set$
\end_inset

 is empty, 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 finds no conflict and becomes an executing transaction.
 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 is added to 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $m\_set={s_{a}^{b}}$
\end_inset

 and 
\begin_inset Formula $n\_set={\phi}$
\end_inset

.
 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 is executing on processor 1.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{c}^{d}(\theta_{3},\theta_{4})\in\tau_{c}^{d}$
\end_inset

 is released and checks 
\begin_inset Formula $m\_set$
\end_inset

 for conflicting transactions.
 
\begin_inset Formula $s_{c}^{d}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 as they access different objects.
 
\begin_inset Formula $s_{c}^{d}$
\end_inset

 becomes an executing transaction and added to 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{c}^{d}}$
\end_inset

 and 
\begin_inset Formula $n\_set={\phi}$
\end_inset

.
 
\begin_inset Formula $s_{c}^{d}$
\end_inset

 is executing on processor 2.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{e}^{f}(\theta_{1},\theta_{5})\in\tau_{e}^{f}$
\end_inset

 is released and 
\begin_inset Formula $p_{o}(s_{e}^{f})<p_{o}(s_{a}^{b})$
\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 when it checks 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is added to 
\begin_inset Formula $n\_set$
\end_inset

 and becomes a retrying transaction.
 
\begin_inset Formula $p(s_{e}^{f})$
\end_inset

 becomes 
\begin_inset Formula $-1$
\end_inset

.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{c}^{d}}$
\end_inset

 and 
\begin_inset Formula $n\_set={s_{e}^{f}}$
\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is retrying on processor 3.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{g}^{h}(\theta_{1},\theta_{6})\in\tau_{g}^{h}$
\end_inset

 is released and 
\begin_inset Formula $p_{o}(s_{g}^{h})>p_{o}(s_{a}^{b})$
\end_inset

.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{a}^{b}$
\end_inset

.
 Despite 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is of higher priority than 
\begin_inset Formula $s_{a}^{b}$
\end_inset

, but 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 is an executing transaction, so 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 runs non-preemptivly.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is added to 
\begin_inset Formula $n\_set$
\end_inset

 before 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 because 
\begin_inset Formula $p_{o}(s_{g}^{h})>p_{o}(s_{e}^{f})$
\end_inset

.
 
\begin_inset Formula $p(s_{g}^{h})$
\end_inset

 becomes 
\begin_inset Formula $-1$
\end_inset

.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{c}^{d}}$
\end_inset

 and 
\begin_inset Formula $n\_set={s_{g}^{h},s_{e}^{f}}$
\end_inset

.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is retrying on processor 4.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pnf_example_step_3"

\end_inset


\begin_inset Formula $s_{i}^{j}(\theta_{5},\theta_{7})\in\tau_{i}^{j}$
\end_inset

 is released.
 
\begin_inset Formula $p_{o}(s_{i}^{j})<p_{o}(s_{e}^{f})$
\end_inset

.
 
\begin_inset Formula $s_{i}^{j}$
\end_inset

 does not conflict with any transaction in 
\begin_inset Formula $m\_set$
\end_inset

.
 Despite 
\begin_inset Formula $s_{i}^{j}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 and 
\begin_inset Formula $p_{o}(s_{i}^{j})<p_{o}(s_{e}^{f})<p_{o}(s_{g}^{h})$
\end_inset

, but 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 and 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 are retrying transactions.
 
\begin_inset Formula $s_{i}^{j}$
\end_inset

 becomes an executing transaction and added to 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{c}^{d},s_{i}^{j}}$
\end_inset

 and 
\begin_inset Formula $n\_set={s_{g}^{h},s_{e}^{f}}$
\end_inset

.
 
\begin_inset Formula $s_{i}^{j}$
\end_inset

 is executing on processor 5.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pnf_example_step 1"

\end_inset


\begin_inset Formula $\tau_{k}^{l}$
\end_inset

 is released.
 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

 does not access any object.
 
\begin_inset Formula $p_{k}^{l}<p_{o}(s_{e}^{f})<p_{o}(s_{g}^{h})$
\end_inset

, but 
\begin_inset Formula $p(s_{e}^{f})=p(s_{g}^{h})=-1$
\end_inset

.
 As there are no more processors, 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

 preempts 
\begin_inset Formula $\tau_{e}^{f}$
\end_inset

 because current assigned priority to 
\begin_inset Formula $\tau_{e}^{f}=p(s_{e}^{f})=-1$
\end_inset

 and 
\begin_inset Formula $p_{o}(s_{g}^{h})>p_{o}(s_{e}^{f})$
\end_inset

.
 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

 is running on processor 3.
 This way, PNF optimizes processor usage.
 
\begin_inset Formula $m\_set$
\end_inset

 and 
\begin_inset Formula $n\_set$
\end_inset

 are not changed.
 Although 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is preempted, 
\begin_inset Formula $n\_set$
\end_inset

 still records it as 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 might be needed as will be shown in the following steps.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pnf_example_step_2"

\end_inset


\begin_inset Formula $s_{i}^{j}$
\end_inset

 commits.
 
\begin_inset Formula $s_{i}^{j}$
\end_inset

 is removed from 
\begin_inset Formula $m\_set$
\end_inset

.
 Transactions in 
\begin_inset Formula $n\_set$
\end_inset

 are checked from the first (highest 
\begin_inset Formula $p_{o}$
\end_inset

) to the last (lowest 
\begin_inset Formula $p_{o}$
\end_inset

) for conflict against any executing transaction.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is checked first because 
\begin_inset Formula $p_{o}(s_{g}^{h})>p_{o}(s_{e}^{f})$
\end_inset

.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{a}^{b}$
\end_inset

, so 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 cannot be an executing transaction.
 Now it is time to check 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 despite 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is preempted from step 
\begin_inset CommandInset ref
LatexCommand ref
reference "pnf_example_step 1"

\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 also conflicts with 
\begin_inset Formula $s_{a}^{b}$
\end_inset

, so 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 cannot be an executing transaction.
 
\begin_inset Formula $m\_set={s_{a}^{b},s_{c}^{d}}$
\end_inset

 and 
\begin_inset Formula $n\_set={s_{g}^{h},s_{e}^{f}}$
\end_inset

.
 Now, 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 can be retrying on processor 5 if 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 has finished execution.
 Otherwise, 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 continues running on processor 5 and 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is still preempted.
 This is because 
\begin_inset Formula $p(s_{e}^{f})=-1$
\end_inset

 and 
\begin_inset Formula $p_{i}^{j}>p(s_{e}^{f})$
\end_inset

.
 Let us just assume 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 is still running on processor 5.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pnf_example_step_4"

\end_inset


\begin_inset Formula $s_{a}^{b}$
\end_inset

 commits.
 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 is removed from 
\begin_inset Formula $m\_set$
\end_inset

.
 Transactions in 
\begin_inset Formula $n\_set$
\end_inset

 are checked as done in step 
\begin_inset CommandInset ref
LatexCommand ref
reference "pnf_example_step_2"

\end_inset

.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 does not conflict with any executing transaction any more.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 becomes an executing transaction.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is removed from 
\begin_inset Formula $n\_set$
\end_inset

 and added to 
\begin_inset Formula $m\_set$
\end_inset

, so 
\begin_inset Formula $m\_set={s_{c}^{d},s_{g}^{h}}$
\end_inset

.
 Now, 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is checked against the new 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{g}^{h}$
\end_inset

, so 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 cannot be an executing transaction.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 can be retrying on processor 1 if 
\begin_inset Formula $\tau_{a}^{b}$
\end_inset

 has finished execution.
 Otherwise, 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 remains preempted because 
\begin_inset Formula $p(s_{e}^{f})=-1$
\end_inset

 and 
\begin_inset Formula $p_{a}^{b}>p(s_{e}^{f})$
\end_inset

.
 
\begin_inset Formula $n\_set=\{s_{e}^{f}\}$
\end_inset

.
 Let us just assume 
\begin_inset Formula $\tau_{a}^{b}$
\end_inset

 is still running on processor 1.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pnf_example_step_5"

\end_inset


\begin_inset Formula $s_{g}^{h}$
\end_inset

 commits.
 
\begin_inset Formula $s_{g}^{h}$
\end_inset

 is removed from 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $\tau_{g}^{h}$
\end_inset

 continues execution on processor 4.
 Transactions in 
\begin_inset Formula $n\_set$
\end_inset

 are checked again.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is the only retrying transaction in the 
\begin_inset Formula $n\_set$
\end_inset

, and it does not conflict with any executing transactions.
 Now, the system has 
\begin_inset Formula $\tau_{a}^{b}$
\end_inset

 running on processor 1, 
\begin_inset Formula $s_{c}^{d}$
\end_inset

 executing on processor 2, 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

 running on processor 3, 
\begin_inset Formula $\tau_{g}^{h}$
\end_inset

 running on processor 4 and 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 running on processor 5.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 can become an executing transaction if it can find a processor.
 As 
\begin_inset Formula $p_{i}^{j},\, p_{k}^{l}<p_{o}(s_{e}^{f})$
\end_inset

, then 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 can preempt the lowest in priority betwen 
\begin_inset Formula $\tau_{i}^{j}$
\end_inset

 and 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 now becomes an executing transaction.
 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is removed from the 
\begin_inset Formula $n\_set$
\end_inset

 and added to the 
\begin_inset Formula $m\_set$
\end_inset

.
 So, 
\begin_inset Formula $m\_set={s_{c}^{d},s_{e}^{f}}$
\end_inset

 and 
\begin_inset Formula $n\_set=\phi$
\end_inset

.
 If 
\begin_inset Formula $p_{i}^{j},\, p_{k}^{l}$
\end_inset

 were of higher priority than 
\begin_inset Formula $p_{o}(s_{e}^{f})$
\end_inset

, then 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 would have remained in 
\begin_inset Formula $n\_set$
\end_inset

 until a processor is available.
\end_layout

\begin_layout Standard
The previous example illustrates the behaviour of PNF.
 It is seen that PNF avoids transitive retry.
 This is illustrated in step 
\begin_inset CommandInset ref
LatexCommand ref
reference "pnf_example_step_3"

\end_inset

 where 
\begin_inset Formula $s_{i}^{j}(\theta_{5},\theta_{7})$
\end_inset

 is not affected by retry of 
\begin_inset Formula $s_{e}^{f}(\theta_{1},\theta_{5})$
\end_inset

.
 Example also explains how PNF optimizes processor usage.
 This is illustrated in steps 
\begin_inset CommandInset ref
LatexCommand ref
reference "pnf_example_step 1"

\end_inset

 where the retrying transaction 
\begin_inset Formula $s_{e}^{f}$
\end_inset

 is preempted in favor of 
\begin_inset Formula $\tau_{k}^{l}$
\end_inset

.
\end_layout

\begin_layout Subsection
PCM-N-F properties
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f-transitive-retry"

\end_inset


\end_layout

\begin_layout Standard
Transactions scheduled under PCM-N-F do not suffer from transitive retry.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proof is done by contradiction.
 Assuming a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is retrying because of higher priority transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 which in turn is retrying because of another higher priority transaction
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict, yet, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 It is noted that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot exit together in the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 as they have common objects, but they both can exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 as they both can conflict with other executing transactions.
 So, we have three cases:
\end_layout

\begin_layout Standard

\shape italic
Case 1:
\shape default
 assuming 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an executing transaction, this means that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, by definition of PCM-N-F, it will be compared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, which contains 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, and it will be found that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 Also, by definition of PCM-N-F, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared aginst transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 when it newly arrives, as priorities of 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 transaction is lower than any normal priority.
 So, if there are available processors and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with any other executing transaction, it joins the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 and becomes an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 which contradicts the assumption that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
\end_layout

\begin_layout Standard

\shape italic
Case 2:
\shape default
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is an executing transaction.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, it will conflict with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and joins the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 Now, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, not 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 When 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits, the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is traversed from the highest priority transaction to the lowest one; if
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 does not conflict with any other executing transaction and there are available
 processors, 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 becomes an executing transaction.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is compared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, it is found that it does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, and if it also does not conflict with any other executing transaction
 and there are available processors, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes and executing transaction, which means 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 are executing concurrently.
 This also violates the assumption of transitive retrying.
\end_layout

\begin_layout Standard

\shape italic
Case 3:
\shape default
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 both exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives and comared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, it can become an executing transaction if it does not conflict with any
 executing one and there available processors.
 Despite 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 have common objects with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared aginst 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 which is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is going to join the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, this is done because it conflicts with one or more executing transactions
 or due to lack of processors, not because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 which violates the transitive retry assumption.
\end_layout

\begin_layout Standard
If the three transactions exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and it is time to choose the new executing transactions.
 If 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is chosen, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 remains in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and this leads to Case 1, but if 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is chosen, because 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 conflicts with another executing transaction but 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 does not, then this leads to Case 2.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "first-access"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property (
\begin_inset Quotes eld
\end_inset

F
\begin_inset Quotes erd
\end_inset

 term in PCM-N-F) is important to avoid increased retry cost of transactions
 suffering from transitive retry.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proof is done by contradiction.
 Assuming retry cost of transactions in the absence of 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property is the same when 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 exists.
 Then, 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 is assumed to not apply to PCM-N-F, and executing transactions can be aborted.
 Assuming only three transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, where priority of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is higher than priority of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn has a higher priority than that of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 conflicts with both 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict together.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives when 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an executing transaction and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be an executing transaction itself while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is retrying.
 But if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 did not commit at least when 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 commit, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 can become an executing transaction, and because of lack of 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will enforce 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to retry.
 So, the retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 will be 
\begin_inset Formula $len(s_{z}^{h}+s_{j}^{l})$
\end_inset

, which is the same retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 if it had been transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 which contradicts with the first assumption.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
PCM-N-F handles multi-object transactions better than ECM and RCM.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
From Claims 
\begin_inset CommandInset ref
LatexCommand ref
reference "ecm-rcm-transitive-retry"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-transitive-retry"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "first-access"

\end_inset

, it appears that PCM-N-F does not increase retry cost of multi-object transacti
ons, in contrast to what is done under ECM and RCM.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "higher retry does not affect response"

\end_inset


\end_layout

\begin_layout Standard
Any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is not affected by retry cost in any other job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Because of the behavior of PCM-N-F, any retrying transaction is assigned
 a temportal priority of -1, which is lower than any other priority.
 So, when 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is released, it will have a higher priority than any higher or lower priority
 job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 with temporal priority of -1.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retry Cost under PCM-N-F
\end_layout

\begin_layout Standard
To determine an upper bound for transactions under PCM-N-F, the following
 Claims are introduced.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "two transactions retry cost pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming only two conflicting transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Under PCM-N-F, the maximum retry cost suffered by 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is 
\begin_inset Formula $len(s_{j}^{l})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of PCM-N-F, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 cannot have started before 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, otherwise, it would have been an executing transaction and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot abort it, whether 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is of higher or lower priority than 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 So, at most, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 have started just after 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, and it has to wait until 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits, so 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can start.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The retry cost for any job 
\begin_inset Formula $\tau_{i}^{k}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 due to conflict between its transactions and transactions of other jobs
 under PCM-N-F is upper bounded by 
\begin_inset Formula 
\begin{equation}
RC(L)\le\sum_{\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)\right)\label{rc-pcm-n-f}
\end{equation}

\end_inset

where 
\begin_inset Formula $\bar{s_{j}^{k}(\theta)}$
\end_inset

 is the same as 
\begin_inset Formula $s_{j}^{k}(\theta)$
\end_inset

, but if 
\begin_inset Formula $s_{j}^{k}$
\end_inset

 accesses more than one object 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

, then 
\begin_inset Formula $len(s_{j}^{k})$
\end_inset

 is included only once in the last summation as a representative of all
 accessed objects by 
\begin_inset Formula $s_{j}^{k}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Assuming a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 belonging to job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 The worst case scenario for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 occurs when it conflicts with one or more executing transactions, then
 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has to wait in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, and all higher priority transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 are chosen before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to be executing transaction.
 When a higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, becomes an executing transaction, another lower priority transaction 
\begin_inset Formula $s_{l}^{f}$
\end_inset

- which does not conflict with any executing transaction- can become an
 executing transaction itself.
 Thus, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can wait for both higher and lower priority conflicting transactions.
 
\begin_inset Formula $\bar{s_{j}^{k}(\theta)}$
\end_inset

 is used because 
\begin_inset Formula $s_{j}^{k}$
\end_inset

 does not repeat itself for each object it access, in addition to the notion
 that the same 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

 cannot enforce more than one transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 to retry because if 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

, enforces 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to retry, this means that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

, is an executing transaction and it will commit before the next transaction
 in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 arrives.
 Combining this with Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "two transactions retry cost pcm-n-f"

\end_inset

 and the maximum number of jobs of any task 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfere with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during interval 
\begin_inset Formula $L$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{j}}\right\rceil +1$
\end_inset

, then Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "delay"

\end_inset


\end_layout

\begin_layout Standard
The delay time, for a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, due to lower priority jobs, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
D(\tau_{i}^{x})\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor \label{pcm-n-f-delay}
\end{equation}

\end_inset

where 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is delay time suffered by 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to lower priority jobs, 
\begin_inset Formula $\bar{\tau_{j}^{l}}=\{\tau_{j}^{l}:p_{j}^{l}<p_{i}^{x}\}$
\end_inset

 and 
\begin_inset Formula $\ddot{s_{j}^{h}}=\{s_{j}^{h}:s_{j}^{h}\, does\, not\, conflict\, with\, any\, s_{i}^{k}\}$
\end_inset

.
 During this delay time, all processor are unavailable for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lower priority jobs can delay 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 only at executing transactions of these jobs, because executing transactions
 are non-preemptive.
 These lower priority executing transactions can be conflicting with transaction
s in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, in which case, their effect is retry cost to 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 which is already included in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

.
 When these lower priority transactions are non-conflicting with any transaction
 in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, they act as if they were higher priority jobs interfering with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 whose interference workload (which is the delay they casue to 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

) can be calculated by Theorem 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
 If not all processors are busy with these lower priority transactions,
 then 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can run in parallel with them on a free processor because these lower priority
 transactions are non-conflicting with any transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, but the problem appears all processors are busy with higher priority jobs
 and/or lower priority non-conflicting transactions.
 So, during the delay time, no processors are available for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response time ecm pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming a multiprocessor system scheduled with G-EDF and synchronization
 is done by STM with PCM-N-F used as the contention manager.
 The response time of a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D_{edf}(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}

\end_inset

where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

), and 
\begin_inset Formula $D_{edf}(\tau_{i}^{x})$
\end_inset

 is the same as 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

, defined in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

, but for G-EDF scheduled systems, (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

) is modified to 
\begin_inset Formula 
\begin{eqnarray}
D_{edf}(\tau_{i}^{x}) & \le & \left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\begin{cases}
0 & ,L\le T_{i}-T_{j}\\
\sum_{\forall\bar{s_{j}^{h}}}len\left(\bar{s_{j}^{h}}\right) & ,L>T_{i}-T_{j}
\end{cases}\right\rfloor \label{d-edf}
\end{eqnarray}

\end_inset

and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Response time for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is calculated as in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

 except that delay time of lower priority tasks is added as defined by Claim
 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, but as G-EDF uses absolute deadlines for scheduling, this affects which
 jobs can be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and which will be of higher priority as follows: During 
\begin_inset Formula $T_{i}$
\end_inset

, all instance of task 
\begin_inset Formula $\tau_{j}$
\end_inset

 will be of higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 except the instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that is released after 
\begin_inset Formula $T_{i}-T_{j}$
\end_inset

, because that last instance will have a longer absolute deadline than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 So, as our interest only in interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, then there can be only one instance of each task (that is why 
\begin_inset Formula $\left\lceil \frac{L}{T_{j}}\right\rceil +1$
\end_inset

 in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

 is replaced with 1 in the second case in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

) interfering with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, that can have a lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, and this lower priority instance is released only if 
\begin_inset Formula $L>T_{i}-T_{j}$
\end_inset

 (this is why 0 is used in the first case in (
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

)).
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is defined by Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

 instead of Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

 (which is used in ECM) because- in contrast to ECM- retry cost of higher
 priority jobs does not affect response time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 as proved in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "higher retry does not affect response"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response rcm pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming a multiprocessor system scheduled with G-RMA and synchronization
 is done by STM with PCM-N-F used as the contention manager.
 Response time of job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is upper bounded by 
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}

\end_inset

where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

), 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

), and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The proof is the same as for Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "response time ecm pcm-n-f"

\end_inset

 except that G-RMA uses static priority for tasks, so (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

) can be used directly for calculating 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 without modifications.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comparison between PCM-N-F and concurrency controls
\end_layout

\begin_layout Standard
In this section, schedulability of G-EDF (G-RMA) systems with PCM-N-F used
 for STM concurrency control will be compared against ECM (RCM) systems,
 as well as retry-loop lock-free systems to understand when PCM-N-F will
 perform better.
 Toward this, total utilization of PCM-N-F with the corresponding scheduler
 is compared against other methods.
 Inflated execution time of each method (which is the sum of the WCET of
 the task and its retry cost) is used in calculating utilization of each
 task.
\end_layout

\begin_layout Standard
In the case of PCM-N-F, delay time caused by lower priority jobs to higher
 priority jobs as defined in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, is not considered in utilization calculation because during this time,
 as proved in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, no processor is available for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 So, this time is not added to the inflated execution time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 because the processor is busy with some other job.
\end_layout

\begin_layout Standard
If retry cost caused by concurrency control method 
\begin_inset Formula $A$
\end_inset

 to any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 is 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

, and the retry cost by method 
\begin_inset Formula $B$
\end_inset

 to the same task is 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

, then schedulability of method 
\begin_inset Formula $A$
\end_inset

 is comparable to method 
\begin_inset Formula $B$
\end_inset

 if 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{c_{i}+RC_{B}(T_{i})}{T_{i}}\nonumber \\
\sum_{\forall\tau_{i}}\frac{RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{RC_{B}(T_{i})}{T_{i}}\label{utilization comparison}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Retry cost of ECM, RCM and lock-free for any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 includes retry cost due to conflict between transactions of other tasks
 with 
\begin_inset Formula $\tau_{i}$
\end_inset

's transactions, and retry cost caused by preemption of 
\begin_inset Formula $\tau_{i}$
\end_inset

's instances due to release of higher priority jobs.
 Retry due to release of higher priority jobs does not exist in PCM-N-F
 because executing transactions are running non-preemptively.
 Also, in the case of ECM, RCM the set of common objects is modified as
 mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "probelm description"

\end_inset

.
 This new set of objects will be denoted as 
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset

 as the extended set of objects that can make conflict to any transaction
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset

 can include non-accessed, as well as, accessed objects by any transactino
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

, which is not the case for 
\begin_inset Formula $\gamma_{i}$
\end_inset

 (used by PCM-N-F) which is the set of only accessed objects by any transaction
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
PCM-N-F versus ECM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f ecf comaprison clm"

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with G-EDF is better or equal to schedulab
ility performance of ECM if length of each atomic section that accesses
 a specific object in any task is lower or equal to the maximum length of
 any atomic section in other task that accesses the same object.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituing 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq7"

\end_inset

) respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f edf comparison 1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 Then it can be assumed that 
\begin_inset Formula $g(\tau_{i})=\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{*}}\sum_{\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{*}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}$
\end_inset

.
 By substituting 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 and subtracting 
\begin_inset Formula $\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}$
\end_inset

 from both sides of (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f edf comparison 1"

\end_inset

), we get 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}} & \le\label{pcm-n-f ecm comparison 2}\\
\sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}} & + & g(\tau_{i})\nonumber 
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecm comparison 2"

\end_inset

) that by keeping every 
\begin_inset Formula $len(\bar{s_{j}^{k}(\theta)})\le len(s_{max}^{j}(\theta))$
\end_inset

 for each 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\tau_{j}\in\gamma_{i}$
\end_inset

 and 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecm comparison 2"

\end_inset

) holds, besides, 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 can belong to any other task than 
\begin_inset Formula $\tau_{j}$
\end_inset

 because of the dynamic priority of G-EDF.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PNF/EDF versus LCM/EDF
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:pnf_lcm_edf_comp"

\end_inset


\end_layout

\begin_layout Standard
ٍSchedulability of PNF/EDF tends to be equal or better than schedulability
 of LCM/EDF if lengths of conflicting atomic sections are approximately
 equal and all 
\begin_inset Formula $\alpha$
\end_inset

s approacehs 1.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituing 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and (
\series bold
EQUATION
\series default
) respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{eq:pcm_edf_lcm_comp_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len\left(s_{max}^{i}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As assumed in the proof of Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecf comaprison clm"

\end_inset

, 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

, 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

and 
\begin_inset Formula $g(\tau_{i})=\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{*}}\sum_{\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{ji}s_{max}^{*}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}$
\end_inset

.
 By substituting 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 and subtracting 
\begin_inset Formula $\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}$
\end_inset

 from both sides of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pcm_edf_lcm_comp_1"

\end_inset

), we get
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\nonumber \\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len\left(s_{max}^{i}\right)}{T_{i}}+g(\tau_{i})\label{eq:pnf_lcm_edf_comp}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Assuming 
\begin_inset Formula $g(\tau_{i})_{\forall\tau_{i}}\rightarrow0$
\end_inset

, thus neglecting the effect of transitive retry and retry cost due to release
 of higher pirority jobs.
 Let 
\begin_inset Formula $len(\bar{s_{j}^{k}(\theta)})=s_{max}^{j}(\theta)=s$
\end_inset

, and 
\begin_inset Formula $\alpha_{max}^{jl}=\alpha_{max}^{iy}=1$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_lcm_edf_comp"

\end_inset

), then schedulability of PNF/EDF equals schedulability of LCM/EDF if 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1,\,\forall\tau_{i},\tau_{j}$
\end_inset

 (which means equal periods for all tasks).
 If 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil >1,\,\forall\tau_{i},\tau_{j}$
\end_inset

, then schedulability of PNF/EDF tends to be better than LCM/EDF.
 Schedulability of PNF/EDF becomes more better than schedulability of LCM/EDF
 if 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 is not zero.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PCM-N-F versus RCM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:pnf_rcm_comp"

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with G-RMA tends to be better or equal
 to schedulability performance of RCM if conflict effect of higher priority
 tasks to lower priority tasks increases.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 with 
\begin_inset Formula 
\[
\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)
\]

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f rcm comparison 1}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As assumed in the proof of Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecf comaprison clm"

\end_inset

, 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 and 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

.
 It is also assumed that 
\begin_inset Formula 
\[
g(\tau_{i})=\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{*}}\sum_{\forall\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
g(\tau_{i}) & =RC_{re}(T_{i})+\Bigg( & \sum_{\forall\tau_{j}\in(\gamma_{i}^{*}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\times\\
 &  & \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\Bigg)
\end{eqnarray*}

\end_inset

and 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

 where 
\begin_inset Formula $\bar{\tau_{j}}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}<p_{i}\right)\right\} $
\end_inset

, thus 
\begin_inset Formula $\tau_{j}^{*}\cap\bar{\tau_{j}}=\phi$
\end_inset

.
 By substitution of the previous assumptions in (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 1"

\end_inset

), we get 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset

For each 
\begin_inset Formula $\tau_{j}\in\bar{\tau_{j}}$
\end_inset

, 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

 because under G-RMA system for implicit deadline tasks, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

 when 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

.
 Then 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
 & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f rcm comparison 2}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})\nonumber 
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) that with increasing number of higher priority tasks, and their instances
 conflicting with lower priority ones , as well as, increasing number of
 shared objects, (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) tends to hold.
 By increasing number of shared objects between higher and lower priority
 tasks, 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 also increases, which allows (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) to hold more.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PNF versus LCM/RMA
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:pnf_lcm_rma_comp"

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PNF/RMA tends to be better or equal to schedulabil
ity performance of LCM/RMA if conflict effect of higher priority tasks to
 lower priority tasks increases.
 Increasing lengths of atomic sections as priority increases, as well as,
 increasing 
\begin_inset Formula $\alpha$
\end_inset

s, enhances schedulability of PNF/RMA compared with LCM/RMA schedulabiltiy.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 with 
\begin_inset Formula 
\[
\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)
\]

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pnf_lcm_rma_comp_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As assumed in the proof of Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecf comaprison clm"

\end_inset

, 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

, 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

 and 
\begin_inset Formula 
\[
g(\tau_{i})=\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{*}}\sum_{\forall\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}
\]

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

 where 
\begin_inset Formula $\bar{\tau_{j}}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}<p_{i}\right)\right\} $
\end_inset

, thus 
\begin_inset Formula $\tau_{j}^{*}\cap\bar{\tau_{j}}=\phi$
\end_inset

.
 By substitution of the previous assumptions in (
\begin_inset CommandInset ref
LatexCommand ref
reference "pnf_lcm_rma_comp_1"

\end_inset

), we get 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\eta_{3}(\tau_{i}) & = & \sum_{\forall\tau_{j}\in(\gamma_{i}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}}\Bigg(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\times\\
 &  & \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\Bigg)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
For each 
\begin_inset Formula $\tau_{j}\in\bar{\tau_{j}}$
\end_inset

, 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

 because under G-RMA system for implicit deadline tasks, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

 when 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

.
 Then 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
 & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{eq:pnf_lcm_rma_comp_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})}{T_{i}}+g(\tau_{i})\nonumber 
\end{eqnarray}

\end_inset

Assuming negligible effect of transitive retry and retry cost due to release
 of higher priority jobs (
\begin_inset Formula $g(\tau_{i})\rightarrow0$
\end_inset

).
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_lcm_rma_comp_2"

\end_inset

) tends to hold if: 1) contention from higher priority jobs to lower priority
 jobs increases because of the 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1$
\end_inset

 term in the right hand side of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_lcm_rma_comp_2"

\end_inset

).
 2) 
\begin_inset Formula $\alpha$
\end_inset

s approaches 1.
 3) Lengths of atomic sections increase as priority increases.
 This makes 
\begin_inset Formula $len(s_{max}^{j}(\theta))$
\end_inset

 in the right hand side of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_lcm_rma_comp_2"

\end_inset

) greater than 
\begin_inset Formula $len(\bar{s_{j}^{k}(\theta)})$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PCM-N-F versus lock-free
\end_layout

\begin_layout Standard
As retry-loop lock-free accessed only one object, number of accessed objects
 per transaction in PCM-N-F is limited to one to enable schedulability compariso
n between PCM-N-F and retry-loop lock-free algorithm.
 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) is replaced with 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+\begin{cases}
\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor r_{max} & ,for\, G-EDF\\
\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil r_{max} & ,for\, G-RMA
\end{cases}\nonumber \\
= & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+g(\tau_{i})\label{retry-loop higher release}
\end{eqnarray}

\end_inset

where the first summation is defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 and the second summation is the retry cost due to release of higher priority
 tasks.
 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is number of retry loops of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that access the same object as accessed by some retry loop of 
\begin_inset Formula $\tau_{i}$
\end_inset

, and 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of
 any task.
 Despite 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 is concerned with lock-free concurrency control for G-EDF systems, but
 the same retry cost can be applied for G-RMA systems because higher priority
 tasks can loop on objects held by lower priority ones.
 But retry cost due to release of higher priority jobs differes from G-EDF
 systems to G-RMA systems.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with either G-EDF or G-RMA is better
 or equal to schedulability performance of retry-loop lock-free synchronization
 if maximum length of any transaction, 
\begin_inset Formula $s_{max}$
\end_inset

, is less than or equal to the maximum execution cost of a single iteration
 of any retry loop of any task, 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) be replaced with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 with (
\begin_inset CommandInset ref
LatexCommand ref
reference "retry-loop higher release"

\end_inset

).
 To simpilify comparison, (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) is upper bounded by 
\begin_inset Formula 
\[
RC(T_{i})=\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}s_{max}\right)
\]

\end_inset

where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is as defined above, and 
\begin_inset Formula $s_{max}$
\end_inset

 is the maximum transaction length.
 Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}s_{max}\right)}{T_{i}} & \le\nonumber \\
\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+g(\tau_{i})}{T_{i}}\label{pcm-n-f lock-free comparison}
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f lock-free comparison"

\end_inset

) that if 
\begin_inset Formula $s_{max}\le r_{max}$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f lock-free comparison"

\end_inset

) holds.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset

6
\end_layout

\begin_layout Subsection
Note on implementation of PNF
\end_layout

\begin_layout Standard
The current implementation of PNF keeps four states for any transaction.
 When a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is initiated, its state is 
\shape italic
Released
\shape default
.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is an excuting transaction (belongs to the 
\begin_inset Formula $m\_set$
\end_inset

), its state is 
\shape italic
Executing
\shape default
.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is in 
\begin_inset Formula $n\_set$
\end_inset

, its state is either 
\shape italic
Retrying
\shape default
 or 
\shape italic
Checking
\shape default
.
 A 
\shape italic
Checking
\shape default
 transaction investigates whether it still conflicts with any transaction
 in the 
\begin_inset Formula $m\_set$
\end_inset

 or not, while 
\begin_inset Formula $Retrying$
\end_inset

 transaction already conflicts with one or more executing transactions.
 The 
\begin_inset Formula $m\_set$
\end_inset

 holds all objects accessed by current executing transactions, while 
\begin_inset Formula $n\_set$
\end_inset

 holds aborted transactions.
 Current implementation of PNF uses one lock to access both 
\begin_inset Formula $m\_set$
\end_inset

 and 
\begin_inset Formula $n\_set$
\end_inset

.
 So, when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is 
\begin_inset Formula $Released$
\end_inset

 or 
\begin_inset Formula $Checking$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 must hold the lock first before it can detect conflict with any executing
 transaction.
 Otherwise, if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 are conflicting and investigating 
\begin_inset Formula $m\_set$
\end_inset

 concurrently, they may add their objects to the 
\begin_inset Formula $m\_set$
\end_inset

 at the same time.
 Thus, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 become 
\begin_inset Formula $Executing$
\end_inset

 at the same time.
 Before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can hold the lock, priority of the underlying job 
\begin_inset Formula $\tau_{i}^{h}$
\end_inset

 is increased above other jobs.
 Otherwise, another higher priority job 
\begin_inset Formula $\tau_{o}^{p}$
\end_inset

 can preempt 
\begin_inset Formula $\tau_{i}^{h}$
\end_inset

 resulting in deadlock.
 While 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 holds the lock, it checks conflicts against transactions in 
\begin_inset Formula $m\_set$
\end_inset

.
 If there is no conflict and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 was 
\begin_inset Formula $Checking$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes executing and 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Title
First Bounded Last Timestamp (FBLT)
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Section
FBLT
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[h] 
\backslash
footnotesize{ 
\backslash
LinesNumbered 
\backslash
KwData{ $s_i^k$: interfered transaction
\backslash
; $s_j^l$: interfering transactions
\backslash
; $
\backslash
delta_i^k$: the maximum number of times $s_i^k$ can be aborted during $T_i$
\backslash
; $
\backslash
eta_i^k$: number of times $s_i^k$ has already been aborted up to now
\backslash
; $m
\backslash
_$set: contains at most m non-preemptive transactions
\backslash
; $m
\backslash
_prio$: priority of any transaction in $m
\backslash
_$set.
 $m
\backslash
_prio$ is higher than any priority of any real-time task
\backslash
; $r(s_i^k)$: time point at which $s_i^k$ joined $m
\backslash
_$set
\backslash
; } 
\backslash
KwResult{atomic sections that will abort} 
\backslash
eIf{
\backslash
label{fblt_first}$p_j^l > p_i^k$} { 
\backslash
eIf{$
\backslash
eta_i^k < 
\backslash
delta_i^k$} { Increment $
\backslash
eta_i^k$ by 1
\backslash
label{st:inc_eta}
\backslash
; Abort $s_i^k$
\backslash
; } { 
\backslash
If{$s_i^k 
\backslash
not
\backslash
in m
\backslash
_$set} { Add $s_i^k$ to $m
\backslash
_$set
\backslash
label{st:add to m_set}
\backslash
; Record $r(s_i^k)$
\backslash
label{st:record m_set time}
\backslash
; Increase priority of $s_i^k$ to $m
\backslash
_prio$
\backslash
label{st:increase prirority}
\backslash
; } 
\backslash
eIf{$s_j^l 
\backslash
in m
\backslash
_$set AND $r(s_j^l)<r(s_i^k)$
\backslash
label{st:resolve m_set conflict}} { Abort $s_i^k$
\backslash
; } { Abort $s_j^l$
\backslash
; } } } { Swap $s_i^k$ and $s_j^l$
\backslash
; Go to Step~
\backslash
ref{fblt_first} } } 
\backslash
caption{FBLT}
\backslash
label{fblt-algorithm} 
\backslash
end{algorithm}
\end_layout

\end_inset

In FBLT, each transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be aborted in an interval 
\begin_inset Formula $L$
\end_inset

 for at most 
\begin_inset Formula $\delta_{i}^{k}(L)$
\end_inset

 times.
 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 records number of times 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has already been aborted up to now.
 Each time 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is aborted, 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 is incremented by 1 as long as 
\begin_inset Formula $\eta_{i}^{k}<\delta_{i}^{k}(L)$
\end_inset

 (step 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{st:inc_eta}
\end_layout

\end_inset

).
 Otherwise, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is added to 
\begin_inset Formula $m\_set$
\end_inset

 in FIFO order (step 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{st:add to m_set}
\end_layout

\end_inset

).
 In 
\begin_inset Formula $m\_set$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes a non-preemptive transaction (step 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{st:increase prirority}
\end_layout

\end_inset

) as opposed to preemptive transactions that do not belong to 
\begin_inset Formula $m\_set$
\end_inset

.
 A non-preemptive transaction always has a higher priority than any preemptive
 transaction and real-time task.
 So, non-preemptive transaction cannot be aborted by any real-time job,
 nor a preemptive transaction.
 If non-preemptive transactions conflict together, they use time of joining
 
\begin_inset Formula $m\_set$
\end_inset

 to resolve conflict (step 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{st:resolve m_set conflict}
\end_layout

\end_inset

).
 The transaction that joined 
\begin_inset Formula $m\_set$
\end_inset

 first is the one that is commits.
 If preemptive transactions conflict together, they use their original priority
 to resolve conflicts.
 Under G-EDF, preemptive transaction with earliest absolute deadline commits
 first.
 Under G-RMA, preemptive transaction with shortest period commits first.
\end_layout

\begin_layout Subsection
Illustrative Example
\end_layout

\begin_layout Standard
FBLT's behavior is explained by the following example:
\end_layout

\begin_layout Enumerate
Transaction 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is released while 
\begin_inset Formula $m\_set=\emptyset$
\end_inset

.
 
\begin_inset Formula $\eta_{i}^{k}=0$
\end_inset

 and 
\begin_inset Formula $\delta_{i}^{k}=3$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "fblt_ex_step 2"

\end_inset

Transaction 
\begin_inset Formula $s_{a}^{b}(\theta_{2})$
\end_inset

 is released while 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is running.
 
\begin_inset Formula $p_{a}^{b}>p_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $\eta_{i}^{k}<\delta_{i}^{k}$
\end_inset

.
 So, 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is aborted in favor of 
\begin_inset Formula $s_{a}^{b}$
\end_inset

 and 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 is incremented to 1.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{a}^{b}(\theta_{2})$
\end_inset

 commits.
 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 runs again.
 Transaction 
\begin_inset Formula $s_{c}^{d}(\theta_{2})$
\end_inset

 is released while 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is running.
 
\begin_inset Formula $p_{c}^{d}>p_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is aborted again in favor of 
\begin_inset Formula $s_{c}^{d}(\theta_{2})$
\end_inset

.
 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 is incremented to 2.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{c}^{d}(\theta_{2})$
\end_inset

 commits.
 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 is released.
 
\begin_inset Formula $p_{e}^{f}>p_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $\eta_{e}^{f}=2$
\end_inset

.
 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is aborted in favor of 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 and 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 is incremented to 3.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{f}^{j}(\theta_{3})$
\end_inset

 is released.
 
\begin_inset Formula $p_{f}^{i}>p_{e}^{f}$
\end_inset

.
 So, 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 is aborted in favor of 
\begin_inset Formula $s_{f}^{i}(\theta_{3})$
\end_inset

 and 
\begin_inset Formula $\eta_{e}^{f}$
\end_inset

 is incremented to 1.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "fblt_ex_step 6"

\end_inset


\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 and 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 are compared again.
 
\begin_inset Formula $\because\,\eta_{i}^{k}=\delta_{i}^{k}$
\end_inset

, 
\begin_inset Formula $\therefore\, s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 is added to 
\begin_inset Formula $m\_set$
\end_inset

.
 
\begin_inset Formula $m\_set=\left\{ s_{i}^{k}(\theta_{1},\theta_{2})\right\} $
\end_inset

.
 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 becomes a non-preemptive transaction.
 As 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 is not a non-preemptive transaction yet, 
\begin_inset Formula $\therefore\, s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 is aborted in favor of 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 despite 
\begin_inset Formula $p_{e}^{f}>p_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\eta_{e}^{f}$
\end_inset

 is incremented to 2.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "fblt_ex_step 7"

\end_inset


\begin_inset Formula $s_{f}^{j}(\theta_{3})$
\end_inset

 commits but 
\begin_inset Formula $s_{g}^{h}(\theta_{3})$
\end_inset

 is released.
 
\begin_inset Formula $p_{g}^{h}>p_{e}^{f}$
\end_inset

 but 
\begin_inset Formula $\eta_{e}^{f}=\delta_{e}^{f}$
\end_inset

.
 So, 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 becomes a non-preemptive transaction.
 
\begin_inset Formula $m\_set=\left\{ s_{i}^{k}(\theta_{1},\theta_{2}),s_{g}^{h}(\theta_{2},\theta_{3})\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 and 
\begin_inset Formula $s_{g}^{h}(\theta_{2},\theta_{3})$
\end_inset

 are now non-preemptive transactions.
 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 and 
\begin_inset Formula $s_{g}^{h}(\theta_{2},\theta_{3})$
\end_inset

 still conflict together.
 So, they are executed according to their addition order to 
\begin_inset Formula $m\_set$
\end_inset

.
 So, 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 commits first, then 
\begin_inset Formula $s_{g}^{h}(\theta_{2},\theta_{3})$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{g}^{h}(\theta_{3})$
\end_inset

 will continue to abort and retry in favor of 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 until 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 commits or 
\begin_inset Formula $\eta_{g}^{h}=\delta_{g}^{h}$
\end_inset

.
 Even if 
\begin_inset Formula $s_{g}^{h}(\theta_{3})$
\end_inset

 joined 
\begin_inset Formula $m\_set$
\end_inset

, 
\begin_inset Formula $s_{g}^{h}(\theta_{3})$
\end_inset

 will still abort and retry in favor of 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 because 
\begin_inset Formula $s_{e}^{f}(\theta_{2},\theta_{3})$
\end_inset

 joined 
\begin_inset Formula $m\_set$
\end_inset

 earlier than 
\begin_inset Formula $s_{g}^{h}(\theta_{3})$
\end_inset

.
\end_layout

\begin_layout Standard
It is seen from steps 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 2"

\end_inset

 to 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 6"

\end_inset

 that 
\begin_inset Formula $s_{i}^{k}(\theta_{1},\theta_{2})$
\end_inset

 can be aborted for direct conflict with other transactions, or due to transitiv
e retry.
 Whatever the reason of conflict, once a transaction has reached its maximum
 allowed 
\begin_inset Formula $\delta$
\end_inset

, transaction becomes a non-preemptive transaction (steps 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 6"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 7"

\end_inset

).
 Non-preemptive transactions has higher priority than other preemptive transacti
ons (steps 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 6"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fblt_ex_step 7"

\end_inset

).
 Non-preemptive transactions execute in their arrival order to 
\begin_inset Formula $m\_set$
\end_inset

.
\end_layout

\begin_layout Section
Properties
\end_layout

\begin_layout Section
Retry Cost Under FBLT
\end_layout

\begin_layout Standard
We now derive an upper bound on the retry cost of any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 under FBLT during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

.
 Since all tasks are sporadic (i.e., each task 
\begin_inset Formula $\tau_{i}$
\end_inset

 has a minimum period 
\begin_inset Formula $T_{i}$
\end_inset

), 
\begin_inset Formula $T_{i}$
\end_inset

 is the maximum study interval for each task 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The total retry cost for any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to: 1) conflicts between its transactions and transactions of other
 jobs under FBLT during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

.
 2) release of higher priority jobs, is upper bounded by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{to}(L)\le\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(L)len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)+RC_{re}(L)\label{eq:fblt_rc}
\end{equation}

\end_inset

where 
\begin_inset Formula $s_{iz}^{k}$
\end_inset

 is one of the 
\begin_inset Formula $m-1$
\end_inset

 maximum length transactions that share objects with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{iz1}^{k},\, s_{iz2}^{k}$
\end_inset

 belong to two different jobs.
 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 is the retry cost resulting from release of higher piority jobs which preempt
 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 is calculated by (6.8) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-EDF, and (6.10) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-RMA.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of FBLT, 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}^{x}$
\end_inset

 can be aborted at maximum 
\begin_inset Formula $\delta_{i}^{k}(L)$
\end_inset

 times during interval 
\begin_inset Formula $L$
\end_inset

 before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 joins 
\begin_inset Formula $m\_$
\end_inset

set.
 Before joining 
\begin_inset Formula $m\_$
\end_inset

set, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be aborted due to higher priority transactions, or transactions in
 the 
\begin_inset Formula $m\_$
\end_inset

set.
 Original priority (before step 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
label{fblt:increase_priority}
\end_layout

\end_inset

) of transactions in 
\begin_inset Formula $m\_$
\end_inset

set can be of higher or lower priority than 
\begin_inset Formula $p_{i}^{x}$
\end_inset

.
 Thus, the maximum time 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is aborted before joining 
\begin_inset Formula $m\_$
\end_inset

set occurs if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is aborted for 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

.
 The worst case scenario for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 after joining 
\begin_inset Formula $m\_$
\end_inset

set occurs if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is preceded by 
\begin_inset Formula $m-1$
\end_inset

 maximum lenght conflicting transactions.
 Hence, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has to wait for the previous 
\begin_inset Formula $m-1$
\end_inset

 transactions to commit first.
 Priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 after joining 
\begin_inset Formula $m\_$
\end_inset

set is higher than any real-time task.
 So, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not aborted by any task.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has not joined 
\begin_inset Formula $m\_$
\end_inset

set yet, and a higher piority job 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 is released while 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is running, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 may be aborted if 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 has conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 causes only one abort in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 because 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 preempts 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 only once.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has already joined 
\begin_inset Formula $m\_$
\end_inset

set, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 cannot be aborted by release of higher priority jobs.
 So, the maximum number of abort times to transactions in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to release of higher prirority jobs is less or equal to number of interferi
ng higher priority jobs to 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The blocking time for a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to lower priority jobs during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is upper bounded by: 
\begin_inset Formula 
\begin{equation}
D(\tau_{i}^{x})=\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} \label{eq:fblt_delay}
\end{equation}

\end_inset

where 
\begin_inset Formula $s_{j_{max}}$
\end_inset

 is the maximum length transaction in any job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 with original priority lower than 
\begin_inset Formula $p_{i}^{x}$
\end_inset

.
 The right hand side of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_delay"

\end_inset

 is the sum of the 
\begin_inset Formula $m$
\end_inset

 maximum transactional lengths in all jobs with lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The worst case blocking time for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 occurs when the maximum length 
\begin_inset Formula $m$
\end_inset

 transactions in lower priority jobs than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 are executing non-preemptively.
 After commit of each transaction in the 
\begin_inset Formula $m\_$
\end_inset

set, a higher priority job 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is released.
 So, 
\begin_inset Formula $\tau_{j}^{y}$
\end_inset

 allocates the released processor instead of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Consequently, 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 has to wait for the whole maximum length 
\begin_inset Formula $m$
\end_inset

 transactions of lower priority jobs.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Response time of any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 under FBLT is upper bounded by 
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC_{to}(L)+D(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor \label{eq:fblt_res_time}
\end{equation}

\end_inset

where 
\begin_inset Formula $RC_{to}(L)$
\end_inset

 is calculated by 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

, 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is calculated by by 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_delay"

\end_inset

, and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (11) in 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

 for G-EDF, and (17) in 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

 for G-RMA.
 (11) and (17) in 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

 inflates 
\begin_inset Formula $c_{j}$
\end_inset

 of any job of 
\begin_inset Formula $\tau_{j}\ne\tau_{i},\, p_{j}>p_{i}$
\end_inset

 by retry cost of transactions in 
\begin_inset Formula $\tau_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Response time of any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is a direct result of FBLT bahviour.
 Response time of any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is the sum of its worst case execution time 
\begin_inset Formula $c_{i}$
\end_inset

, plus retry cost of transactions in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 (
\begin_inset Formula $RC(L)$
\end_inset

), plus blocking time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 (
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

), and the workload interference of higher priority jobs.
 Workload interfernence of higher priority jobs scheduled by G-EDF is calculated
 by (11) in 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

, and by (17) in 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

 for G-RMA.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Section
FBLT vs.
 Competitors
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 denote the retry cost of any 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 using the synchronization method 
\begin_inset Formula $A$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

.
 Let 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 denote the retry cost of any 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 using synchronization method 
\begin_inset Formula $B$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

.
 Then, schedulability of 
\begin_inset Formula $A$
\end_inset

 is comparable to 
\begin_inset Formula $B$
\end_inset

 if 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{c_{i}+RC_{B}(T_{i})}{T_{i}}\nonumber \\
\sum_{\forall\tau_{i}}\frac{RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{RC_{B}(T_{i})}{T_{i}}\label{eq:utilization comparison}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 ECM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_ecm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of FBLT is equal or better to ECM's when maximum number of
 abort times of all transactions in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 is less or equal to number of conflicting transactions in all other jobs
 to 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)+RC_{re}(T_{i})}{T_{i}}\label{eq:fblt_edf_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)+RC_{re}(T_{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 can access multiple objects, so 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length transaction conflicting with 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 FBLT needs to bound transitive retry.
 So, 
\begin_inset Formula $\theta_{i}^{ex}$
\end_inset

 will be avoided in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_1"

\end_inset

.
 Thus, transactions under ECM behave as if there were no transitive retry.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_1"

\end_inset

 will be 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_edf_comparison_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 is included only once for all objects accessed by it.
 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is also included once for each 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_2"

\end_inset

 becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_edf_comparison_3}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\bar{s_{j}^{h}}(\theta),\,\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Although different 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can have common conflicting transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

, but no more than one 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be preceeded by the same 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set.
 This happens because transactions in the 
\begin_inset Formula $m\_$
\end_inset

set are non-preemptive.
 Original priority of transactions preeceding 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set can be of lower or higher priority than original priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Under G-EDF, 
\begin_inset Formula $\tau_{j}\ne\tau_{i}$
\end_inset

 can have at least one job of higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, then 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge1$
\end_inset

.
 So, each one of the 
\begin_inset Formula $s_{iz}^{k}$
\end_inset

 in the right hand side of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_3"

\end_inset

 is included in one of the 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 in the left hand side of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_3"

\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_3"

\end_inset

 holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\delta_{i}^{k}(T_{i})len(s_{i}^{k})}{T_{i}}\label{eq:fblt_edf_comparison_4}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\bar{s_{j}^{h}}(\theta),\,\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

For each 
\begin_inset Formula $s_{i}^{k}\in s_{i}$
\end_inset

, there are a set of zero or more 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\in\tau_{j},\,\forall\tau_{j}\ne\tau_{i}$
\end_inset

 that are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming this set of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $\eta_{i}^{k}=\left\{ \bar{s_{j}^{h}}(\theta)\in\tau_{j}:\left(\theta\in\theta_{i}\right)\wedge\left(\forall\tau_{j}\ne\tau_{i}\right)\wedge\left(\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k\right)\right\} $
\end_inset

.
 The last condition 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k$
\end_inset

 in defintion of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 ensures that common transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 that can conflict with more than one transaction 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 are split among different 
\begin_inset Formula $\eta_{i}^{k},\, k=1,..,|s_{i}|$
\end_inset

.
 This condition is necessary because in ECM, no two or more transactions
 of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be aborted by the same transaction of 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

 where 
\begin_inset Formula $p_{j}^{h}>p_{i}^{x}$
\end_inset

.
 By substitution of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_4"

\end_inset

, we get 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\delta_{i}^{k}(T_{i})len(s_{i}^{k})}{T_{i}}\label{eq:fblt_edf_comparison_5}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall k=1}^{|s_{i}|}\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, len\left(s_{max}^{j}(\theta)\right)\ge len(s_{i}^{k})$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_edf_comparison_5"

\end_inset

 holds if for each 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{equation}
\delta_{i}^{k}\le\frac{\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(s_{i}^{k}\right)\right)}{len(s_{i}^{k})}=\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \label{eq:fblt_edf_comparison_7}
\end{equation}

\end_inset

Suming 
\begin_inset Formula $\delta_{i}^{k},\, k=1,..,|s_{i}|$
\end_inset

, we get 
\begin_inset Formula 
\begin{equation}
\sum_{k=1}^{|s_{i}|}\delta_{i}^{k}\le\sum_{k=1}^{|s_{i}|}\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \label{eq:fblt_edf_comparison_8}
\end{equation}

\end_inset

By defintion of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

, 
\begin_inset Formula $\eta_{i}^{k1}\cap\eta_{i}^{k2}=\emptyset,\,\forall k1\ne k2$
\end_inset

.
 So, 
\begin_inset Formula $\sum_{k=1}^{|s_{i}|}\sum_{\bar{s_{j}^{h}}(\theta)}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 is the maximum number of conflicting transactions in all jobs to any job
 of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 RCM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_rcm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of FBLT is equal or better to RCM's when maximum number of
 abort times of each transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 is less or equal to number of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in all jobs with higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 minus sum of maximum length 
\begin_inset Formula $m-1$
\end_inset

 transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituing 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)+RC_{re}(T_{i})}{T_{i}}\label{eq:fblt_rcm_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+s_{max}^{j}(\theta)\right)\right)+RC_{re}(T_{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

.
 Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 can access multiple objects, so 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length transaction conflicting with 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 FBLT needs to bound transitive retry.
 So, 
\begin_inset Formula $\theta_{i}^{ex}$
\end_inset

 will be avoided in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_1"

\end_inset

.
 Thus, transactions under RCM behave as if there were no transitive retry.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_1"

\end_inset

 will be 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_rcm_comparison_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+s_{max}^{j}(\theta)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 is included only once for all objects accessed by it.
 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is also included once for each 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_2"

\end_inset

 becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_rcm_comparison_3}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\bar{s_{j}^{h}}(\theta),\,\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Although different 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can have common conflicting transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

, but no more than one 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be preceeded by the same 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set.
 This happens because transactions in the 
\begin_inset Formula $m\_$
\end_inset

set are non-preemptive.
 Original priority of transactions preeceding 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set can be of lower or higher priority than original priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Under G-RMA, 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

 means that 
\begin_inset Formula $T_{j}\le T_{i}$
\end_inset

, then 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge1$
\end_inset

.
 For each 
\begin_inset Formula $s_{i}^{k}\in s_{i}$
\end_inset

, there are a set of zero or more 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\in\tau_{j}^{*}$
\end_inset

 that are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming this set of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $\eta_{i}^{k}=\left\{ \bar{s_{j}^{h}}(\theta)\in\tau_{j}^{*}:\left(\theta\in\theta_{i}\right)\wedge\left(\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k\right)\right\} $
\end_inset

.
 The last condition 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k$
\end_inset

 in defintion of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 ensures that common transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 that can conflict with more than one transaction 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 are split among different 
\begin_inset Formula $\eta_{i}^{k},\, k=1,..,|s_{i}|$
\end_inset

.
 This condition is necessary because in RCM, no two or more transactions
 of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be aborted by the same transaction of 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

 where 
\begin_inset Formula $p_{j}^{h}>p_{i}^{x}$
\end_inset

.
 By substitution of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_3"

\end_inset

, we get 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum max_{z=1}^{m-1}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_rcm_comparison_4}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall k=1}^{|s_{i}|}\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and 
\begin_inset Formula $s_{max}^{j}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 or 
\begin_inset Formula $\tau_{i}$
\end_inset

 itself.
 Transactions in 
\begin_inset Formula $m\_$
\end_inset

set can belong to jobs with original priority higher or lower than 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 So, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_3"

\end_inset

 holds if for each 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{equation}
\delta_{i}^{k}(T_{i})len(s_{i}^{k})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)-\sum max_{z=1}^{m-1}len(s_{iz}^{k})\label{eq:fblt_rcm_comparison_5}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\frac{\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)}{s_{i}^{k}}\right)\right)\right)-\sum max_{z=1}^{m-1}len\left(\frac{s_{iz}^{k}}{s_{i}^{k}}\right)\label{eq:fblt_rcm_comparison_14}
\end{equation}

\end_inset


\begin_inset Formula $\because\, len\left(\frac{s_{iz}^{k}}{s_{i}^{k}}\right)\le len(s_{iz}^{k})$
\end_inset

, and 
\begin_inset Formula $len(s_{max}^{j}(\theta))>len(s_{i}^{k})$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rcm_comparison_14"

\end_inset

 holds if 
\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\right)-\sum max_{z=1}^{m-1}len\left(s_{iz}^{k}\right)\label{eq:fblt_rcm_comparison_15}
\end{equation}

\end_inset


\begin_inset Formula $\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)$
\end_inset

 represents number of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in all jobs with higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\sum max_{z=1}^{m-1}len\left(s_{iz}^{k}\right)$
\end_inset

 is sum of maximum 
\begin_inset Formula $m-1$
\end_inset

 transactional length transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 G-EDF/LCM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_lcm_edf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of FBLT is equal or better to G-EDF/LCM's when maximum number
 of abort times of each transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 is less or equal to sum of total number each transaction 
\begin_inset Formula $s_{j}^{h}$
\end_inset

 can conflict with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 multiplied by maximum 
\begin_inset Formula $\alpha$
\end_inset

 with which 
\begin_inset Formula $s_{j}^{h}$
\end_inset

 can conflict with maximum length transaction sharing objects with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{h}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{\forall s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+RC_{re}(T_{i})}{T_{i}}\label{eq:fblt_lcm_edf_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)\right)+RC_{re}(T_{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 can access multiple objects, so 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length transaction conflicting with 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 FBLT needs to bound transitive retry.
 So, 
\begin_inset Formula $\theta_{i}^{ex}$
\end_inset

 will be avoided in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_1"

\end_inset

.
 Thus, transactions under G-EDF/LCM behave as if there were no transitive
 retry.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_1"

\end_inset

 will be 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{\forall s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_lcm_edf_comparison_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 is included only once for all objects accessed by it.
 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is also included once for each 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_2"

\end_inset

 becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{\forall s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_lcm_edf_comparison_3}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\bar{s_{j}^{h}(\theta)},\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(\bar{s_{j}^{h}(\theta)}+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Although different 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can have common conflicting transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

, but no more than one 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be preceded by the same 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set.
 This happens because transactions in the 
\begin_inset Formula $m\_$
\end_inset

set are non-preemptive.
 Original priority of transactions preceding 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set can be of lower or higher priority than original priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Under G-EDF/LCM, 
\begin_inset Formula $\tau_{j}\ne\tau_{i}$
\end_inset

 can have at least one job of higher priority than current job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, then 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge1$
\end_inset

.
 So, each one of the 
\begin_inset Formula $s_{iz}^{k}$
\end_inset

 in the left hand side of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fblt_lcm_edf_comparison_3"

\end_inset

 is included in one of the 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 in the right hand side of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fblt_lcm_edf_comparison_3"

\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fblt_lcm_edf_comparison_3"

\end_inset

 holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\delta_{i}^{k}(T_{i})len(s_{i}^{k})}{T_{i}}\label{eq:fblt_lcm_edf_comparison_4}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\bar{s_{j}^{h}(\theta)},\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

For each 
\begin_inset Formula $s_{i}^{k}\in s_{i}$
\end_inset

, there are a set of zero or more 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\in\tau_{j},\,\forall\tau_{j}\ne\tau_{i}$
\end_inset

 that are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming this set of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $\eta_{i}^{k}=\left\{ \bar{s_{j}^{h}}(\theta)\in\tau_{j}:\left(\theta\in\theta_{i}\right)\wedge\left(\forall\tau_{j}\ne\tau_{i}\right)\wedge\left(\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k\right)\right\} $
\end_inset

.
 The last condition 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k$
\end_inset

 in definition of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 ensures that common transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 that can conflict with more than one transaction 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 are split among different 
\begin_inset Formula $\eta_{i}^{k},\, k=1,..,|s_{i}|$
\end_inset

.
 This condition is necessary because in G-EDF/LCM, no two or more transactions
 of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be aborted by the same transaction of 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

 where 
\begin_inset Formula $p_{j}^{h}>p_{i}^{x}$
\end_inset

.
 By substitution of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_4"

\end_inset

, we get 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\delta_{i}^{k}(T_{i})len(s_{i}^{k})}{T_{i}}\label{eq:fblt_lcm_edf_comparison_5}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{k=1}^{|s_{i}|}\sum_{\forall\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil len\left(\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and 
\begin_inset Formula $s_{max}^{j}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 or 
\begin_inset Formula $\tau_{i}$
\end_inset

 itself.
 Transactions in 
\begin_inset Formula $m\_$
\end_inset

set can belong to jobs with original priority higher or lower than 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 So, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_3"

\end_inset

 holds if for each 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 
\begin_inset Formula 
\[
\delta_{i}^{k}(T_{i})len(s_{i}^{k})\le\left(\sum_{\forall\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)len\left(\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)+\left(1-\alpha_{max}^{ik}\right)len\left(s_{max}^{i}\right)
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\forall\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)len\left(\frac{\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)}{s_{i}^{k}}\right)\right)+\left(1-\alpha_{max}^{ik}\right)len\left(\frac{s_{max}^{i}}{s_{i}^{k}}\right)\label{eq:fblt_lcm_edf_comparison_6}
\end{equation}

\end_inset


\begin_inset Formula $\because\, len\left(\frac{s_{max}^{j}(\theta)}{s_{i}^{k}}\right)\ge1$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_edf_comparison_6"

\end_inset

 holds if 
\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \bar{\alpha_{max}^{jh}}\right)\right)\label{eq:fblt_lcm_edf_comparison_7}
\end{equation}

\end_inset

Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 G-RMA/LCM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_lcm_rma}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of FBLT is equal or better to G-RMA/LCM's when maximum number
 of abort times of each transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 is less or equal to sum of maximum length 
\begin_inset Formula $m-1$
\end_inset

 transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 subtracted from sum of total number each transaction 
\begin_inset Formula $s_{j}^{h}$
\end_inset

 can conflict with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 multiplied by maximum 
\begin_inset Formula $\alpha$
\end_inset

 with which 
\begin_inset Formula $s_{j}^{h}$
\end_inset

 can conflict with maximum length transaction sharing objects with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{h}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituing 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+RC_{re}(T_{i})}{T_{i}}\label{eq:fblt_lcm_rma_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len(s_{max}^{i})+RC_{re}(T_{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:p_{j}>p_{i}\right\} $
\end_inset

.
 Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 can access multiple objects, so 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length transaction conflicting with 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 FBLT needs to bound transitive retry.
 So, 
\begin_inset Formula $\theta_{i}^{ex}$
\end_inset

 will be avoided in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_1"

\end_inset

.
 Thus, transactions under G-RMA/LCM behave as if there were no transitive
 retry.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_1"

\end_inset

 will be 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_lcm_rma_comparison_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}(\theta)}}len\left(\bar{s_{j}^{h}(\theta)}+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len(s_{max}^{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 is included only once for all objects accessed by it.
 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is also included once for each 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

.
 Consequently, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_2"

\end_inset

 becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_lcm_rma_comparison_3}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\bar{s_{j}^{h}}(\theta),\,\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len(s_{max}^{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Although different 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can have common conflicting transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

, but no more than one 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be preceded by the same 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set.
 This happens because transactions in the 
\begin_inset Formula $m\_$
\end_inset

set are non-preemptive.
 Original priority of transactions preceding 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 in the 
\begin_inset Formula $m\_$
\end_inset

set can be of lower or higher priority than original priority of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Under G-RMA, 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

 means that 
\begin_inset Formula $T_{j}\le T_{i}$
\end_inset

, then 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge1$
\end_inset

.
 For each 
\begin_inset Formula $s_{i}^{k}\in s_{i}$
\end_inset

, there are a set of zero or more 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\in\tau_{j}^{*}$
\end_inset

 that are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming this set of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $\eta_{i}^{k}=\left\{ \bar{s_{j}^{h}}(\theta)\in\tau_{j}^{*}:\left(\theta\in\theta_{i}\right)\wedge\left(\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k\right)\right\} $
\end_inset

.
 The last condition 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)\not\in\eta_{i}^{l},\, l\ne k$
\end_inset

 in definition of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 ensures that common transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 that can conflict with more than one transaction 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 are split among different 
\begin_inset Formula $\eta_{i}^{k},\, k=1,..,|s_{i}|$
\end_inset

.
 This condition is necessary because in G-RMA/LCM, no two or more transactions
 of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be aborted by the same transaction of 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

 where 
\begin_inset Formula $p_{j}^{h}>p_{i}^{x}$
\end_inset

.
 By substitution of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_3"

\end_inset

, we get 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}(T_{i})len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)}{T_{i}}\label{eq:fblt_lcm_rma_comparison_4}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall k=1}^{|s_{i}|}\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)}{T_{i}}\nonumber \\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(1-\alpha_{max}^{ik}\right)len(s_{max}^{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and 
\begin_inset Formula $s_{max}^{j}$
\end_inset

 belongs to higher priority jobs than 
\begin_inset Formula $\tau_{i}$
\end_inset

 or 
\begin_inset Formula $\tau_{i}$
\end_inset

 itself.
 Transactions in 
\begin_inset Formula $m\_$
\end_inset

set can belong to jobs with original priority higher or lower than 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 So, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_4"

\end_inset

 holds if for each 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\delta_{i}^{k}(T_{i})len(s_{i}^{k}) & \le & \left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\bar{s_{j}^{h}}(\theta)+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)\right)\right)\right)\\
 & + & \left(1-\alpha_{max}^{ik}\right)len(s_{max}^{i})-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray}
\therefore\,\delta_{i}^{k}(T_{i}) & \le & \left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)len\left(\frac{\bar{s_{j}^{h}}(\theta)+\bar{\alpha_{max}^{jh}}s_{max}^{j}(\theta)}{s_{i}^{k}}\right)\right)\right)\nonumber \\
 & + & \left(1-\alpha_{max}^{ik}\right)len(\frac{s_{max}^{i}}{s_{i}^{k}})-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len\left(\frac{s_{iz}^{k}}{s_{i}^{k}}\right)\label{eq:fblt_lcm_rma_comparison_5}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, len\left(\frac{s_{iz}^{k}}{s_{i}^{k}}\right)\le len(s_{iz}^{k})$
\end_inset

, 
\begin_inset Formula $\bar{\alpha_{max}^{jh}}\le1$
\end_inset

 and 
\begin_inset Formula $s_{max}^{i}$
\end_inset

 can be greater, less or equal to 
\begin_inset Formula $s_{i}^{k}$
\end_inset


\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_5"

\end_inset

 holds if 
\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\bar{\alpha_{max}^{jh}}len\left(\frac{\bar{s_{j}^{h}}(\theta)+s_{max}^{j}(\theta)}{s_{i}^{k}}\right)\right)-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len\left(s_{iz}^{k}\right)\label{eq:fblt_lcm_rma_comparison_6}
\end{equation}

\end_inset


\begin_inset Formula $\because\, len(\frac{s_{max}^{j}(\theta)}{s_{i}^{k}})\ge1,\,\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lcm_rma_comparison_6"

\end_inset

) holds if 
\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}(T_{i})\le\left(\sum_{\bar{s_{j}^{h}}(\theta)\in\eta_{i}^{k}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\bar{\alpha_{max}^{jh}}\right)-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len\left(s_{iz}^{k}\right)\label{eq:fblt_rcm_comparison_16}
\end{equation}

\end_inset

Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 PNF
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_pnf_edf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of FBLT is equal or better than PNF if: 1) For each transaction
 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, maximum abort times 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 equals at most the ratio between difference of 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
total length of all transactions that can conflict only with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and total length of at most 
\begin_inset Formula $m-1$
\end_inset

 longest transactions that can conflict directly or transitively with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to length of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 2) For any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, ratio between longest transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 or lower priority jobs to smallest transaction in lower priority jobs equals
 at most the ratio between 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
minimum number of times 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be blocked due to non-conflicting transactions in all lower priority
 jobs to maximum release time of all jobs not belonging to 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (3) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

 respectively.
 Substituting 
\begin_inset Formula $D_{A}(\tau_{i})$
\end_inset

 and 
\begin_inset Formula $D_{B}(\tau_{i})$
\end_inset

 by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_delay"

\end_inset

) and (4) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

 respectively.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+RC_{re}(T_{i})+\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} }{T_{i}}\label{eq:fblt_pnf_comparison_0}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor }{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 can access multiple objects.
 
\begin_inset Formula $\bar{s_{j}^{h}}(\theta)$
\end_inset

 is included only once for all objects accessed by it.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 is given by (6.8) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 in case of G-EDF, and (6.10) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 in case of G-RMA.
 Substituting 
\begin_inset Formula $RC_{re}(T_{i})=\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i_{max}}$
\end_inset

, covers 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 given by (6.8) and (6.10) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and maintains correctness of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_0"

\end_inset

).
 
\begin_inset Formula $\zeta_{i}$
\end_inset

 is the set of tasks with higher priority than any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_0"

\end_inset

) becomes 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i_{max}}+\sum_{max\_m}\left\{ s_{j_{max},\forall\bar{\tau_{j}^{l}}}\right\} }{T_{i}}\label{eq:fblt_pnf_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor }{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\beta_{i}^{1}=\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)$
\end_inset

, 
\begin_inset Formula $\beta_{i}^{2}=\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i_{max}}+\sum_{max\_m}\left\{ s_{j_{max},\forall\bar{\tau_{j}^{l}}}\right\} $
\end_inset

, 
\begin_inset Formula $\beta_{i}^{3}=\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)$
\end_inset

 and 
\begin_inset Formula $\beta_{i}^{4}=\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor $
\end_inset

.
 So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\beta_{i}^{1}+\beta_{i}^{2}}{T_{i}}\label{eq:fblt_pnf_comparison_2}\\
\le & \sum_{\forall\tau_{i}}\frac{\beta_{i}^{3}+\beta_{i}^{4}}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\,\tau_{i}$
\end_inset


\begin_inset Formula 
\begin{equation}
\beta_{i}^{1}+\beta_{i}^{2}\le\beta_{i}^{3}+\beta_{i}^{4}\label{eq:fblt_pnf_comparison_3}
\end{equation}

\end_inset


\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_3"

\end_inset

) holds if 
\begin_inset Formula $\forall\,\tau_{i}$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
\beta_{i}^{1} & \le & \beta_{i}^{3}\label{eq:fblt_pnf_comparison_4}\\
\beta_{i}^{2} & \le & \beta_{i}^{4}\label{eq:fblt_pnf_comparison_5}
\end{eqnarray}

\end_inset

According to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_4"

\end_inset

)
\begin_inset Formula 
\begin{equation}
\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)\le\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\theta)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)\label{eq:fblt_pnf_comparison_6}
\end{equation}

\end_inset

For each 
\begin_inset Formula $s_{i}^{k}\in s_{i}$
\end_inset

, there are a set of zero or more 
\begin_inset Formula $\bar{s_{j}^{h}}(\Theta)\in\tau_{j},\,\forall\tau_{j}\ne\tau_{i}$
\end_inset

 that are conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming this set of conflicting transactions with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $\eta_{i}^{k}(j)=\left\{ \bar{s_{j}^{h}}(\Theta)\in\tau_{j}:\left(\Theta\in\theta_{i}\right)\wedge\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(\bar{s_{j}^{h}}(\Theta)\not\in\eta_{i}^{l},\, l\ne k\right)\right\} $
\end_inset

.
 The last condition 
\begin_inset Formula $\bar{s_{j}^{h}}(\Theta)\not\in\eta_{i}^{l},\, l\ne k$
\end_inset

 in definition of 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 ensures that common transactions 
\begin_inset Formula $\bar{s_{j}^{h}}$
\end_inset

 that can conflict with more than one transaction 
\begin_inset Formula $s_{i}^{k}\in\tau_{i}$
\end_inset

 are split among different 
\begin_inset Formula $\eta_{i}^{k}(j),\, k=1,..,|s_{i}|$
\end_inset

.
 This condition is necessary because in PNF, no two or more transactions
 of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be aborted by the same transaction of 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

.
 Let 
\begin_inset Formula $\gamma_{i}^{k}$
\end_inset

 be subset of 
\begin_inset Formula $\gamma_{i}$
\end_inset

 that contains tasks with transactions conflicting directly with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 By substitution of 
\begin_inset Formula $\eta_{i}^{k}(j)$
\end_inset

 and 
\begin_inset Formula $\gamma_{i}^{k}$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_6"

\end_inset

), (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_6"

\end_inset

) holds if 
\begin_inset Formula $\forall\, s_{i}^{k}$
\end_inset

:
\begin_inset Formula 
\[
\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\le\sum_{\forall\tau_{j}\in\gamma_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\Theta)\in\eta_{i}^{k}(j)}len\left(\bar{s_{j}^{h}}(\Theta)\right)\right)
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}\le\frac{\sum_{\forall\tau_{j}\in\gamma_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\Theta)\in\eta_{i}^{k}(j)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})}{len(s_{i}^{k})}\label{eq:fblt_pnf_comparison_7}
\end{equation}

\end_inset

By definition of 
\begin_inset Formula $\eta_{i}^{k}(j)$
\end_inset

, if 
\begin_inset Formula $\bar{s_{j}^{h}}(\Theta)$
\end_inset

 can conflict with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{i}^{l}$
\end_inset

, then 
\begin_inset Formula $\bar{s_{j}^{h}}(\Theta)$
\end_inset

 belongs either to 
\begin_inset Formula $\eta_{i}^{k}$
\end_inset

 or 
\begin_inset Formula $\eta_{i}^{l}$
\end_inset

, but not both.
 Let 
\begin_inset Formula $\bar{\eta_{i}^{k}}(j)=\eta_{i}^{k}(j)-\left\{ \bar{s_{j}^{h}}(\Theta)|\bar{s_{j}^{h}}(\Theta)\, can\, belong\, to\,\eta_{i}^{l}\, where\, l\neq k\right\} $
\end_inset

.
 So, 
\begin_inset Formula $\bar{\eta_{i}^{k}}(j)$
\end_inset

 equals 
\begin_inset Formula $\eta_{i}^{k}(j)$
\end_inset

 excluding any transaction that can belong to another 
\begin_inset Formula $\eta_{i}^{l}(j),\, l\neq k$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_7"

\end_inset

) holds if 
\begin_inset Formula 
\begin{equation}
\therefore\,\delta_{i}^{k}\le\frac{\sum_{\forall\tau_{j}\in\gamma_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\Theta)\in\bar{\eta_{i}^{k}}(j)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)-\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})}{len(s_{i}^{k})}\label{eq:fblt_pnf_comparison_8}
\end{equation}

\end_inset

where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\sum_{\forall\tau_{j}\in\gamma_{i}^{k}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}(\Theta)\in\bar{\eta_{i}^{k}}(j)}len\left(\bar{s_{j}^{h}}(\theta)\right)\right)$
\end_inset

 is the total length of all transactions that can conflict only with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})$
\end_inset

 is the total length of at most 
\begin_inset Formula $m-1$
\end_inset

 longest transactions that can conflict directly or transitively with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
According to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_5"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i_{max}}+\sum_{max\_m}\left\{ s_{j_{max},\forall\bar{\tau_{j}^{l}}}\right\} \le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor \label{eq:fblt_pnf_comparison_9}
\end{equation}

\end_inset

Let 
\begin_inset Formula $s_{i,j_{max}}=max_{\forall\,\bar{\tau_{j}^{l}}}(s_{i_{max}},s_{j_{max}})$
\end_inset

.
 So, 
\begin_inset Formula $s_{i,j_{max}}$
\end_inset

 is the maximum transactional length in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 or any lower priority job.
 Let 
\begin_inset Formula $s_{j_{min}}=min\left\{ len(s_{j}^{h}),\,\forall s_{j}^{h}\in\bar{\tau_{j}^{l}}\right\} $
\end_inset

.
 So, 
\begin_inset Formula $s_{j_{min}}$
\end_inset

 is the smallest transactional length in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 with lower priority than any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\because\,\sum_{max\_m}\left\{ s_{j_{max},\forall\bar{\tau_{j}^{l}}}\right\} \le\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i,j_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_9"

\end_inset

) holds if 
\begin_inset Formula 
\begin{equation}
\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i,j_{max}}+\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i,j_{max}}\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)|\ddot{s_{j}^{h}}|\, s_{j_{min}}\right)\right\rfloor \label{eq:fblt_pnf_comparison_10}
\end{equation}

\end_inset


\begin_inset Formula $\because\,\zeta_{i}$
\end_inset

 includes all jobs with higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

, and 
\begin_inset Formula $\bar{\tau_{j}^{l}}$
\end_inset

 includes all jobs with lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_10"

\end_inset

) holds if 
\begin_inset Formula $\forall\,\tau_{i}$
\end_inset

 
\begin_inset Formula 
\[
\sum_{\forall\tau_{j}\neq\tau_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)s_{i,j_{max}}\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)|\ddot{s_{j}^{h}}|\, s_{j_{min}}\right)\right\rfloor 
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\therefore\,\frac{s_{i,j_{max}}}{s_{j_{min}}}\le\frac{\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)|\ddot{s_{j}^{h}}|\right)\right\rfloor }{\sum_{\forall\tau_{j}\neq\tau_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}\label{eq:fblt_pnf_comparison_11}
\end{equation}

\end_inset


\begin_inset Formula $\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)|\ddot{s_{j}^{h}}|\right)\right\rfloor $
\end_inset

 is the minimum number of times any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 can be blocked due to non-conflicting transactions in all lower priority
 jobs.
 
\begin_inset Formula $\sum_{\forall\tau_{j}\neq\tau_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)$
\end_inset

 is the maximum release time of all jobs not belonging to 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 From (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_8"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_pnf_comparison_11"

\end_inset

), Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
FBLT vs.
 Lock-free
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_edf_lock-free}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\delta_{max}=max\{\delta_{i}^{k},\,\forall i,k\}$
\end_inset

.
 Under G-EDF and G-RMA, schedulability of FBLT is equal or better than lock-free
 with 
\begin_inset Formula $s_{max}$
\end_inset

 larger than 
\begin_inset Formula $r_{max}$
\end_inset

 if for each 
\begin_inset Formula $\tau{}_{i}$
\end_inset

 if: 1) total number of conflicting accesses by other tasks under lock-free
 is much greater than number of processors multiplied by number of transactions
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

 plus 1.
 2) 
\begin_inset Formula $\delta_{max}$
\end_inset

 is small.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lock-free synchronization 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5,stmconcurrencycontrol:emsoft11"

\end_inset

 accesses only one object.
 Thus, the number of accessed objects per transaction in FBLT is limited
 to one.
 This allows us to compare the schedulability of FBLT with the lock-free
 algorithm.
\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rc"

\end_inset

) and (6.17) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
 
\begin_inset Formula $D_{A}(T_{i})$
\end_inset

 is replaced by 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_delay"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} +RC_{re}(T_{i})}{T_{i}}\label{eq:fblt_lf_comparison_1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}\right)\right)+RC_{re}(T_{i})}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is the number of retry loops of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that access the same objects as accessed by any retry loop of 
\begin_inset Formula $\tau_{i}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of
 any task 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 For G-EDF(G-RMA), any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 under FBLT has the same pattern of interference from higher priority jobs
 as ECM(RCM) respectively.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 for ECM, RCM and lock-free are given by Claims 25, 26 and 27 in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 respectively.
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset Formula $RC_{re}(T_{i})=\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}},\,\forall\tau_{j}\neq\tau_{i}$
\end_inset

 covers 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 for G-EDF/FBLT and G-RMA/FBLT.
 
\begin_inset Formula $RC_{re}(T_{i})=\left\lceil \frac{T_{i}}{T_{j}}\right\rceil r_{i_{max}},\,\forall\tau_{j}\neq\tau_{i}$
\end_inset

 covers retry cost for G-EDF/lock-free and G-RMA/lock-free.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lf_comparison_1"

\end_inset

) becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} +\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}}{T_{i}}\label{eq:fblt_lf_comparison_8}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}\right)\right)+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil r_{i_{max}}}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Since 
\begin_inset Formula $s_{max}\ge s_{i_{max}},\, s_{j_{max}},\, len(s_{i}^{k}),\, len(s_{iz}^{k}),\,\forall i,z,k$
\end_inset

 and 
\begin_inset Formula $r_{max}\ge r_{i_{max}}$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lf_comparison_8"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\left(\left(\sum_{\forall s_{i}^{k}}\left(\delta_{i}^{k}+|\chi_{i}^{k}|\right)\right)+m+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)s_{max}}{T_{i}}\label{eq:fblt_lf_comparison_6}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}\right)\right)+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)r_{max}}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset


\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_lf_comparison_6"

\end_inset

) holds if for each 
\begin_inset Formula $\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\left(\sum_{\forall s_{i}^{k}}\left(\delta_{i}^{k}+|\chi_{i}^{k}|\right)\right)+m+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)s_{max}\label{eq:fblt_lf_comparison_7}\\
\le & \left(\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}\right)\right)+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)r_{max}\nonumber 
\end{eqnarray}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}\right)\right)+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil }{\left(\sum_{\forall s_{i}^{k}}\left(\delta_{i}^{k}+|\chi_{i}^{k}|\right)\right)+m+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil }\label{eq:fblt_lf_comparison_9}
\end{eqnarray}

\end_inset

By definition of 
\begin_inset Formula $\chi_{i}^{k}$
\end_inset

, 
\begin_inset Formula $\sum_{\forall s_{i}^{k}}|\chi_{i}^{k}|\le|s_{i}|m$
\end_inset

.
 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}\right)\right)+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil }{|s_{i}|\left(\delta_{max}+m\right)+m+\sum_{\forall\tau_{j}\neq\tau_{i}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil }\label{eq:fblt_lf_comparison_10}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
So, If 
\begin_inset Formula $\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}\right)\gg m\left(|s_{i}|+1\right)$
\end_inset

, and 
\begin_inset Formula $\delta_{i}^{k}\rightarrow0$
\end_inset

, then 
\begin_inset Formula $s_{max}$
\end_inset

 can be longer than 
\begin_inset Formula $r_{max}$
\end_inset

 with better schedulability of FBLT compared to schedulability of lock-free.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Section
FBLT and closed nesting
\end_layout

\begin_layout Subsection
Preliminary
\end_layout

\begin_layout Standard
A nested transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is represented as a 
\shape italic
tree
\shape default
 or a 
\shape italic
transaction family
\shape default
, where 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is the 
\shape italic
root
\shape default
.
 Any (sub)transaction that contains other (sub)transactions is called a
 
\shape italic
parent
\shape default
, while a sub-transaction is called a 
\shape italic
child
\shape default
.
 Thus, a sub-transaction can be a parent and a child at the same time.
 Root does not have a parent.
 A sub-transaction without children is called a 
\shape italic
leaf
\shape default
.
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 can be any (sub)transaction lying in the tree whose root is 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, including 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 itself down to the leaves.
 Roof of the tree to which 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 belongs is denoted as 
\begin_inset Formula $R(s_{i*}^{k})$
\end_inset

.
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 begins after start of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by at least 
\begin_inset Formula $\nabla_{i*}^{k}$
\end_inset

.
 Set of leaves of the tree whose root is 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $L(s_{i*}^{k})$
\end_inset

.
 Parent of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $Par(s_{i*}^{k})$
\end_inset

.
 Set of direct children of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is denoted as 
\begin_inset Formula $Ch(s_{i*}^{k})$
\end_inset

.
 Set of children of any (sub)transaction 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

, including grand children down to leaves, are called 
\shape italic
descendants
\shape default
 of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

, 
\begin_inset Formula $Des(s_{i*}^{k})$
\end_inset

.
 Set of parents and grand parents of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 up to the root are called 
\shape italic
ancestors
\shape default
, 
\begin_inset Formula $Anc(s_{i*}^{k})$
\end_inset

.
 A (sub)transaction 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 and its descendants are represented as a set of (sub)transactions 
\begin_inset Formula $\left\{ s_{i*}^{k}\right\} $
\end_inset

.
 Thus, 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

 is a 
\shape italic
tree
\shape default
 or a 
\shape italic
transactional family
\shape default
 whose root is 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 (Sub)transactions in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

 are ordered by their start time relative to 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 with ties broken arbitrarily.
 Thus, if 
\begin_inset Formula $s_{i1*}^{k}$
\end_inset

(
\begin_inset Formula $s_{i2*}^{k}$
\end_inset

) begins after start of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 by 
\begin_inset Formula $\nabla_{i1*}^{k}$
\end_inset

(
\begin_inset Formula $\nabla_{i2*}^{k}$
\end_inset

) respectively, and 
\begin_inset Formula $\nabla_{i1*}^{k}<\nabla_{i2*}^{k}$
\end_inset

, then 
\begin_inset Formula $s_{i1*}^{k}$
\end_inset

 comes before 
\begin_inset Formula $s_{i2*}^{k}$
\end_inset

 in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

.
 The 
\begin_inset Formula $a^{th}$
\end_inset

 direct child of 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

.
 Thus, 
\begin_inset Formula $s_{i*-a}^{k}\in\left\{ s_{i*}^{k}\right\} $
\end_inset

.
 The set of 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

 and its descendants is a subset of 
\begin_inset Formula $\left\{ s_{i*}^{k}\right\} $
\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
(i.e., 
\begin_inset Formula $\left\{ s_{i*-a}^{k}\right\} \subseteq\left\{ s_{i*}^{k}\right\} $
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
).
 A parent precedes its children in order, thus 
\begin_inset Formula $s_{i*}^{k}<s_{i*-a}^{k}$
\end_inset

.
 
\begin_inset Formula $len(s_{i*}^{k})$
\end_inset

 includes lengths of all its children, as any 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

 executes inside 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 
\begin_inset Formula $\Theta_{i*}^{k}$
\end_inset

 represents set of objects accessed by 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 
\begin_inset Formula $\Theta_{i*-a}^{k}$
\end_inset

 represents set of objects accessed by 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

.
 
\begin_inset Formula $\Theta_{i*-a}^{k}$
\end_inset

 may contain objects not in 
\begin_inset Formula $\Theta_{i*}^{k}$
\end_inset

.
 Thus, if 
\begin_inset Formula $\theta$
\end_inset

 is accessed by both 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

, then 
\begin_inset Formula $\theta\in\Theta_{i*}^{k},\,\Theta_{i*-a}^{k}$
\end_inset

.
 If 
\begin_inset Formula $\theta$
\end_inset

 is accessed by 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 but not 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

, then 
\begin_inset Formula $\theta\in\Theta_{i*}^{k}$
\end_inset

 but 
\begin_inset Formula $\theta\not\in\Theta_{i*-a}^{k}$
\end_inset

.
 If 
\begin_inset Formula $\theta$
\end_inset

 is accessed by 
\begin_inset Formula $s_{i*-a}^{k}$
\end_inset

 but not by 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

, then 
\begin_inset Formula $\theta\in\Theta_{i*-a}^{k}$
\end_inset

, but 
\begin_inset Formula $\theta\not\in\Theta_{i*}^{k}$
\end_inset

.
 The set of objects accessed by all (sub)transactions in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

 is 
\begin_inset Formula $\{\Theta_{i*}^{k}\}=\cup_{\forall s_{i*}^{k}\in\{s_{i*}^{k}\}}\Theta_{i*}^{k}$
\end_inset

.
 
\begin_inset Formula $p(s_{i*}^{k})$
\end_inset

 is priority of (sub)transaction 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 Generally, we assume 
\begin_inset Formula $p(s_{i*}^{k}),\,\forall s_{i*}^{k}\in\{s_{i*}^{k}\}$
\end_inset

 is the same unless stated otherwise.
\end_layout

\begin_layout Standard

\series bold
\shape italic
Transitive retry with closed nesting:
\series default
\shape default
 
\begin_inset Formula $\Theta_{i}^{k^{ex}}$
\end_inset

 is the same as 
\begin_inset Formula $\Theta_{i}^{ex}$
\end_inset

 excluding objects that cannot cause conflict with 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 directly nor transitively.
 
\begin_inset Formula $\Theta_{i}^{k^{ex}}$
\end_inset

 is the same for any 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 (i.e., 
\begin_inset Formula $\Theta_{i}^{k^{ex}}=\Theta_{i*}^{k^{ex}},\,\forall s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

).
 This is because children abort with their parents under closed nesting.
 Thus, objects accessed by 
\begin_inset Formula $Par\{s_{i*}^{k}\}$
\end_inset

 are included in 
\begin_inset Formula $\Theta_{i*}^{k^{ex}}$
\end_inset

.
 
\begin_inset Formula $\gamma_{i}^{k^{ex}}$
\end_inset

 is the set of tasks whose (sub)transactions access any object in 
\begin_inset Formula $\Theta_{i}^{k^{ex}}$
\end_inset

.
 
\begin_inset Formula $\gamma_{i}^{k}$
\end_inset

 is the set of tasks whose (sub)transactions access any object in 
\begin_inset Formula $\{\Theta_{i}^{k}\}$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
\shape italic
Conflicting (sub)Transaction:
\series default
\shape default
 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 is the 
\begin_inset Formula $a^{th}$
\end_inset

 (sub)transaction in 
\begin_inset Formula $\{s_{j*}^{l}\}$
\end_inset

 that can conflict directly with any (sub)transaction in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

.
 Let the set of objects accessed by 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 be 
\begin_inset Formula $\Theta1$
\end_inset

.
 By definition of 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

, 
\begin_inset Formula $\Theta1\cap\{\Theta_{i*}^{k}\}\neq\emptyset$
\end_inset

.
 Let 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 begins after start of 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 by 
\begin_inset Formula $\nabla1$
\end_inset

.
 Let 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},b)$
\end_inset

 begins after start of 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 by 
\begin_inset Formula $\nabla2$
\end_inset

.
 If 
\begin_inset Formula $a<b$
\end_inset

, then 
\begin_inset Formula $\nabla1<\nabla2$
\end_inset

.
 The first (sub)transaction in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

 that can be interfered by 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 is defined as 
\shape italic
Inverse Conflicting (sub)Transaction
\shape default
 
\begin_inset Formula $CT^{-1}(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

.
 
\begin_inset Formula $CT^{ex}(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 is the same as 
\begin_inset Formula $CT(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 except that 
\begin_inset Formula $\Theta1\cap\Theta_{i*}^{k^{ex}}\neq\emptyset$
\end_inset

.
 By definition of 
\begin_inset Formula $\Theta_{i*}^{k^{ex}}$
\end_inset

, 
\begin_inset Formula $CT^{ex}(s_{i*}^{k},s_{j*}^{l},a)$
\end_inset

 may not directly conflict with any (sub)transaction in 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

.
 Thus, there will be no definition for 
\shape italic
Inverse Conflicting (sub)Transaction
\shape default
 in transitive retry.
\end_layout

\begin_layout Subsection
Motivation beyond nesting for real-time CMs
\end_layout

\begin_layout Standard
When a child transaction aborts in closed and open nesting, the parent transacti
on does not have to abort.
 By proper organization of objects within (sub)transactions, only child
 transactions need to be aborted.
 Thus, retry cost can be reduced.
\end_layout

\begin_layout Subsection
Candidate CMs to use nesting
\end_layout

\begin_layout Standard
PNF
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

 requires a priori knowledge of accessed objects within transactions.
 Only the first 
\begin_inset Formula $m$
\end_inset

 non-conflicting transactions are allowed to execute concurrently and non-preemp
tively.
 Thus, PNF makes no use of nesting.
 A non-preemptive parent transaction will enforce its children to be non-preempt
ive also.
 So, no other (sub)transaction can abort a non-preemptive transaction, nor
 its children.
 If PNF is modified such that only objects accessed by parent is known a
 priori, then deadlock is inevitable.
 This is illustrated by the following example.
\end_layout

\begin_layout Standard

\series bold
Example 1
\series default

\begin_inset CommandInset label
LatexCommand label
name "Example-1:pnf_nesting_deadlock"

\end_inset

: Assume 
\begin_inset Formula $s_{i}^{k}(\theta_{1})$
\end_inset

 is a parent transaction that has a child sub-transaction 
\begin_inset Formula $s_{i-1}^{k}(\theta_{2})$
\end_inset

.
 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 accesses only 
\begin_inset Formula $\theta_{1}$
\end_inset

, and 
\begin_inset Formula $s_{i-1}^{k}(\theta_{2})$
\end_inset

 access only 
\begin_inset Formula $\theta_{2}$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

 is another parent transaction that has a child 
\begin_inset Formula $s_{j-1}^{l}(\theta_{1})$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

 accesses only 
\begin_inset Formula $\theta_{2}$
\end_inset

, and 
\begin_inset Formula $s_{j-1}^{l}(\theta_{1})$
\end_inset

 accesses only 
\begin_inset Formula $\theta_{1}$
\end_inset

.
 Initially, 
\begin_inset Formula $s_{i}^{k}(\theta_{1})$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

 can execute non-preemptively in parallel.
 
\begin_inset Formula $s_{i-1}^{k}(\theta_{2})$
\end_inset

 conflicts with the non-preemptive transaction 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

.
 So, 
\begin_inset Formula $s_{i-1}^{k}(\theta_{2})$
\end_inset

 has to wait until 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

 finishes.
 
\begin_inset Formula $s_{j-1}^{l}(\theta_{1})$
\end_inset

 conflicts with the non-preemptive transaction 
\begin_inset Formula $s_{i}^{k}(\theta_{1})$
\end_inset

.
 Thus, 
\begin_inset Formula $s_{j-1}^{l}(\theta_{1})$
\end_inset

 waits until 
\begin_inset Formula $s_{i}^{k}(\theta_{1})$
\end_inset

 finishes.
 But 
\begin_inset Formula $s_{i}^{k}(\theta_{1})$
\end_inset

 waits until its child 
\begin_inset Formula $s_{i-1}^{k}(\theta_{2})$
\end_inset

 finishes, and 
\begin_inset Formula $s_{j}^{l}(\theta_{2})$
\end_inset

 waits until its child 
\begin_inset Formula $s_{j-1}^{l}(\theta_{1})$
\end_inset

 finishes.
 This cycle represents a deadlock.
\end_layout

\begin_layout Standard
FBLT
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

, by definition, depends on LCM.
 LCM, in turn, depends on ECM (RCM) for G-EDF (G-RMA), respectively.
 Experimental results show superiority of FBLT over LCM, ECM and RCM
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

.
 Thus, FBLT is a good candidate to use nested transactions.
\end_layout

\begin_layout Subsection
Design rationale
\end_layout

\begin_layout Standard
To support closed nesting in FBLT, two design choices exist:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{closed_nesting_fblt_one_delta}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under closed nesting FBLT, it is preferable to use one 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for all (sub)transactions 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 than to use different 
\begin_inset Formula $\delta_{i*}^{k}$
\end_inset

 for each 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 (i.e., 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 includes abortion of any 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nested (sub)transactions 
\begin_inset Formula $\{s_{i*}^{k}\}$
\end_inset

 can be represented as one non-nested transaction of length 
\begin_inset Formula $len(s_{i}^{k})$
\end_inset

 and accessed objects 
\begin_inset Formula $\{\Theta_{i}^{k}\}$
\end_inset

.
 Thus, upper bound on retry cost using one 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for all 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 will be the same as in non-nested case.
 Using different 
\begin_inset Formula $\delta_{i*}^{k}$
\end_inset

 for each 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 imposes extra constraints on nested transactions compared to non-nested
 transactions as illustrated by the following cases:
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has only one child 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

.
 In non-nested case, 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is treated as one transaction with 
\begin_inset Formula $\delta\_max_{i}^{k}$
\end_inset

 maximum abort times.
 Under closed nesting FBLT, assume 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has 
\begin_inset Formula $\delta{}_{i}^{k}$
\end_inset

 maximum abort times, and 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 has 
\begin_inset Formula $\delta_{i-a}^{k}$
\end_inset

 maximum abort times.
 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 can be non-preemptive before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 After 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 commits (relatively to its parent because of closed nesting), 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 may abort, enforcing 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 to retry again.
 Then it will be useless to let a child be non-preemptive while one of its
 ancestors is not.
 If 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 is aborted 
\begin_inset Formula $\delta_{i-a}^{k}$
\end_inset

 times for each time 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts, then the total abort times of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 will be 
\begin_inset Formula $\delta_{i}^{k}\left(1+\delta_{i-a}^{k}\right)$
\end_inset

.
 Thus, for nested transactions to reach the same abort number in non-nested
 case, 
\begin_inset Formula $\delta_{i}^{k}\left(1+\delta_{i-a}^{k}\right)$
\end_inset

 should equal 
\begin_inset Formula $\delta\_max_{i}^{k}$
\end_inset

.
 Thus, 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 is inversely related to 
\begin_inset Formula $\delta_{i-a}^{k}$
\end_inset

.
 As nesting level increases, 
\begin_inset Formula $\delta_{i*}^{k}$
\end_inset

 for any 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 will be inversely related to maximum abort number of 
\begin_inset Formula $Par(s_{i*}^{k})$
\end_inset

 and 
\begin_inset Formula $Ch(s_{i*}^{k})$
\end_inset

.
 This problem is avoided by using one 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for all 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Following the previous case except that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes non-preemptive before 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

.
 Then either 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 enforces 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 to be non-preemptive, or 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 waits for 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 to be non-preemptive after 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 aborts for 
\begin_inset Formula $\delta_{i-a}^{k}$
\end_inset

.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 enforces 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 to be non-preemptive, then 
\begin_inset Formula $\delta_{i-a}^{k}$
\end_inset

 is useless.
 Otherwise, if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 waits for 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

 to become non-preemptive, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is delayed by 
\begin_inset Formula $s_{i-a}^{k}$
\end_inset

.
 Thus, retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is increased over non-nested case.
 This problem is avoided by using one 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for all 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

.
\end_layout

\begin_layout Standard
Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{closed_nesting_fblt_one_alpha}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 be nested transactions under closed nesting FBLT where 
\begin_inset Formula $p(s_{j}^{l})>p(s_{i}^{k})$
\end_inset

.
 Let 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has not reached 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 yet.
 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 is the result of interference of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 as defined by LCM.
 Using the same 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 to resolve conflict of all (sub)transactions 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 interfered by any 
\begin_inset Formula $s_{j*}^{l}\in\{s_{j}^{l}\}$
\end_inset

 is preferable than using different 
\begin_inset Formula $\alpha_{i*j*}^{kl}$
\end_inset

 for different (sub)transactions (i.e., 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 aborts if 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of 
\begin_inset Formula $len(s_{i}^{k})$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
FBLT defaults to LCM when a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has not aborted more that 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 times.
 Let there be only one 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for any (sub)transaction 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 interfered by 
\begin_inset Formula $s_{j*}^{l}\in\{s_{j}^{l}\}$
\end_inset

.
 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 can be represented as a single non-nested transaction, and so is 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 Thus, using the same 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for nested transactions will not increase retry cost nor blocking time
 over non-nested case.
 On the other hand, using different 
\begin_inset Formula $\alpha_{i*j*}^{kl}$
\end_inset

 for different (sub)transactions can increase retry cost and/or blocking
 time as given by the following cases:
\end_layout

\begin_layout Enumerate
Each (sub)transaction 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 has its own 
\begin_inset Formula $\alpha_{i*\, j}^{kl}$
\end_inset

 due to interference by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Assume 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has a child 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

.
 Assume 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 has 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 (
\begin_inset Formula $\alpha_{i-1\, j}^{kl}$
\end_inset

) when it interferes with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

(
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

) respectively.
 
\begin_inset Formula $p_{j}^{l}>p_{i}^{k},\, p_{i-1}^{k}$
\end_inset

.
 Assume conflict between 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 is detected before 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 from its execution length.
 Let 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 has passed 
\begin_inset Formula $\alpha_{i-1\, j}^{kl}$
\end_inset

 of its execution length.
 By LCM, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will abort and retry.
 In non-nested case, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will not abort because 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has not reached 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 from its execution length yet.
 Thus, blocking time due to lower priority tasks in closed nesting is increased
 over non-nested case.
 The closer 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 gets to the start of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and the shorter 
\begin_inset Formula $len(s_{i*}^{k})$
\end_inset

 becomes, the more blocking time of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 suffers.
 This problem is avoided if there is only one 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for any 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 interfered by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Using the previous scenario.
 Let 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 finishes before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of its execution length.
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 aborts and retries due to 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 After 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 finishes, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 will abort and retry because it has not reached 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of its execution length yet.
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 will also retry with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Thus, previous abortion of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is useless.
 This problem is avoided if there is only one 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for any 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 interfered by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s_{j}^{l}$
\end_inset

 detects conflict with 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 before 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Conflict between 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 occurs before 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{i-1\, j}^{kl}$
\end_inset

 from its execution length, but after 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 passes 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 from its execution length.
 By LCM, 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 aborts and retries in favor of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 After that, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 detects conflict with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 By LCM, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 aborts and retries in favor of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Thus, retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is increased by the retry cost of 
\begin_inset Formula $s_{i-1}^{k}$
\end_inset

 which would not have happened in non-nested case.
 This problem is avoided if there is only one 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for any 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 interfered by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Previous cases consider multiple (sub)transactions in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 interfered by the same 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Now, we consider one transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 interfered by multiple (sub)transactions in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 Let 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{j-1}^{l}$
\end_inset

 interfere with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 and 
\begin_inset Formula $\alpha_{ij-1}^{kl}$
\end_inset

 result from interference of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{j-1}^{l}$
\end_inset

.
 By definition of LCM, 
\begin_inset Formula $\alpha_{ij-1}^{kl}len(s_{i}^{k})\ge\alpha_{ij}^{kl}len(s_{i}^{k})$
\end_inset

.
 Assume 
\begin_inset Formula $s_{j-1}^{l}$
\end_inset

 conflicts with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches some point in 
\begin_inset Formula $\alpha_{ij-1}^{kl}-\alpha_{ij}^{kl}$
\end_inset

 of its execution length.
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 has not conflicted with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 yet.
 According to 
\begin_inset Formula $\alpha_{ij-1}^{kl}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 should abort and retry, but according to 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is the one to abort and retry.
 In non-nested case, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 would abort and retry.
 Thus, using 
\begin_inset Formula $\alpha_{ij-1}^{kl}$
\end_inset

 increases retry cost of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 over non-nested case.
 On the other hand, if 
\begin_inset Formula $s_{j-1}^{l}$
\end_inset

 aborts, blocking time of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 due to 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 would be the same as in non-nested case.
 The increase in retry cost is avoided if there is only one 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 for any 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 interfered by multiple (sub)transactions in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
\end_layout

\begin_layout Standard
Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retry cost with closed nesting
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:parent_child_retry_cost}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 be the first descendant of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 that can conflict with some (sub)transaction in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 (i.e., 
\begin_inset Formula $CT(s_{i}^{k},s_{j}^{l},1)$
\end_inset

).
 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 begins after start of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 by 
\begin_inset Formula $\nabla_{j*}^{l}$
\end_inset

.
 Let 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 be the first descendant of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 that can be interfered by some (sub)transaction in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is the same first (sub)transaction in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 that can conflict with some (sub)transaction in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 (i.e., 
\begin_inset Formula $CT(s_{j}^{l},s_{i}^{k},1)$
\end_inset

).
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 begins after start of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by 
\begin_inset Formula $\nabla_{i*}^{k}$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 starts after 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 by 
\begin_inset Formula $\triangle$
\end_inset

.
 If 
\begin_inset Formula $\triangle<0$
\end_inset

, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 starts before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 No other (sub)transaction can conflict with any (sub)transaction in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 or 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 Under closed nesting, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 for 
\begin_inset Formula 
\begin{equation}
RC0_{ij}^{kl}=\begin{cases}
\Pi\left(len\left(s_{j}^{l}\right)-\nabla_{i*}^{k}+\triangle\right) & \mbox{, if }\begin{gathered}\triangle\ge\nabla_{i*}^{k}-len\left(s_{j}^{l}\right)\\
\triangle\le len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}
\end{gathered}
\\
0 & \mbox{, Otherwise}
\end{cases}\label{eq:parent_child_retry_cost}
\end{equation}

\end_inset

where 
\begin_inset Formula $\Pi(x)=\begin{cases}
x & \mbox{, if }x>0\\
0 & \mbox{, Otherwise}
\end{cases}$
\end_inset

.
 
\begin_inset Formula $RC0_{ij}^{kl}$
\end_inset

 is upper bounded by 
\begin_inset Formula $len\left(s_{j}^{l}+s_{i}^{k}\right)-\nabla_{j*}^{l}-\nabla_{i*}^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 is the first (sub)transaction in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 that conflicts with any (sub)transaction in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 Thus, before 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 begins, 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 detects no conflict with 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

, and 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 can run concurrently.
 Due to closed nesting, effects of 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 appear only after 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits.
 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 is the first descendant of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 that can conflict with any (sub)transaction in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 So, there is no 
\begin_inset Formula $s_{j*+1}^{l}\neq s_{j*}^{l}$
\end_inset

 such that 
\begin_inset Formula $\left(\Theta_{j*+1}^{l}\cap\{\Theta_{i}^{k}\}\neq\emptyset\right)\wedge\left(\nabla_{j*+1}^{l}<\nabla_{j*}^{l}\right)$
\end_inset

.
 Thus, during 
\begin_inset Formula $len(s_{j}^{l})-\nabla_{j*}^{l}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries due to 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 and/or later sub-transactions in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 is the first (sub)transaction in 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 that can be interfered by any (sub)transaction in 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 Due to closed nesting, parent (sub)transaction does not abort due to child
 abortion.
 Thus, the first descendant of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 that needs to abort and retry is 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

.
 For 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 to conflict with 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 should start no less than 
\begin_inset Formula $\nabla_{i*}^{k}-len\left(s_{j}^{l}\right)$
\end_inset

 relative to start of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Otherwise, 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 would have finished before 
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 starts and there will be no conflict between 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 must start before end of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Otherwise, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 would have finished before 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 starts, and there will be no conflict between 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 The worst conflict scenario between 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 occurs when 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 starts just before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 commits.
 Thus, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 aborts and retries for at most 
\begin_inset Formula $len(s_{j}^{l})-\nabla_{j*}^{l}+len(s_{i}^{k})-\nabla_{i*}^{k}$
\end_inset

.
 If 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 are overlapping, then the overlapping of conflicting sub-transactions in
 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 and 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 should be subtracted from the maximum retry cost, otherwise the overlapping
 part will be summed twice.
 The conflicting overlapping part of 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 during 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is 
\begin_inset Formula $len(s_{i}^{k})-\triangle-\nabla_{j*}^{l}$
\end_inset

.
 Retry cost must be positive.
 Otherwise, there is no conflict.
 That is why 
\begin_inset Formula $U(x)$
\end_inset

 is used.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:closed_nested_lcm_before_alpha_two_tx}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under closed nested FBLT, any (sub)transaction 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 uses closed nested LCM to resolve conflicts before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes non-preemptive.
 Under closed nested LCM, 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 aborts and retries due to only one interference of higher priority 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 by at most 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC1_{ij}^{kl}=\begin{cases}
\Pi\left(len\left(s_{j}^{l}\right)-\nabla_{i*}^{k}+\triangle\right) & \mbox{,}\begin{gathered}\triangle\ge\nabla_{i*}^{k}-len\left(s_{j}^{l}\right)\\
\triangle\le min\left(\begin{gathered}len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}\\
\alpha_{ij}^{kl}len\left(s_{i}^{k}\right)
\end{gathered}
\right)
\end{gathered}
\\
0 & \mbox{, Otherwise}
\end{cases}\label{eq:closed_nested_lcm_before_alpha_two_tx}
\end{equation}

\end_inset

where 
\begin_inset Formula $\nabla_{j*}^{l}$
\end_inset

 is the time interval between starts of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $CT(s_{i}^{k},s_{j}^{l},1)$
\end_inset

.
 
\begin_inset Formula $\nabla_{i*}^{k}$
\end_inset

 is the time interval between starts of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $CT(s_{j}^{l},s_{i}^{k},1)$
\end_inset

.
 
\begin_inset Formula $\Pi(x)=\begin{cases}
x & \mbox{, if }x>0\\
0 & \mbox{, Otherwise}
\end{cases}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under closed nested LCM, any (sub)transaction 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 aborts and retries due to 
\begin_inset Formula $s_{j*}^{l}\in\{s_{j}^{l}\}$
\end_inset

 if 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 begins before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of its execution length (i.e., 
\begin_inset Formula $\alpha_{ij}^{kl}len(s_{i}^{k})$
\end_inset

).
 Following Claim 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:parent_child_retry_cost}
\end_layout

\end_inset

, retry cost of 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 due to interference of 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 can be calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:parent_child_retry_cost"

\end_inset

) conditioning that 
\begin_inset Formula $\triangle\le\alpha_{ij}^{kl}len\left(s_{i}^{k}\right)$
\end_inset

.
 Lower bound of 
\begin_inset Formula $\triangle$
\end_inset

 given in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:parent_child_retry_cost"

\end_inset

) should be less than 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 (i.e., 
\begin_inset Formula $\nabla_{i*}^{k}-len\left(s_{j}^{l}\right)\le\alpha_{ij}^{kl}$
\end_inset

).
 Otherwise, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 starts after 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 reaches 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of its execution length, and 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 will not abort due to 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:closed_nested_lcm_after_alpha}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under closed nested FBLT, any (sub)transaction 
\begin_inset Formula $s_{i*}^{k}\in\{s_{i}^{k}\}$
\end_inset

 uses closed nested LCM to resolve conflicts before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes non-preemptive.
 Under closed nested LCM, 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 aborts and retries due to lower priority 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has passed 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 of its execution length.
 Under closed nested LCM, 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 aborts and retries due to lower priority 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 by 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
at most
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Formula 
\begin{equation}
RC2_{ji}^{lk}=\begin{cases}
\Pi\left(len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}-\triangle\right) & ,\,\begin{gathered}\triangle\ge\alpha_{ij}^{kl}len\left(s_{i}^{k}\right)\\
\triangle\le len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}
\end{gathered}
\\
0 & ,\mbox{ Otherwise}
\end{cases}\label{eq:closed_nested_lcm_after_alpha_two_tx}
\end{equation}

\end_inset

 where 
\begin_inset Formula $\nabla_{j*}^{l}$
\end_inset

 is the time interval between starts of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $CT(s_{i}^{k},s_{j}^{l},1)$
\end_inset

.
 
\begin_inset Formula $\Pi(x)=\begin{cases}
x & \mbox{, if }x>0\\
0 & \mbox{, Otherwise}
\end{cases}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proof is the same as proof of Claim 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:parent_child_retry_cost}
\end_layout

\end_inset

 except for:
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{i*}^{k}$
\end_inset

 can overlap with 
\begin_inset Formula $s_{j*}^{l}$
\end_inset

 for 
\begin_inset Formula $\triangle+len\left(s_{j}^{l}\right)-\nabla_{i*}^{k}$
\end_inset

.
 Thus, 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 can abort and retry due to 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 for 
\begin_inset Formula $len\left(s_{j}^{l}+s_{i}^{k}\right)-\nabla_{j*}^{l}-\nabla_{i*}^{k}-\triangle-len\left(s_{j}^{l}\right)+\nabla_{i*}^{k}=len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}-\triangle$
\end_inset

.
 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 must start not less than 
\begin_inset Formula $\alpha_{ij}^{kl}len\left(s_{i}^{k}\right)$
\end_inset

, and 
\begin_inset Formula $\alpha_{ij}^{kl}\left(s_{i}^{k}\right)\le len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}$
\end_inset

.
 Otherwise, 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 will not abort and retry due to 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 by definition of LCM.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:closed_nested_lcm_before_delta}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\omega1_{i}^{j}=\begin{cases}
\left\lceil \frac{T_{i}}{T_{j}}\right\rceil  & \mbox{, G-EDF}\\
\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1 & \mbox{, G-RMA}
\end{cases}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\omega2_{i}=\begin{cases}
1 & \mbox{, G-EDF}\\
2 & \mbox{, G-RMA}
\end{cases}$
\end_inset

.
 Let
\begin_inset Formula 
\begin{eqnarray}
RC3_{i}^{k} & = & \sum_{\forall\tau_{j}\in\gamma_{i}^{k^{ex}}}\omega1_{i}^{j}\sum_{\begin{array}{cc}
\forall\{s_{j}^{l}\}\\
\{\Theta_{j}^{l}\}\cap\Theta_{i}^{k^{ex}}\neq\emptyset
\end{array}}max_{\begin{array}{cc}
\forall\{s_{x}^{y}\},\forall\tau_{x}\\
p_{i}^{k}\le p_{x}^{y}<p_{j}^{l}
\end{array}}\left(RC1_{ix}^{ky}\right)\nonumber \\
 & + & \omega2_{i}\sum_{\forall\tau_{j}\in\gamma_{i}^{k}}\sum_{\begin{array}{cc}
\forall\{s_{j}^{l}\}\\
\{\Theta_{j}^{l}\}\cap\Theta_{i}^{k^{ex}}\neq\emptyset
\end{array}}max\left(RC2_{ij}^{kl}\right)\label{eq:closed_nested_lcm_before_delta}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $RC1_{ix}^{ky}$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_before_alpha_two_tx"

\end_inset

) and 
\begin_inset Formula $RC2_{ij}^{kl}$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_after_alpha_two_tx"

\end_inset

).
 Under closed nested FBLT, the maximum retry cost of any transactional family
 
\begin_inset Formula $\{s_{i}^{k}\}\in\tau_{i}^{x}$
\end_inset

 before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes non-preemptive due to other conflicting (sub)transactions is upper
 bounded by 
\begin_inset Formula 
\begin{equation}
RC4_{i}^{k}=\begin{cases}
RC3_{i}^{k} & \mbox{, if }\left\lceil \frac{RC3_{i}^{k}}{len\left(s_{i}^{k}\right)}\right\rceil <\delta_{i}^{k}\\
\delta_{i}^{k}len\left(s_{i}^{k}\right) & \mbox{, Otherwise}
\end{cases}\label{eq:closed_nested_fblt_before_delta}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\omega1_{i}^{j}$
\end_inset

 is maximum number of higher priority jobs 
\begin_inset Formula $\tau_{j}^{h}$
\end_inset

 that can be released during 
\begin_inset Formula $T_{i}$
\end_inset

.
 
\begin_inset Formula $\omega2_{i}$
\end_inset

 is number of lower priority jobs 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 that can be released during 
\begin_inset Formula $T_{i}$
\end_inset

.
 Under G-EDF, only one instance of each 
\begin_inset Formula $\tau_{j}$
\end_inset

 can be of lower priority than current job 
\begin_inset Formula $\tau_{i}^{f}$
\end_inset

.
 So, remaining jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 is the maximum number of higher priority jobs released during 
\begin_inset Formula $T_{i}$
\end_inset

 (i.e., 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

).
 Under G-RMA, all jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 are of higher priority than any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 if 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

 (i.e., 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1$
\end_inset

).
 Also, all jobs of 
\begin_inset Formula $\tau_{j}$
\end_inset

 are of lower priority than any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

 if 
\begin_inset Formula $p_{j}<p_{i}$
\end_inset

 (i.e., 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1$
\end_inset

).
 Under G-RMA with implicit deadlines, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

 if 
\begin_inset Formula $p_{j}<p_{i}$
\end_inset

.
 Thus, maximum number of lower priority jobs 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 that can be released during 
\begin_inset Formula $T_{i}$
\end_inset

 is 
\begin_inset Formula $2$
\end_inset

.
\end_layout

\begin_layout Standard
Under closed nested FBLT, any (sub)transaction 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 uses closed nested LCM to resolve conflicts before 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is aborted 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 times.
 If maximum abort number of 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is less than 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

, then retry cost of 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_before_delta"

\end_inset

).
 Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_before_delta"

\end_inset

) is derived from proof of Claim 5 (Claim 8) in 
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

 for G-EDF (G-RMA) respectively, except for two points: 1) Claims 5 and
 8 in 
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

 calculates retry cost for all transactions in any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, while (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_before_delta"

\end_inset

) calculates retry cost for only one 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 Thus, Claims 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:closed_nested_lcm_before_alpha_two_tx}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:closed_nested_lcm_after_alpha}
\end_layout

\end_inset

 are used to calculate (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_lcm_before_delta"

\end_inset

).
 2) In Claim 5 in 
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

, each higher priority transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be aborted only once by any lower priority transaction.
 In closed nested LCM, due to multiple objects per transaction and nested
 transactions, each 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 can be aborted by all directly and transitively conflicting lower priority
 transactions.
 By definition of closed nested FBLT, 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 retries for at most 
\begin_inset Formula $RC3_{i}^{k}$
\end_inset

 before 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 becomes non-preemptive if maximum abort number of 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 is less than 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 (i.e., 
\begin_inset Formula $\left\lceil \frac{RC3_{i}^{k}}{len\left(s_{i}^{k}\right)}\right\rceil <\delta_{i}^{k}$
\end_inset

).
 Otherwise, 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 aborts and retries for at most 
\begin_inset Formula $\delta_{i}^{k}len\left(s_{i}^{k}\right)$
\end_inset

 before 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 becomes non-preemptive.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:closed_nested_fblt_final}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 be a nested transaction under closed nested FBLT.
 Let 
\begin_inset Formula $RC5_{ij}^{kl}=RC0_{ij}^{kl}$
\end_inset

 as defined in Claim 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:parent_child_retry_cost}
\end_layout

\end_inset

 except that 
\begin_inset Formula $\nabla_{i*}^{k}-len\left(s_{j}^{l}\right)\le\triangle\le min\left(0,len\left(s_{i}^{k}\right)-\nabla_{j*}^{l}\right)$
\end_inset

.
 Let 
\begin_inset Formula $\chi_{i}^{k}$
\end_inset

 be set of nested transactions 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 that can conflict directly or transitively with 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 arranged in non-increasing order of 
\begin_inset Formula $RC0_{ij}^{kl}$
\end_inset

.
 Each 
\begin_inset Formula $\{s_{j}^{l}\}\in\chi_{i}^{k}$
\end_inset

 belongs to a distinct task 
\begin_inset Formula $\tau_{j}$
\end_inset

.
 
\begin_inset Formula $\chi_{i}^{k}(a)$
\end_inset

 is the 
\begin_inset Formula $a^{th}$
\end_inset

 nested transaction in 
\begin_inset Formula $\chi_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $\chi_{i}^{k}=\left\{ \{s_{j}^{l}\}|\left(\Theta_{i}^{k^{ex}}\cap\{\Theta_{j}^{l}\}\neq\emptyset\right)\wedge\left(RC5_{i}^{k}(a)\ge RC5_{i}^{k}(a+1)\right)\right\} $
\end_inset

 where 
\begin_inset Formula $RC5_{i}^{k}(a)=RC5_{ij}^{kl}|\,\chi_{i}^{k}(a)=\{s_{j}^{l}\}$
\end_inset

.
 The total retry cost of any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 under closed nested FBLT due to 1) directly and transitively conflicting
 transactions with any 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

.
 2) release of higher priority jobs is upper bounded by
\begin_inset Formula 
\begin{eqnarray}
RC_{i} & = & \sum_{\forall s_{i}^{k}}\begin{cases}
RC3_{i}^{k} & \mbox{, if }\left\lceil \frac{RC3_{i}^{k}}{len\left(s_{i}^{k}\right)}\right\rceil <\delta_{i}^{k}\\
\delta_{i}^{k}len\left(s_{i}^{k}\right)+\sum_{\forall\chi_{i}^{k}(a),\, a=1}^{a\le m-1}RC5_{ij}^{kl}(a) & \mbox{, otherwise}
\end{cases}\nonumber \\
 & + & RC_{re}(T_{i})\label{eq:closed_nested_fblt_after_delta}
\end{eqnarray}

\end_inset

 
\begin_inset Formula $RC3_{i}^{k}$
\end_inset

 is calculated by Claim 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:closed_nested_lcm_before_delta}
\end_layout

\end_inset

.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 is the retry cost resulting from release of higher priority jobs which
 preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 is calculated by as defined by Claim 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Non-preemptive (sub)transaction 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 resolves conflicts based on the time 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 becomes non-preemptive.
 Thus, non-preemptive 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 can be interfered at most by 
\begin_inset Formula $m-1$
\end_inset

 nested transactions that precede 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 in the 
\begin_inset Formula $m\_set$
\end_inset

 as defined in closed nested FBLT.
 As defined by closed-nested FBLT, nested transactions in the 
\begin_inset Formula $m\_$
\end_inset

set are arranged in FIFO order.
 Thus, if 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

 precedes 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 in 
\begin_inset Formula $m\_$
\end_inset

set, then 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 must have started as a non-preemptive transaction not before non-preemptive
 
\begin_inset Formula $\{s_{j}^{l}\}$
\end_inset

.
 So, 
\begin_inset Formula $RC0_{ij}^{kl}$
\end_inset

 is modified to 
\begin_inset Formula $RC5_{ij}^{kl}$
\end_inset

 to indicate the proper time interval for start of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 relative to 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 The 
\begin_inset Formula $m-1$
\end_inset

 nested transactions preceding 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 result in maximum retry cost to 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 (i.e., 
\begin_inset Formula $\sum_{\forall\chi_{i}^{k}(a),\, a=1}^{a\le m-1}RC5_{ij}^{kl}(a)$
\end_inset

).
 Based on the previous notion and Claims 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:closed_nested_lcm_before_delta}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{clm:parent_child_retry_cost}
\end_layout

\end_inset

 and Claim 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

, Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Any newly released task 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can be blocked by 
\begin_inset Formula $m$
\end_inset

 lower priority non-preemptive nested transactions.
 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 has to wait at most for the whole length of a non-preemptive nested transaction.
 Thus, 
\begin_inset Formula $D_{i}$
\end_inset

 is independent of nesting.
 Blocking time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 (
\begin_inset Formula $D_{i}$
\end_inset

) due to the longest 
\begin_inset Formula $m$
\end_inset

 lower priority non-preemptive nested transaction is calculated by Claim
 3 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

.
 Claim 2 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

 is used to calculate response time under closed nested FBLT where 
\begin_inset Formula $RC_{to}(T_{i})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nested_fblt_after_delta"

\end_inset

).
\end_layout

\begin_layout Subsection
Schedulabiltiy comparison between closed nested and non-nested FBLT
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:closed_nested_non_nested_fblt_schedulabiltiy_comp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability of closed-nested FBLT is better or equal to non-nested FBLT's
 if the conflicting (sub)transactions in each 
\begin_inset Formula $\{s_{i}^{k}\}$
\end_inset

 begin lately relative to start of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let upper bound on retry cost of any task 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 under non-nested FBLT be denoted as 
\begin_inset Formula $RC_{i}^{nn}$
\end_inset

.
 
\begin_inset Formula $RC_{i}^{nn}$
\end_inset

 is calculated by Claim 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

.
 Let upper bound on retry cost of any task 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 under closed-nested FBTL be denoted as 
\begin_inset Formula $RC_{i}^{cn}$
\end_inset

.
 
\begin_inset Formula $RC_{i}^{cn}$
\end_inset

 is calculated by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:closed_nested_fblt_after_delta}
\end_layout

\end_inset

.
 Let 
\begin_inset Formula $D_{i}$
\end_inset

 be the upper bound on blocking time of any newly released task 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 due to lower priority jobs.
 Any newly released task 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can suffer 
\begin_inset Formula $D_{i}$
\end_inset

 blocking time if there are 
\begin_inset Formula $m$
\end_inset

 non-preemptive executing transactions.
 Thus, 
\begin_inset Formula $D_{i}$
\end_inset

 is the same for both closed-nested and non-nested FBLT.
 
\begin_inset Formula $D_{i}$
\end_inset

 is calculated by Claim 2 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

 for both closed-nested and non-nested FBLT.
 For closed-nested FBLT schedulability to be better than schedulability
 of non-nested FBLT: 
\begin_inset Formula 
\begin{equation}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{i}^{cn}+D_{i}}{T_{i}}\le\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{i}^{nn}+D_{i}}{T_{i}}\label{eq:schedulability_comparison}
\end{equation}

\end_inset


\begin_inset Formula $\because$
\end_inset

 
\begin_inset Formula $D_{i}$
\end_inset

 and 
\begin_inset Formula $c_{i}$
\end_inset

 are the same for each 
\begin_inset Formula $\tau_{i}$
\end_inset

 under closed-nested and non-nested FBLT, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:schedulability_comparison"

\end_inset

) holds if:
\begin_inset Formula 
\[
\forall\tau_{i},\, RC_{i}^{cn}\le RC_{i}^{nn}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\therefore\,\delta_{i}^{k}len\left(s_{i}^{k}\right)+\sum_{\forall\chi_{i}^{k}(a),\, a=1}^{a\le m-1}RC5_{ij}^{kl}(a)\le\delta_{i}^{k}len\left(s_{i}^{k}\right)+\sum_{\forall s_{iz}^{k}\in\Upsilon_{i}^{k}}len\left(s_{iz}^{k}\right)
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\therefore\,\sum_{\forall\chi_{i}^{k}(a),\, a=1}^{a\le m-1}RC5{}_{ij}^{kl}(a)\le\sum_{\forall s_{iz}^{k}\in\Upsilon_{i}^{k}}len\left(s_{iz}^{k}\right)\label{eq:closed_nest_vs_non_nested_fblt_1}
\end{equation}

\end_inset

where 
\begin_inset Formula $\Upsilon_{i}^{k}$
\end_inset

 is the set of at most 
\begin_inset Formula $m-1$
\end_inset

 longest transactions conflicting directly or transitively with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 as defined in Claim 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

.
 If 
\begin_inset Formula $\{s_{j}^{l}\}=RC5_{ij}^{kl}(a)$
\end_inset

, then by definition of 
\begin_inset Formula $RC5_{ij}^{kl}$
\end_inset

, 
\begin_inset Formula $\triangle=len(s_{i}^{k})-\nabla_{j*}^{l}$
\end_inset

 if 
\begin_inset Formula $len(s_{i}^{k})-\nabla_{j*}^{l}<0$
\end_inset

.
 So, 
\begin_inset Formula $max\left(RC5_{ij}^{kl}(a)\right)=\Pi\left(len(s_{j}^{l})-\nabla_{i*}^{k}\right)$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 by substitution in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nest_vs_non_nested_fblt_1"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\therefore\,\sum_{\forall\{s_{j}^{l}\}=\chi_{i}^{k}(a),\, a=1}^{a\le m-1}\Pi\left(len(s_{j}^{l})-\nabla_{i*}^{k}\right)\le\sum_{\forall s_{iz}^{k}\in\Upsilon_{i}^{k}}len\left(s_{iz}^{k}\right)\label{eq:closed_nest_vs_non_nested_fblt_2}
\end{equation}

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:closed_nest_vs_non_nested_fblt_2"

\end_inset

) holds as 
\begin_inset Formula $\nabla_{i*}^{k}$
\end_inset

 increases.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Design of a new real-time length-based contention manager with priority
 (LCM)
\end_layout

\begin_layout Standard
For both G-EDF/EDF CM (ECM) and G-RMA/RMA CM (RCM), 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 can be totally repeated if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

- which belongs to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 than 
\begin_inset Formula $T_{i}$
\end_inset

- interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at the end of its execution, while 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is just about to commit.
 So, the LCM  takes the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, as well as 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

, into consideration when deciding which transaction should abort.
 The LCM  can also consider priority of the conflicting tasks.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sec 9.1"

\end_inset

Design rationale of LCM 
\end_layout

\begin_layout Standard
It is assumed that 
\begin_inset Formula $len(s_{j}^{l}(\theta))=c_{m}len(s_{i}^{k}(\theta))$
\end_inset

, where 
\begin_inset Formula $c_{m}\in]0,\infty[$
\end_inset

, to cover all possible lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 The idea is to reduce the opportunity of abortion of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 when it is close to commit when it is interfered, and 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is large.
 This abortion opportunity increases more and more as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to its end of execution, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 gets larger.
 On the other side, as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is early interfered, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is small compared to the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 To decide whether 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 should abort or not, we use a threshold value 
\begin_inset Formula $\psi\in[0,1]$
\end_inset

, that determines the length percentage of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

-
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

- below which 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will abort due to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 If abort percent (abort opportunity) is 0, this means 
\begin_inset Quotes eld
\end_inset

do not abort
\begin_inset Quotes erd
\end_inset

, but if it is 1, this means 
\begin_inset Quotes eld
\end_inset

abort
\begin_inset Quotes erd
\end_inset

.
 Any value between them means 
\begin_inset Quotes eld
\end_inset

to aport with an opportunity equal to this value
\begin_inset Quotes erd
\end_inset

.
 The behaviour of LCM  is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure16.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig16"

\end_inset

Interference of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 by various length 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

 represents five different lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interfering with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at all points of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 For a specific curve (which means a specific length for 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

), 
\begin_inset Formula $\psi$
\end_inset

 value determines the percentage of 
\begin_inset Formula $len(s_{i}^{k}(\theta))$
\end_inset

 above which 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be aborted.
 For example, for 
\begin_inset Formula $len(s_{j}^{l}(\theta))=0.1\times len(s_{i}^{k}(\theta))$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be aborted by 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 if the latter interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 no later than 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 reaches 
\begin_inset Formula $\alpha3$
\end_inset

 percentages of its length.
 After that, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will have to retry.
 As 
\begin_inset Formula $len(s_{j}^{k}(\theta))$
\end_inset

 decreases, the opportunity that it will abort 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at a higher percentage 
\begin_inset Formula $\alpha_{max}$
\end_inset

 increases, as 
\begin_inset Formula $\alpha3>\alpha2>\alpha1$
\end_inset

.
 The chosen function to represent different curves in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

 is 
\begin_inset Formula 
\begin{equation}
f(c_{m},\alpha)=e^{\frac{-c_{m}\alpha}{1-\alpha}}\label{eq49}
\end{equation}

\end_inset

where 
\begin_inset Formula $c_{m}$
\end_inset

 is fixed for a specific curve, but 
\begin_inset Formula $\alpha$
\end_inset

 changes along each curve.
 This function acheives the desired requirements that the abortion opportunity
 is reduced as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to its end of execution (as 
\begin_inset Formula $\alpha\rightarrow1,\, f(c_{m},1)\rightarrow0$
\end_inset

), or as the length of the conflicting transaction is large (as 
\begin_inset Formula $c_{m}\rightarrow\infty,\, f(\infty,\alpha)\rightarrow0$
\end_inset

).
 Meanwhile, this abort opportunity is increased as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is interfered closer to its release (as 
\begin_inset Formula $\alpha\rightarrow0,\, f(c_{m},0)\rightarrow1$
\end_inset

), or as length of conlicting transaction decreases (as 
\begin_inset Formula $c_{m}\rightarrow0,\, f(0,\alpha)\rightarrow1$
\end_inset

).
 It should be noted that all lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 are normalized to the same unit length, this way different values of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 intercept different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at the same percentage 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 (the 
\begin_inset Formula $\alpha$
\end_inset

 value the corresponds the threshold value 
\begin_inset Formula $\psi$
\end_inset

), but the actual length of interception for different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 differ according to 
\begin_inset Formula $len(s_{i}^{k}(\theta))$
\end_inset

 (i.e., let 
\begin_inset Formula $len(s_{i}^{k}(\theta))\ne len(s_{i}^{k+1}(\theta))$
\end_inset

, then for one 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, both 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{i}^{k+1}(\theta)$
\end_inset

 will be intercepted at the same value 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

, but 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k}(\theta))$
\end_inset

 differs from 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k+1}(\theta))$
\end_inset

).
 This normalization of different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is done to simplify calculations.
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 belongs to a higher priority task than 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 If 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 starts before or at the same start time of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, then 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will have to abort and retry until 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 finishes execution.
 But if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 starts after 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, then the comparison illustrated in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec 9.1"

\end_inset

 will be applied.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage to acheive the threashold value 
\begin_inset Formula $\psi$
\end_inset

, then the maximum retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 due to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
\alpha_{max}^{jl}len(s_{i}^{k}(\theta))+len(s_{j}^{l}(\theta))\label{eq47}
\end{equation}

\end_inset

because if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at a 
\begin_inset Formula $\Upsilon$
\end_inset

 percentage, where 
\begin_inset Formula $\Upsilon<\alpha_{max}^{jl}$
\end_inset

, then the maximum retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be 
\begin_inset Formula $\Upsilon len(s_{i}^{k}(\theta))+len(s_{j}^{l}(\theta))$
\end_inset

 which is lower than that calculated in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq47"

\end_inset

).
 And if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage, then 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will not abort.
\end_layout

\begin_layout Standard
It should be noted that a higher priority task, 
\begin_inset Formula $T_{j}$
\end_inset

, can be blocked by a lower priority one, 
\begin_inset Formula $T_{i}$
\end_inset

, if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after the the 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage.
 This blocking time of 
\begin_inset Formula $T_{j}$
\end_inset

, due to 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
(1-\alpha_{max}^{jl})len(s_{i}^{k}(\theta))\label{eq48}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
This part comes from the DATE12 paper, so it has some different notations
 that that mentioned here, but it contains important information
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\backslash
begin{clm} 
\backslash
label{priority_inversion} A higher priority job, $
\backslash
tau_i^z$, suffers from priority inversion for at most number of atomic sections
 in $
\backslash
tau_i^z$.
 
\backslash
end{clm} 
\backslash
begin{proof} Assuming three atomic sections, $s_i^k(
\backslash
theta)$, $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$, where $p_j > p_i$ and $s_j^l(
\backslash
theta)$ interferes with $s_i^k(
\backslash
theta)$ after $
\backslash
alpha_{ij}^{kl}$.
 Then $s_j^l(
\backslash
theta)$ will have to abort and retry.
 At this time, if $s_a^b(
\backslash
theta)$ interferes with the other two atomic sections, and the LCM decides
 which transaction to commit based on comparison between each two transactions.
 So, we have the following cases:- 
\backslash
begin{itemize} 
\backslash
item $p_a < p_i < p_j$, then $s_a^b(
\backslash
theta)$ will not abort any one because it is still in its beginning and
 it is of the lowest priority.
 So.
 $
\backslash
tau_j$ is not indirectly blocked by $
\backslash
tau_a$.
 
\backslash
item $p_i<p_a<p_j$ and even if $s_a^b(
\backslash
theta)$ interferes with $s_i^k(
\backslash
theta)$ before $
\backslash
alpha_{ia}^{kb}$, so, $s_a^b(
\backslash
theta)$ is allowed abort $s_i^k(
\backslash
theta)$.
 Comparison between $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$ will result in LCM choosing $s_j^l(
\backslash
theta)$ to commit and abort $s_a^b(
\backslash
theta)$ because the latter is still beginning, and $
\backslash
tau_j$ is of higher priority.
 If $s_a^b(
\backslash
theta)$ is not allowed to abort $s_i^k(
\backslash
theta)$, the situation is still the same, because $s_j^l(
\backslash
theta)$ was already retrying until $s_i^k(
\backslash
theta)$ finishes.
 
\backslash
item $p_a>p_j>p_i$, then if $s_a^b(
\backslash
theta)$ is chosen to commit, this is not priority inversion for $
\backslash
tau_j$ because $
\backslash
tau_a$ is of higher priority.
 
\backslash
item if $
\backslash
tau_a$ preempts $
\backslash
tau_i$, then LCM will compare only between $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$.
 If $p_a<p_j$, then $s_j^l(
\backslash
theta)$ will commit because of its task's higher priority and $s_a^b(
\backslash
theta)$ is still at its beginning, otherwise, $s_j^l(
\backslash
theta)$ will retry, but this will not be priority inversion because $
\backslash
tau_a$ is already of higher priority than $
\backslash
tau_j$.
 If $
\backslash
tau_a$ does not access any object but it preempts $
\backslash
tau_i$, then CM will choose $s_j^l(
\backslash
theta)$ to commit as only already running transactions are competing together.
 
\backslash
end{itemize} So, by generalizing these cases to any number of conflicting
 jobs, it is seen that when an atomic section, $s_j^l(
\backslash
theta)$, of a higher priority job is in conflict with a number of atomic
 sections belonging to lower priority jobs, $s_j^l(
\backslash
theta)$ can suffer from priority inversion by only one of them.
 So, each higher priority job can suffer priority inversion at most its
 number of atomic section.
 Claim follows.
 
\backslash
end{proof} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Response time of G-EDF/LCM
\end_layout

\begin_layout Standard
By applying the same analogy used to derive equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

), we find that 
\begin_inset Formula $RC(T_{i})$
\end_inset

 can be upper bounded by assuming each conflicting atomic section, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, causing a retry to the maximum length atomic section that accesses object
 
\begin_inset Formula $\theta$
\end_inset

, and this retry will be 
\begin_inset Formula $len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))$
\end_inset

, where 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

 at which 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 forces 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 to retry.
 But the subtracted 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will be replaced by 
\begin_inset Formula $\alpha_{max}^{*}s_{max}(\theta)$
\end_inset

 where 
\begin_inset Formula $\alpha_{max}^{*}=min_{\forall j,\forall l}\{\alpha_{max}^{jl}\}$
\end_inset

, because we are calculating the worst case retry cost, so the minimum percentag
e of 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

 should be the one to subtract.
 Also, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is replaced by 
\begin_inset Formula $\hat{\alpha}_{max}s_{i_{max}}(\theta)$
\end_inset

 where 
\begin_inset Formula $\hat{\alpha}_{max}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{i_{max}}(\theta))$
\end_inset

 at which any of the conflicting atomic sections will enforce 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 to retry.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will be 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC(t(T_{i})) & \le & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))\nonumber \\
 &  & -\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))\label{eq50}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The same way, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray}
RC(t(T_{i})) & \le & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))\nonumber \\
 &  & -\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))\label{eq51}
\end{eqnarray}

\end_inset

and 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will be calculated as in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq5"

\end_inset

) but with using equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq51"

\end_inset

) for each object 
\begin_inset Formula $\theta$
\end_inset

 instead of equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) to get equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))\\
\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq53}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
To get a tighter retry cost, the same rationale of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq15"

\end_inset

) can be used to get equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l^{*}}(\theta)}len(s_{j}^{l^{*}}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta)))+\\
(\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l^{*}}(\theta)}len(s_{j}^{l^{*}}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq52}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
As was said in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec 9.1"

\end_inset

, 
\begin_inset Formula $T_{i}$
\end_inset

 can be blocked by a lower priority task 
\begin_inset Formula $T_{h}$
\end_inset

, if an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 interferes with one of the atomic sections in 
\begin_inset Formula $T_{h}$
\end_inset

,
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, after the maximum allowed percentage of 
\begin_inset Formula $len(s_{h}^{z}(\theta))$
\end_inset

, then, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will abort and retry until 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

 finishes.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 be the studied instance of 
\begin_inset Formula $T_{i}$
\end_inset

.
 For the case of G-EDF, there can be at most only one instance of 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $T_{h}^{v}$
\end_inset

, during 
\begin_inset Formula $t(T_{i})$
\end_inset

, that can have a lower priority (larger absolute deadline) than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 As it was shown that the worst interference pattern of 
\begin_inset Formula $T_{h}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 occurs when the absolute deadline of one instance of 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, coincides with the absolute deadline of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 This means that the 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 will be the first instance of 
\begin_inset Formula $T_{h}$
\end_inset

 with lower priority than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 will be released after 
\begin_inset Formula $d(T_{i}^{x})$
\end_inset

, so it will not block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 So, to get the instance of 
\begin_inset Formula $T_{h}$
\end_inset

 that can block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, the worst interference pattern is shifted a little to the right, as shown
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

, so that 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 will be a carried-out job that can block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure17-a.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17-a"

\end_inset

No blocking to 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure17-b.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17-b"

\end_inset

Blocking to 
\begin_inset Formula $T_{i}$
\end_inset

 by 
\begin_inset Formula $T_{h}^{p}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17"

\end_inset

Interference to 
\begin_inset Formula $T_{i}$
\end_inset

 by higher and lower priority tasks
\end_layout

\end_inset


\end_layout

\end_inset

So, we have two cases for 
\begin_inset Formula $T_{i}$
\end_inset

.
 The first one shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-a"

\end_inset

 which represents the worst case interference pattern of 
\begin_inset Formula $T_{h}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

.
 
\begin_inset Formula $T_{i}$
\end_inset

 does not suffer blocking because 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 is released after the absolute deadline of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 sufferes only from retry cots due to instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, and the retry cost is given in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) and its tighter form (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
 The other case is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

, where the interference pattern in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-a"

\end_inset

 is shifted to the right, so priority of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 is lower than that of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 So, 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 suffers retry cost due to instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p-1}$
\end_inset

, and suffers blocking (as in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq48"

\end_inset

)) due to instance 
\begin_inset Formula $T_{h}^{p}$
\end_inset

.
 Any further instance than 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 cannot block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 because they all start after 
\begin_inset Formula $d(T_{i}^{x})$
\end_inset

.
 The retry and blocking costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be obtained by modifying equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) to include only instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p-1}$
\end_inset

 in the retry cost, and 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 in the blocking cost.
 But as priority of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 is higher than that of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, then any atomic section 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 in 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 can be blocked by only one conflicting atomic section, 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

.
 This is because after 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 will at most start at the same time as any further conflicting atomic section
 in 
\begin_inset Formula $T_{h}^{z}$
\end_inset

, and as 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 belongs to a higher priority task, then the LCM -P will allow it to commit
 first.
 On the other hand, one atomic section in 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, can block multiple atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 because any atomic section with a suitable length in any other task can
 enforce 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

 to retry multiple times, causing multiple atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 to interfer with 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

.
 So, the worst case for blocking of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 by 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 occurs if all atomic sections in 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 that access a specific object 
\begin_inset Formula $\theta$
\end_inset

 are blocked by the maximum-length atomic section in 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 as shown in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq55"

\end_inset

).
\begin_inset Formula 
\begin{equation}
B_{ih}\le\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{max}^{iy})len(s_{h_{max}}(\theta))\label{eq55}
\end{equation}

\end_inset

where 
\begin_inset Formula $\alpha_{max}^{iy}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{h_{max}}(\theta))$
\end_inset

 after which 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 will be enforced to abort and retry.
\end_layout

\begin_layout Standard
Thus, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

) and its tighter form (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

) can be modified to equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) that includes the effect of blocking.
 But as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) includes both retry and blocking cost, it will be called 
\begin_inset Formula $BR(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
BR(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{h}\in\gamma_{(\theta)}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{h}\in\gamma_{(\theta)}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq54}
\end{equation}

\end_inset

To get the total effect of 
\begin_inset Formula $T_{h}$
\end_inset

 on 
\begin_inset Formula $T_{i}$
\end_inset

, we take the maximum cost between retry without blocking and retry with
 blocking that each 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 imposes on 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 But as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) calculates costs depending on each object 
\begin_inset Formula $\theta$
\end_inset

, then a task 
\begin_inset Formula $T_{h}$
\end_inset

 may produce a maximum effect on 
\begin_inset Formula $T_{i}$
\end_inset

 for a specific object 
\begin_inset Formula $\theta_{1}$
\end_inset

 if it induces no blocking, but for another object 
\begin_inset Formula $\theta_{2}$
\end_inset

, it induces blocing on 
\begin_inset Formula $T_{i}$
\end_inset

 to get the maximum cost, but 
\begin_inset Formula $T_{h}$
\end_inset

 cannot be in the two positions for the same 
\begin_inset Formula $T_{i}$
\end_inset

.
 This why equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) should be calculated based on each task 
\begin_inset Formula $T_{h}$
\end_inset

, not on each object 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

.
 This modification also applies to equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
 Thus, the final cost imposed by all 
\begin_inset Formula $T_{h}$
\end_inset

 on 
\begin_inset Formula $T_{i}$
\end_inset

 (this cost will be called 
\begin_inset Formula $CO(t(T_{i}))$
\end_inset

) will be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq56"

\end_inset

) depending on equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

), or by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) depending on equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

) (the tighter form of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

)) and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
CO(t(T_{i}))\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\\
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}
\end{cases}\label{eq56}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
CO(t(T_{i}))\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\sum_{\forall s_{h}^{z^{*}}(\theta)}len(s_{h}^{z^{*}}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta)))+\\
(\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\sum_{\forall s_{h}^{z^{*}}(\theta)}len(s_{h}^{z^{*}}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\\
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}
\end{cases}\label{eq57}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated over an interval 
\begin_inset Formula $L(T_{i})\le\lfloor\frac{t(T_{i})-c_{h}}{t(T_{h})}\rfloor t(T_{h})+c_{h}$
\end_inset

 (which can be deduced from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

) to get a tighter upper bound on response time.
 But during this 
\begin_inset Formula $L(T_{i})$
\end_inset

 duration, 
\begin_inset Formula $T_{i}$
\end_inset

 will not be blocked by any instance of 
\begin_inset Formula $T_{h}$
\end_inset

 because of higher priority of all 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 during 
\begin_inset Formula $L(T_{i})$
\end_inset

 than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 If 
\begin_inset Formula $L(T_{i})$
\end_inset

 is increased over its specified limit, then costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) where the last instance of 
\begin_inset Formula $T_{h}$
\end_inset

 blocks 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) is already included in 
\begin_inset Formula $CO(T_{i})$
\end_inset

, so there is no need to increase 
\begin_inset Formula $L(T_{i})$
\end_inset

 over its pecified limit.
 So, the costs of 
\begin_inset Formula $T_{i}$
\end_inset

 over 
\begin_inset Formula $L(T_{i})$
\end_inset

 can be obtained from equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

), with some modifications to account for LCM -P, and this will result in
 equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq58"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(L(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{h}\in\gamma(\theta)}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1)\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))\\
+\alpha_{max}^{hz}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{T_{h}\in\gamma(\theta)}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1)\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))\\
+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\label{eq58}
\end{equation}

\end_inset

So, the final costs of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $CO(T_{i})$
\end_inset

, can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq59"

\end_inset

).
\begin_inset Formula 
\begin{equation}
CO(T_{i})=\begin{cases}
RC(L(T_{i})) & if\, L(T_{i})\le\lfloor\frac{t(T_{i})-c_{h}}{t(T_{h})}\rfloor t(T_{h})+c_{h}\\
CO(t(T_{i})) & otherwise
\end{cases}\label{eq59}
\end{equation}

\end_inset

and response time of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) but 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will be replaced with 
\begin_inset Formula $CO(T_{i})$
\end_inset

.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparison-between-G-EDF/EDF"

\end_inset

G-EDF/LCM versus ECM
\end_layout

\begin_layout Standard
Execution time of each task 
\begin_inset Formula $T_{i}$
\end_inset

 , in G-EDF/LCM, is inflated by addingt 
\begin_inset Formula $CO(T_{i})$
\end_inset

 to 
\begin_inset Formula $c_{i}$
\end_inset

, and in ECM, by adding 
\begin_inset Formula $RC(T_{i})$
\end_inset

 to 
\begin_inset Formula $c_{i}$
\end_inset

.
 Then, total utilization between ECM and G-EDF/LCM are compared to know
 when G-EDF/LCM will be better as follows :-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{c_{i}+CO(T_{i})}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{c_{i}+RC(T_{i})}{t(T_{i})}\\
\sum_{\forall T_{i}}\frac{CO(T_{i})}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{RC(T_{i})}{t(T_{i})}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
But the 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}(2.s_{max})))\label{eq61}
\end{equation}

\end_inset

with the same assumptions that 
\begin_inset Formula $s_{h}^{l}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

 and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

.
 With the same assumptions, 
\begin_inset Formula $CO(T_{i})$
\end_inset

 can also be upper bounded by 
\begin_inset Formula 
\begin{equation}
CO(T_{i})\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}(1+\alpha_{max})s_{max}))\\
(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}((\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{min})s_{max})+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}(1+\alpha_{max})s_{max}))
\end{cases}\label{eq62}
\end{equation}

\end_inset

where all atomic sections are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

, hence 
\begin_inset Formula $\alpha$
\end_inset

 will be the same for all atomic sections and will be called 
\begin_inset Formula $\alpha_{max}$
\end_inset

.
 So, 
\begin_inset Formula $s_{max}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 are both constants.
 If 
\begin_inset Formula $\sum_{\theta\in\theta_{i}\wedge\theta_{h}}\sum_{\forall s_{h}^{z}(\theta)}$
\end_inset

 and 
\begin_inset Formula $\sum_{\theta\in\theta_{i}\wedge\theta_{h}}\sum_{\forall s_{i}^{y}(\theta)}$
\end_inset

 are both lower than 
\begin_inset Formula $\beta_{i,h}$
\end_inset

, which is the maximum access number of all shared objects by both 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq61"

\end_inset

) will be
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\beta_{i,h}s_{max}\label{eq63}
\end{equation}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq62"

\end_inset

) will be 
\begin_inset Formula 
\begin{equation}
CO(T_{i})\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}\lceil\frac{t(T_{i})}{t(T_{h})}\rceil(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\label{eq64}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor=a_{ih}$
\end_inset

, and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq64"

\end_inset

) will be
\begin_inset Formula 
\begin{eqnarray}
CO(T_{i}) & \le & \sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}a_{ih}(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\nonumber \\
 & \le & \sum_{T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}\label{eq65}
\end{eqnarray}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq63"

\end_inset

) will be 
\begin_inset Formula 
\[
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}s_{max}
\]

\end_inset

Then, G-EDF/LCM will give better performance if 
\begin_inset Formula 
\[
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}}{t(T_{i})}\le\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}s_{max}}{t(T_{i})}
\]

\end_inset

This inequality is ensured if for each 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
(1-\alpha_{min})+a_{ih}(1+\alpha_{max}) & \le & 2a_{ih}\nonumber \\
1-\alpha_{min} & \le & (1-\alpha_{max})a_{ih}\label{eq104}
\end{eqnarray}

\end_inset

If equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq104"

\end_inset

) applies, then schedulability of G-EDF/LCM is equal to or better than ECM.
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor=a_{ih}$
\end_inset

 and 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=a_{ih}+1$
\end_inset

, and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq64"

\end_inset

) will be
\begin_inset Formula 
\begin{eqnarray}
CO(T_{i}) & \le & \sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\nonumber \\
 & \le & \sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}\label{eq66}
\end{eqnarray}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq63"

\end_inset

) will be 
\begin_inset Formula 
\[
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2(a_{ih}+1)\beta_{i,h}s_{max}
\]

\end_inset

For G-EDF/LCM to be better than ECM, then
\begin_inset Formula 
\[
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}}{t(T_{i})}\le\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}2(a_{ih}+1)\beta_{i,h}s_{max}}{t(T_{i})}
\]

\end_inset

This inequality is assured when for each 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset


\begin_inset Formula 
\begin{eqnarray*}
(a_{ih}+1)(1+\alpha_{max}) & \le & 2(a_{ih}+1)\\
1+\alpha_{max} & \le & 2\\
\alpha_{max} & \le & 1
\end{eqnarray*}

\end_inset

Because 
\begin_inset Formula $\alpha_{max}$
\end_inset

 is always less than or equal to 1, then performance of G-EDF/LCM is better
 or equal to that of ECM for 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

.
 So, for all cases, G-EDF/LCM gives better or equal performance to that
 of ECM.
\end_layout

\begin_layout Subsubsection
Comparison between G-EDF/LCM and retry-loop lock-free algorithm
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case
\series default
\shape default
 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq65"

\end_inset

), and retry loop cost is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq32"

\end_inset

).
 Total utilization of G-EDF/LCM is compared to that of retry-loop lock-free
 algorithm to determine which is better as follows :- 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1)\beta_{i,h}r_{max}}{t(T_{i})}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
By choosing 
\begin_inset Formula $1-\alpha_{min}=a_{ih}(1-\alpha_{max})-\Delta a_{ih}$
\end_inset

 , where 
\begin_inset Formula $\Delta>0$
\end_inset

, then schedulability of G-EDF/LCM is better than schedulability of ECM,
 as shown by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq104"

\end_inset

) (
\begin_inset Formula $a_{ih}$
\end_inset

 is at least 1 as there must be at least one instance of 
\begin_inset Formula $T_{h}$
\end_inset

 interfering or blocking 
\begin_inset Formula $T_{i}$
\end_inset

, so 
\begin_inset Formula $\Delta a_{ih}>0$
\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}-\Delta a_{ih}\beta_{i,h}}{t(T_{i})}}\\
 & = & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}a_{ih}\beta_{i,h}}{t(T_{i})}+\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}(1-\Delta)}{t(T_{i})}}\\
 & = & \frac{1}{2(1-\Delta)}+\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}(1-\Delta)}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $a_{ih}\ge1,\,\therefore$
\end_inset

if 
\begin_inset Formula $a_{ih}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\rightarrow\frac{1}{1-\Delta}>1$
\end_inset

, and as 
\begin_inset Formula $a_{ih}\rightarrow\infty,\,\frac{s_{max}}{r_{max}}\rightarrow\frac{1}{2(1-\Delta)}>\frac{1}{2}$
\end_inset

, which means- by proper choice of 
\begin_inset Formula $\Delta$
\end_inset

- better values for length of 
\begin_inset Formula $s_{max}$
\end_inset

 against 
\begin_inset Formula $r_{max}$
\end_inset

 compared with what was provided in ECM 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

.
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq66"

\end_inset

), and comparison between total utilization of G-EDF/LCM and retry-loop
 lock-free is:-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}}{t(T_{i})} & \le\\
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+2)\beta_{i,h}r_{max}}{t(T_{i})}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+2).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & = & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & + & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & = & \frac{1}{1+\alpha_{max}}+\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $a_{ih}\rightarrow1,\,\therefore\frac{s_{max}}{r_{max}}\le\frac{3}{2(1+\alpha_{max})}$
\end_inset

, if 
\begin_inset Formula $\alpha_{max}\rightarrow0,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{3}{2}>1$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{3}{4}>\frac{1}{2}$
\end_inset

.
 This means, in case of low interference and by choosing 
\begin_inset Formula $\alpha_{max}$
\end_inset

 small enough, length of 
\begin_inset Formula $s_{max}$
\end_inset

can be at most 1.5 length of 
\begin_inset Formula $r_{max}$
\end_inset

, but if 
\begin_inset Formula $\alpha_{max}$
\end_inset

 is chosen large, length of 
\begin_inset Formula $s_{max}$
\end_inset

 can still be larger than that provided by ECM (
\begin_inset Formula $0.75r_{max}$
\end_inset

 in G-EDF/LCM against 
\begin_inset Formula $0.5r_{max}$
\end_inset

 in ECM 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

) 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $a_{ih}\rightarrow\infty,\,\therefore\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

, if 
\begin_inset Formula $\alpha_{max}\rightarrow0,\,\therefore\,\frac{s_{max}}{r_{max}}\le1$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{1}{2}$
\end_inset

.
 This means, in case of high interference, length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be as that provided by ECM (from 
\begin_inset Formula $0.5r_{max}$
\end_inset

 to 
\begin_inset Formula $r_{max}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

)
\end_layout

\begin_layout Subsubsection
Comparison between G-EDF/LCM and locking protocols
\end_layout

\begin_layout Standard
Total utilization of G-EDF/LCM is compared against total utilization of
 FMLP and OMLP locking protocols.
 As explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Comparison-between-FMLP"

\end_inset

, blocking time of 
\begin_inset Formula $T_{i}$
\end_inset

 under FMLP is upper bounde by 
\begin_inset Formula 
\begin{eqnarray}
B(T_{i}) & \le & |s\_\theta|_{max}\sum_{T_{i}}(N_{i,s}(m-1)\nonumber \\
 & + & (1+N_{i,l})max_{k\ne i}(N_{k,s}.(m-1)+1)\nonumber \\
 & + & N_{i,l}.(n-1).c1)\label{eq67}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $|s\_\theta|_{max}$
\end_inset

 is the maximum length for short resource by any 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,s}$
\end_inset

 is the number of requests to short resources by 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,l}$
\end_inset

 is the number of requests to long resources by 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $c1$
\end_inset

 is a constant where the maximum length request to any long resource by
 any 
\begin_inset Formula $T_{i}$
\end_inset

 equals 
\begin_inset Formula $c1\times|s\_\theta|_{max}$
\end_inset

.
 Thus, this blocking time is 
\begin_inset Formula $O(n(n+m))$
\end_inset

.
\end_layout

\begin_layout Standard
In case 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq65"

\end_inset

).
 By assuming 
\begin_inset Formula $a_{ih}\le Const1$
\end_inset

, where 
\begin_inset Formula $Const1$
\end_inset

 is the maximum number of instances of any task 
\begin_inset Formula $T_{h}$
\end_inset

 in the period of any other task 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})=O(n^{2})$
\end_inset

.
 In case 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq66"

\end_inset

) which is also 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
So, for schedulability of G-EDF/LCM to be better or equal to that of FMLP,
 total utilization of G-EDF/LCM, whether 
\begin_inset Formula $t(T_{i})$
\end_inset

 is an integer multiple of 
\begin_inset Formula $t(T_{h})$
\end_inset

 or not, is compared against total utilization of FMLP to give that 
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{|s\_\theta|_{max}} & = & \frac{O(n(n+m))}{O(n^{2})}\\
 & = & O(\frac{m}{n})
\end{eqnarray*}

\end_inset

As mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Comparison-of-OMLP"

\end_inset

, the blocking time for 
\begin_inset Formula $T_{i}$
\end_inset

 is upper bounded by 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}$
\end_inset

 which is 
\begin_inset Formula $O(m)$
\end_inset

, and the total utilization of a task set under OMLP is 
\begin_inset Formula $O(nm)$
\end_inset

, but the total utilization under G-EDF/LCM is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 So, by comparing total utilization of G-EDF/LCM and total utilization of
 OMLP, we get
\begin_inset Formula 
\[
\frac{s_{max}}{L_{max}}=O(\frac{m}{n})
\]

\end_inset

So, it is clear that G-EDF/LCM gives the same asymptotic schedulability
 performance of ECM compared with locking protocols, and this is natural
 as the difference between G-EDF/LCM and ECM is only when an atomic section,
 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, of a higher priority task is allowed to abort an atomic section, 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

, of a lower priority task, while this abortion can happen at any point
 in the life time of 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 in ECM, it is restricted in G-EDF/LCM.
\end_layout

\begin_layout Subsubsection
Response time in G-RMA/LCM
\end_layout

\begin_layout Standard
Because of the fixed priority of G-RMA, all instances of the higher priority
 task, 
\begin_inset Formula $T_{j}$
\end_inset

, can interfere with the lower priority task, 
\begin_inset Formula $T_{i}$
\end_inset

, during 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 So, blocking is not considered with higher priority tasks than 
\begin_inset Formula $T_{i}$
\end_inset

, but blocking is considered for all instances, during 
\begin_inset Formula $t(T_{i})$
\end_inset

, of any task, 
\begin_inset Formula $T_{h}$
\end_inset

, with lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

.
 Besides, whether response time is calculated over all 
\begin_inset Formula $t(T_{i})$
\end_inset

, or over an interval 
\begin_inset Formula $L<t(T_{i})$
\end_inset

, the same equations for costs of 
\begin_inset Formula $T_{i}$
\end_inset

 and response time will be used because of fixed priority as shown in equation
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

).
\begin_inset Formula 
\begin{eqnarray}
CO(L(T_{i})) & = & \sum_{\forall T_{j}^{*}}((\sum_{\theta\in(\theta_{i}\wedge\theta_{j})}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{j}(\theta))))\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}\sum_{\theta\in(\theta_{i}\wedge\theta_{h})}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1).\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{max}^{iy})len(s_{h_{max}}(\theta)))\label{eq60}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $L(T_{i})$
\end_inset

 can extend to 
\begin_inset Formula $t(T_{i})$
\end_inset

, and 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length atomic section accessing object 
\begin_inset Formula $\theta$
\end_inset

 among all tasks of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

 itself, 
\begin_inset Formula $T_{j}^{*}=\{T_{j}|(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))\}$
\end_inset

, and 
\begin_inset Formula $\bar{T}_{h}=\{T_{h}|(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))\}$
\end_inset


\end_layout

\begin_layout Standard
Response time can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq22"

\end_inset

) with replacing 
\begin_inset Formula $RC(T_{i})$
\end_inset

 with 
\begin_inset Formula $CO(L(T_{i}))$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and RCM
\end_layout

\begin_layout Standard
By applying the same assumptions in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Comparison-between-G-EDF/EDF"

\end_inset

, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

) can be upper bounded by 
\begin_inset Formula 
\begin{eqnarray}
CO(L(T_{i})) & \le & \sum_{\forall T_{j}^{*}}(\sum_{\theta\in(\theta_{i}\wedge\theta_{j})}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}(1+\alpha_{max})len(s_{max})))\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}(\sum_{\theta\in(\theta_{i}\wedge\theta_{h})}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1).\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{min})len(s_{max})))\nonumber \\
 & = & \sum_{\forall T_{j}^{*}}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1+\alpha_{max})len(s_{max})\beta_{ij})\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})len(s_{max})\beta_{ih})\label{eq68}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\beta_{ij}$
\end_inset

 is the number of access times by 
\begin_inset Formula $T_{j}$
\end_inset

 to shared resources with 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is the same but between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 For RCM, 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)2\beta_{ij}s_{max}\label{eq69}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, by comparing total utilization of G-RMA/LCM with that of RCM, we get
 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1+\alpha_{max})len(s_{max})\beta_{ij})+\sum_{\forall\bar{T}_{h}}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})len(s_{max})\beta_{ih})}{t(T_{i})}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\le\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)2\beta_{ij}len(s_{max})}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})\beta_{ih}}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1-\alpha_{max})\beta_{ij}}{t(T_{i})}\\
\frac{1-\alpha_{min}}{1-\alpha_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

G-RMA scheduler is used and it is assumed that relative deadline of each
 task equals its period, and 
\begin_inset Formula $T_{h}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\therefore\, t(T_{i})\le t(T_{h})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=1$
\end_inset

 for any 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{1-\alpha_{min}}{1-\alpha_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}}{t(T_{i})}}{2\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}\label{eq70}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, if blocking time for each task 
\begin_inset Formula $T_{i}$
\end_inset

 is reduced, then the right hand side of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) is increased, giving a larger upper bound for 
\begin_inset Formula $\frac{1-\alpha_{min}}{1-\alpha_{max}}$
\end_inset

, and giving a wider range for 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 to choose from.
 So, by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

 and 
\begin_inset Formula $\alpha_{min}$
\end_inset

, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) can be applied, and schedulability performance of G-RMA/LCM is better
 or equal to that of RCM.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and retry-loop lock free algorithm
\end_layout

\begin_layout Standard

\series bold
NOTE: THIS SECTION IS OLD.
 LOOK FOR THE NEW SECTION BELOW IT
\end_layout

\begin_layout Standard
\begin_inset Formula $CO(T_{i})$
\end_inset

 for G-RMA/LCM is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq68"

\end_inset

), and 
\begin_inset Formula $RC(T_{i})$
\end_inset

 for retry-loop lock-free algorithm is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq32"

\end_inset

) which is re-written here as
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{v}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{v})}\rceil+1)\beta_{iv}r_{max}\label{eq72}
\end{equation}

\end_inset

But set of tasks 
\begin_inset Formula $T_{v}\in\gamma_{i}$
\end_inset

 are composed of tasks of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

, which are donated as 
\begin_inset Formula $T_{j}$
\end_inset

 in consistence to the index notation of G-RMA/LCM, and tasks of lower priority
 than 
\begin_inset Formula $T_{i}$
\end_inset

, which are donated as 
\begin_inset Formula $T_{h}$
\end_inset

.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq72"

\end_inset

) can be re-written as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq73"

\end_inset

).
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}r_{max}+\sum_{\forall\bar{T_{h}}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}r_{max}\label{eq73}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Assuming 
\begin_inset Formula $\lambda_{3}(i,j)=(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}$
\end_inset

 and 
\begin_inset Formula $\chi_{3}(i,h)=(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}$
\end_inset

.
 So, to determine when schedulability performance of G-RMA/LCM will be better
 or equal to that of retry-loop lock-free, we compare total utilization
 of both as follows:-
\begin_inset Formula 
\[
len(s_{max})\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+\sum_{\forall\bar{T}_{h}}(\chi_{3}(i,h)(1-\alpha_{min}))}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\le r_{max}\sum_{\forall T_{i}}\frac{\sum_{T_{j}^{*}}\lambda_{3}(i,j)+\sum_{\bar{T}_{h}}\chi_{3}(i,h)}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{T_{j}^{*}}\lambda_{3}(i,j)+\sum_{\bar{T}_{h}}\chi_{3}(i,h)}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+\sum_{\forall\bar{T}_{h}}(\chi_{3}(i,h)(1-\alpha_{min}))}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

G-RMA scheduler is used and it is assumed that relative deadline of each
 task equals its period, and 
\begin_inset Formula $T_{h}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\therefore\, t(T_{i})\le t(T_{h})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=1$
\end_inset

 for any 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{min})\beta_{ih})}{t(T_{i})}}\label{eq74}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is kept lower or equal to 
\begin_inset Formula $\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1+\alpha_{max})\beta_{ih})}{t(T_{i})}}$
\end_inset

, where 
\begin_inset Formula $1-\alpha_{min}$
\end_inset

 in 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
denominator
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 of the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is replaced by 
\begin_inset Formula $1+\alpha_{max}$
\end_inset

, then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is ensured because 
\begin_inset Formula $\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1+\alpha_{max})\beta_{ih})}{t(T_{i})}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{max})\beta_{ih})}{t(T_{i})}}$
\end_inset

.
 Thus, 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{(1+\alpha_{max})\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{3}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}\label{eq76}\\
\therefore\frac{s_{max}}{r_{max}} & \le & \frac{1}{1+\alpha_{max}}\label{eq75}
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $0\le\alpha_{max}\le1$
\end_inset

 and by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

, then the minimum upper bound on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is higher than 0.5, so length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be kept higher than half length of 
\begin_inset Formula $r_{max}$
\end_inset

, which is higher than that acheived in the specific cases of RCM mentioned
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-RMA-scheduler-with"

\end_inset

 (actually, 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is a higher than 
\begin_inset Formula $\frac{1}{1+\alpha_{max}}$
\end_inset

 because the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is the actual upper limit to 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

, not the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq76"

\end_inset

)).
 But inequaltiy (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

) makes the higher upper limit on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is 1, which means that the maximum allowed length to 
\begin_inset Formula $s_{max}$
\end_inset

- for performance of G-RMA/LCM to better or equal to that of RCM- is the
 length of 
\begin_inset Formula $r_{max}$
\end_inset

, but considering the special cases in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-RMA-scheduler-with"

\end_inset

, this can be changed as follows:-
\end_layout

\begin_layout Standard
It appears from inequality (
\series bold
\size larger
\bar under

\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset


\series default
\size default
\bar default
) that 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 depend on 
\begin_inset Formula $\beta_{ij}$
\end_inset

, 
\begin_inset Formula $\beta_{ih}$
\end_inset

, 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

.
 The minimum value for 
\begin_inset Formula $\beta_{ij}$
\end_inset

 and 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is 1 as there must be at least one shared resource between 
\begin_inset Formula $T_{i},T_{j}$
\end_inset

 and 
\begin_inset Formula $T_{i},T_{h}$
\end_inset

, but 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 means value of 
\begin_inset Formula $\beta_{ij}$
\end_inset

 is very small compared to that of 
\begin_inset Formula $\beta_{ih}$
\end_inset

, and 
\begin_inset Formula $\beta_{ih}\rightarrow0$
\end_inset

 means the value of 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is very small compared to that of 
\begin_inset Formula $\beta_{ij}$
\end_inset

.
 Also, if 
\begin_inset Formula $\beta_{ij}\rightarrow\infty$
\end_inset

(
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

), then value of 
\begin_inset Formula $\beta_{ij}$
\end_inset

 (
\begin_inset Formula $\beta_{ih}$
\end_inset

) is very large compared to that of 
\begin_inset Formula $\beta_{ih}$
\end_inset

(
\begin_inset Formula $\beta_{ij}$
\end_inset

).
 If 
\begin_inset Formula $\beta_{ij}\rightarrow\infty$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow0$
\end_inset

 (which can happen if higher priority tasks tend to access shared resources
 much more compared with lower priority tasks), then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) 
\begin_inset Formula $\rightarrow$
\end_inset

 
\begin_inset Formula $\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

, which is the same as the general boundary from inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

).
 But if 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

, which happens if higher priority tasks tend to access shared resources
 rarely compared to lower priority tasks , then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) 
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{1}{1-\alpha_{max}}$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

 (which means that an atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 is only allowed to interfere another one 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 when 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is very close to its start of execution), then length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be at most as that of 
\begin_inset Formula $r_{max}$
\end_inset

; the physical interpretation of these parameters (i.e., 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

) is that the effect of blocking in G-RMA/LCM is very large compared to
 that of interference, and it is even increased by making 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

 which means that an atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, belonging to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

, would suffere the maximum blocking time of any atomic section 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, belonging to a lower priority task 
\begin_inset Formula $T_{i}$
\end_inset

, because 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will have to wait for almost the whole length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 in the worst case of blocking, but as retry-loop lock-free also sufferes
 from lower priority task whose effect is approximately the same as lower
 priority tasks in G-RMA/LCM (as 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

), this will render the lengths of 
\begin_inset Formula $s_{max}$
\end_inset

 and 
\begin_inset Formula $r_{max}$
\end_inset

 to be approximately the same in order to make schedulability performance
 of G-RMA/LCM better or equal to that of retry-loop lock-free method.
 But if 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

, then 
\begin_inset Formula $\frac{s_{max}}{r_{max}}\le\infty$
\end_inset

 which means that length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

.
 The physical interpretation for these parameters (i.e., 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

) is that the effect of blocking in G-RMA/LCM is very large compared to
 effect of interference, but as 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

, then at atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will be blocked by another one 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 for a very short time length (almost 0), and this will reduce the effect
 of lower priority tasks too much, in contrast to retry-loop lock-free algorithm
 where lower priority tasks still affect retry cost, thus length of 
\begin_inset Formula $s_{max}$
\end_inset

 will be allowed to be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

 for schedulability performance of G-RMA/LCM to be better or equal to that
 of retry-loop lock-free algorithm.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\rightarrow1$
\end_inset

, then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

)
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{2\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))}\beta_{ij}+2\sum_{(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{2(1+\alpha_{max})\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))}\beta_{ij}+2(1-\alpha_{max})\sum_{(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))}\beta_{ih}}{t(T_{i})}}$
\end_inset

, 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{min})\beta_{ih})}{t(T_{i})}}
\]

\end_inset


\end_layout

\begin_layout Standard
which leaves the system under control of 
\begin_inset Formula $\beta_{ij}$
\end_inset

, 
\begin_inset Formula $\beta_{ih}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 as explained above.
 But if 
\begin_inset Formula $a_{ij}\rightarrow\infty$
\end_inset

, then inequaltiy (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

)
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

 which is the same as the general boundary derived in inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

).
\end_layout

\begin_layout Standard
From the previous analysis, it can be seen that G-RMA/LCM can acheive the
 same value for 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 as RCM, besides, it can increase the minimum upper bound on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 - by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

- from 0.5 in RCM to 
\begin_inset Formula $\frac{1}{1+\alpha_{max}}$
\end_inset

 in G-RMA/LCM.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and retry-loop lock free algorithm
\end_layout

\begin_layout Standard

\series bold
THIS PART BETWEEN QUTATIONS NEEDS TO BE RE-WRITTEN.
 
\series default

\begin_inset Quotes eld
\end_inset

Let 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

, where 
\begin_inset Formula $\tau_{j}^{*}$
\end_inset

 is the set of higher priority tasks to 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\bar{\tau_{j}}$
\end_inset

 is the set of lower priority tasks than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with it.
 Following the same assumptions in (LCM-EDF LOCK-FREE COMPARISON), schedulabilit
y of LCM/RMA is better or equal to retry-loop lock-free if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)\beta_{i}s_{max}}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i}r_{max}}{T_{i}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\nonumber \\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}\label{eq:lcm rma lock-free comparison 1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\bar{\tau_{j}}=\{\tau_{j}:(\tau_{j}\in\gamma_{i})\wedge(p_{j}<p_{i})\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, p_{j}<p_{i},\,\therefore\,\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

 because in G-RMA systems, lower priority means longer relative deadline,
 and the system is assumed to be implicit deadline as defined in Section
 PRELEMINARIES.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 1"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}2r_{max}}{T_{i}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\nonumber \\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}2r_{max}}{T_{i}}\nonumber \\
 & \frac{s_{max}}{r_{max}}\label{eq:lcm rma lock-free comparison 2}\\
\le & \frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}\nonumber 
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\omega_{1}=|\tau_{j}^{*}|$
\end_inset

 be number of tasks with higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

, and let 
\begin_inset Formula $\omega_{2}=|\bar{\tau_{j}}|$
\end_inset

 be number of tasks with lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset Formula $\omega_{1}^{i}\ge$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

, otherwise, there is no conflict with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 To find the maximum and minimum upper bounds for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, the following cases are considered:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}2\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{1-1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}2\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\therefore\frac{s_{max}}{r_{max}}\le1+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 3}
\end{equation}

\end_inset

As the second term in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 3"

\end_inset

) is alawys positive (because 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

), then the minimum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $1$
\end_inset

.
 
\end_layout

\begin_layout Standard
To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 3"

\end_inset

) becomes 
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le1+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

If 
\begin_inset Formula $\omega_{1}^{i}\rightarrow0,\,\omega_{2}^{i}\rightarrow n-1$
\end_inset

 (the maximum and minimum values for 
\begin_inset Formula $\omega_{1}^{i}$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}$
\end_inset

 respectively), then 
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\left(2n-2\right)
\]

\end_inset

Of course, 
\begin_inset Formula $n$
\end_inset

 cannot be lower than 
\begin_inset Formula $2$
\end_inset

.
 Otherwise, there will be no conflicting tasks.
\end_layout

\begin_layout Standard
In this case, 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 are assumed too small.
 This means that the chosen value for 
\begin_inset Formula $\alpha$
\end_inset

 approaches 
\begin_inset Formula $0$
\end_inset

.
 Thus, a higher priority transaction can rarely abort a lower priority transacti
on.
 So, transactions are almost executed in the order they arrive, which is
 not the case for retry-loop lock-free.
 This is the reason for 
\begin_inset Formula $s_{max}$
\end_inset

 to exceed 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{0.5-0.5+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{0.5+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}-\frac{\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}-\frac{\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{4\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4\omega_{2}^{i}-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 4}
\end{equation}

\end_inset

The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

.
 This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

.
 To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 4"

\end_inset

) becomes 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4\omega_{2}^{i}-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+4\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

Let 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1,\,\omega_{1}^{i}\rightarrow0$
\end_inset

, then 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4(n-1)-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le2n-2
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This case is rejected because 
\begin_inset Formula $\alpha_{max}$
\end_inset

 must be greater or equal to 
\begin_inset Formula $\alpha_{min}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 5}
\end{equation}

\end_inset

The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

.
 This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

.
 To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 5"

\end_inset

) becomes 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{2\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

Let 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1,\,\omega_{1}^{i}\rightarrow0$
\end_inset

, then 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\rightarrow\infty
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
From the previous cases, we can derive that upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 extends from 
\begin_inset Formula $0.5$
\end_inset

 to large values.
\end_layout

\begin_layout Subsubsection
G-RMA/LCM versus OMLP
\end_layout

\begin_layout Standard
As blocking time of 
\begin_inset Formula $T_{i}$
\end_inset

 under OMLP is upper bounded by 
\begin_inset Formula $2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}$
\end_inset

 which is 
\begin_inset Formula $O(m)$
\end_inset

, so the total utilization of a task set under OMLP is 
\begin_inset Formula $O(nm)$
\end_inset

, and the total utilization of a task set under G-RMA/LCM is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 To determine when schedulability of G-RMA/LCM is better or equal to that
 of OMLP, total utilization of G-RMA/LCM is compared against that of OMLP
 (FMLP is not considered as it uses G-EDF for scheduling) to get:-
\begin_inset Formula 
\[
\frac{s_{max}}{L_{max}}=O(\frac{m}{n})
\]

\end_inset

So, if the available number of processors in the system is much greater
 than number of tasks, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be much greater than that of 
\begin_inset Formula $L_{max}$
\end_inset

.
\end_layout

\begin_layout Section
Experimental evaluation
\end_layout

\begin_layout Standard
I THINK IN THIS PART I SHOULD MENTION WHAT RESULTS COMING OUT OF THE EXPERIEMNTS
 (IN OTHER WORDS, WHAT THE QUESTIONS ANSWERED BY EXPERIEMNTS ARE.
\end_layout

\begin_layout Subsection
Experiments setup
\end_layout

\begin_layout Subsubsection
Experimental setup from other papers
\end_layout

\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "6001644"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is randomly chosen from 
\begin_inset Formula $[10ms,100ms]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $U_{i}$
\end_inset

 is randomly chosen from 
\begin_inset Formula $[0.01,0.1]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated based on 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $U_{i}$
\end_inset

.
 Tasks are added to each task set until a pre-specified utilization cap
 is reached, or a total of 40 tasks are generated.
\end_layout

\begin_layout Itemize
Utilization cap ranged from 
\begin_inset Formula $\{0.1,0.2,0.3,0.4,0.5,0.6\}$
\end_inset

.
\end_layout

\begin_layout Itemize
Number of shared resources among all tasks is chosen from 
\begin_inset Formula $\{5,10,15,20\}$
\end_inset

.
\end_layout

\begin_layout Itemize
Number of critical sections per task is chosen randomly from 
\begin_inset Formula $\{0,1,2,3,4,5,6\}$
\end_inset

.
\end_layout

\begin_layout Itemize
Length of each critical section is chosen randomly from 
\begin_inset Formula $\{[5,10],[10,20],[20,40],[40,80],[80,160],[160,320]\}\mu s$
\end_inset

.
\end_layout

\begin_layout Itemize
Each setting point has 
\begin_inset Formula $1000$
\end_inset

 samples.
 For some settings, experiment was repeated 
\begin_inset Formula $10$
\end_inset

 times.
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is chosen uniformly from 
\begin_inset Formula $[10ms,100ms]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 on each processor is chosen from 
\begin_inset Formula $[0,1]$
\end_inset

 from exponential distribution with mean 
\begin_inset Formula $0.1$
\end_inset

.
 
\begin_inset Formula $U\in[0.25,0.95]$
\end_inset

 changes in steps of 
\begin_inset Formula $0.05$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $m\in{4,8,16,24,32}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{res}$
\end_inset

 is resource probability.
 
\begin_inset Formula $P_{res}\in[0.05,0.95]$
\end_inset

 changes in steps of 
\begin_inset Formula $0.05$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $r$
\end_inset

 is number of resources.
 
\begin_inset Formula $r$
\end_inset

 is generated randomly from geometric distribution such that 
\begin_inset Formula $r=x$
\end_inset

 with probability 
\begin_inset Formula $(1-P_{res}).P_{res}^{x-1}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $P_{req}$
\end_inset

 is request probability.
 
\begin_inset Formula $P_{req}\in[0.05,0.75]$
\end_inset

 changes in steps of 
\begin_inset Formula $0.05$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,q}$
\end_inset

 is randomly chosen from geometric distribution based on 
\begin_inset Formula $P_{req}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i,q}$
\end_inset

 is chosen randomly from 
\begin_inset Formula $[5\mu s,1280\mu s]$
\end_inset

 using exponential distribution with mean 
\begin_inset Formula $20\mu s$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "brandenburg2008comparison"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is chosen from 4 different sets: 
\begin_inset Formula $[3,33ms],[10,100ms],[33,100ms],[100,1000ms]$
\end_inset

.
 
\begin_inset Formula $T_{i}$
\end_inset

 is an integral.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is chosen uniformly from 
\begin_inset Formula $[0.001,0.1]$
\end_inset

.
 
\begin_inset Formula $U$
\end_inset

 changes in 
\begin_inset Formula $40$
\end_inset

 steps over 
\begin_inset Formula $[0.1,0.5]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated based on 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $u_{i}$
\end_inset

.
 
\begin_inset Formula $e_{i}$
\end_inset

 does not have to be integral.
\end_layout

\begin_layout Itemize
\begin_inset Formula $m\le16$
\end_inset

.
\end_layout

\begin_layout Itemize
For each processor, tasks are generated until a utilization cap per processor
 is reached, or a total of 30 tasks is reached.
\end_layout

\begin_layout Itemize
Number of resource access per task, 
\begin_inset Formula $k$
\end_inset

, is chosen between 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $9$
\end_inset

.
 
\begin_inset Formula $k$
\end_inset

 changes by one step over its range.
\end_layout

\begin_layout Itemize
Access cost of each resource is chosen uniformly from 
\begin_inset Formula $[0.1\mu s,L]$
\end_inset

.
 
\begin_inset Formula $L\in[0.5,15.5\mu s]$
\end_inset

.
 
\begin_inset Formula $L$
\end_inset

 is changed in 
\begin_inset Formula $40$
\end_inset

 steps.
\end_layout

\begin_layout Itemize
Critical sections tend to be short (just a few microseconds).
 Nesting is rare (
\begin_inset Formula $1\%-30\%$
\end_inset

).
 Nesting deeper than 
\begin_inset Formula $2$
\end_inset

 is very rare.
 This point is recorded from other real time applications.
\end_layout

\begin_layout Itemize
Number of resources=
\begin_inset Formula $\frac{K.N}{\alpha.m}$
\end_inset

, where 
\begin_inset Formula $\alpha\in\{0.5,1,2,4\}$
\end_inset

 is sharing degree of resources.
\end_layout

\begin_layout Itemize
Each sampling point has a 
\begin_inset Formula $1000$
\end_inset

 task sets.
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $m\in\{4,8\}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $N\le20\rightarrow m=4,\, N\le40\rightarrow m=8$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}\in[0,u_{max}]$
\end_inset

 uniformly.
 
\begin_inset Formula $u_{max}\in\{0.1,0.3\}$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until reaching maximum number of tasks,
 or total utilization exceeds 
\begin_inset Formula $m/2$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}\in[50,500\mu s]$
\end_inset

 uniformly.
\end_layout

\begin_layout Itemize
Short resource number is 
\begin_inset Formula $\frac{6.N}{m}$
\end_inset

.
 Each task has 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $3$
\end_inset

 short resource requests.
\end_layout

\begin_layout Itemize
Duration of each short resource is uniformly distributed in 
\begin_inset Formula $[1.3,6.5\mu s]$
\end_inset

.
 Each short resource is shared between 
\begin_inset Formula $m/2$
\end_inset

 tasks.
\end_layout

\begin_layout Itemize
Long resource number is 
\begin_inset Formula $2$
\end_inset

.
\end_layout

\begin_layout Itemize
Each long resource is accessed randomly by 
\begin_inset Formula $2$
\end_inset

 to 
\begin_inset Formula $4$
\end_inset

 tasks for only 
\begin_inset Formula $1$
\end_inset

 request by each task.
\end_layout

\begin_layout Itemize
Duration of each long resource is uniformly distributed in 
\begin_inset Formula $[20,30\mu s]$
\end_inset

.
\end_layout

\begin_layout Itemize
For each task and each resource request 
\begin_inset Formula $R$
\end_inset

, at most two nested requests 
\begin_inset Formula $Rn$
\end_inset

 of duration 
\begin_inset Formula $|Rn|=|R|/3$
\end_inset

, if 
\begin_inset Formula $R$
\end_inset

 is a short request, and 
\begin_inset Formula $|Rn|=3$
\end_inset

, otherwise.
 Any given (long or short) outermost request contains one nested request
 with probability 
\begin_inset Formula $2·f(1−f)$
\end_inset

 and two nested requests with probability 
\begin_inset Formula $f^{2}$
\end_inset

.
 The value of 
\begin_inset Formula $f∈[0,0.1)$
\end_inset

 is further referred to as the 
\shape italic
nesting factor
\shape default
.
 
\begin_inset Formula $f\in[0,0.09]$
\end_inset

.
\end_layout

\begin_layout Itemize
Measures schedulability in terms of nesting factor instead of utilization.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "bc+08"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is uniformly distributed over 
\begin_inset Formula $[10,100ms]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 was distributed differently for each experiment: (i) uniformly, over the
 range [0.001, 0.1], [0.1, 0.4], or [0.5, 0.9]; (ii) exponentially, with average
 0.05 (range [0.001, 0.1]), 0.25 (range [0.1, 0.4]), or 0.7 (range [0.5, 0.9]); or
 (iii) bimodally, distributed uniformly over [0.001, 0.5) with probability
 8/9, and over [0.5, 0.999] with probability 1/9.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated using 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $u_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until a total utilization cap is reached
 (
\begin_inset Formula $0.8$
\end_inset

 for soft, and 
\begin_inset Formula $0.65$
\end_inset

 for hard), or addition of 100 tasks to each task set.
\end_layout

\begin_layout Itemize
Number of resources is 
\begin_inset Formula $\frac{K.N}{\alpha.m}$
\end_inset

.
 
\begin_inset Formula $K\in[1,9]$
\end_inset

 is maximum number of resource access per task.
 
\begin_inset Formula $\alpha\in\{1,2\}$
\end_inset

 is resource sharing
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "5161514,springerlink:10.1007/s11241-010-9097-2"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is distributed uniformly over 
\begin_inset Formula $[0.1,0.4]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is distributed uniformly over 
\begin_inset Formula $[10,100ms]$
\end_inset

.
 
\begin_inset Formula $T_{i}$
\end_inset

 is integral.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated based on 
\begin_inset Formula $u_{i}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

.
 
\begin_inset Formula $e_{i}$
\end_inset

 may not be integral.
\end_layout

\begin_layout Itemize
Tasks are generated until 
\begin_inset Formula $\hat{U}\in[1,32]$
\end_inset

 is reached.
\end_layout

\begin_layout Itemize
\begin_inset Formula $R=N.res$
\end_inset

, 
\begin_inset Formula $R$
\end_inset

 is total number of resources.
 
\begin_inset Formula $res\in[0.1,5]$
\end_inset

 (or 
\begin_inset Formula $[0.01,7]$
\end_inset

 in 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s11241-010-9097-2"

\end_inset

) is average number of resources per task.
\end_layout

\begin_layout Itemize
\begin_inset Formula $Q=R.\, Contention$
\end_inset

, where 
\begin_inset Formula $Contention\in[50,550]$
\end_inset

 (or 
\begin_inset Formula $[50,1050]$
\end_inset

 in 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s11241-010-9097-2"

\end_inset

) is average number of requests per resource per second.
 
\begin_inset Formula $Q=Q_{w}+Q_{r}$
\end_inset

, where 
\begin_inset Formula $Q_{w}$
\end_inset

 (write density) 
\begin_inset Formula $=Q.wratio$
\end_inset

, and 
\begin_inset Formula $wratio\in[0.01,0.5]$
\end_inset

 is write ratio.
 
\begin_inset Formula $Q_{r}$
\end_inset

 (read density) 
\begin_inset Formula $=Q(1-wratio)$
\end_inset

.
\end_layout

\begin_layout Itemize
read (write) requests are generated randomly for each task until read (write)
 density is reached.
\end_layout

\begin_layout Itemize
Each request contains 
\begin_inset Formula $d$
\end_inset

 levels of nesting requests based on 
\begin_inset Formula $nest\in[0,0.5]$
\end_inset

 probability.
\end_layout

\begin_layout Itemize
Request duration (resource access cost) is distributed uniformly in 
\begin_inset Formula $[1,15\mu s]$
\end_inset

.
\end_layout

\begin_layout Itemize
Each sampling point has 50 task sets.
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s10617-012-9090-1"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is integral drawn uniformly from 
\begin_inset Formula $[10,100ms]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is drawn from the following distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions were 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
The mean of exponential distributions were 
\begin_inset Formula $0.1$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.5$
\end_inset

 (heavy).
 The exponential distributions were further limited to the range 
\begin_inset Formula $(0,1]$
\end_inset

 by redrawing samples that did not fall within the range of feasible utilization
s.
\end_layout

\begin_layout Itemize
In the three bimodal distributions, utilizations were distributed uniformly
 over either 
\begin_inset Formula $[0.001,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 with respective probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

 (light), 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

 (medium), and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

 (heavy).
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated based on 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $u_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $m\in{4,8,16}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\hat{U}\in[1,m]$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until 
\begin_inset Formula $\hat{U}$
\end_inset

 is reached.
\end_layout

\begin_layout Itemize
Each task set contains at least 
\begin_inset Formula $m+1$
\end_inset

 tasks by reducing the execution cost of each task to free up utilization
 and by then adding additional tasks if necessary.
\end_layout

\begin_layout Itemize
\begin_inset Formula $n_{r}\in\{\frac{m}{4},\frac{m}{2},m,2m\}$
\end_inset

 is number of resources, 
\begin_inset Formula $p^{acc}\in\{0.1,0.25.0.4\}$
\end_inset

 is access probability, 
\begin_inset Formula $p^{write}\in{0.05,0.1,0.2,0.3,0.5,0.7,1}$
\end_inset

 is write ratio.
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,q}\in\{1,..,5\}$
\end_inset

 uniformly.
\end_layout

\begin_layout Itemize
The maximum request length 
\begin_inset Formula $L_{i,q}$
\end_inset

 was chosen uniformly from one of three critical section length distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
Short critical sections, each 
\begin_inset Formula $L_{i,q}$
\end_inset

 was chosen randomly from 
\begin_inset Formula $[1μs,15μs]$
\end_inset

.
\end_layout

\begin_layout Itemize
Intermediate critical sections from 
\begin_inset Formula $[1μs,100μs]$
\end_inset

.
\end_layout

\begin_layout Itemize
Long critical sections from 
\begin_inset Formula $[5μs,1280μs]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Each test point has 1000 task sets.
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "lakshmanan2009coordinated"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}\in[10,100ms]$
\end_inset

 uniformly.
\end_layout

\begin_layout Itemize
Tasks are added to each task set to reach 
\begin_inset Formula $\hat{U}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $m=8$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $5$
\end_inset

 tasks per processor.
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

 critical sections per task.
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

 lockers per mutex.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i}\in[5,1280\mu s]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "4700432"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}\in[10,100ms]$
\end_inset

 uniformly.
 
\begin_inset Formula $T_{i}$
\end_inset

 is integral.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is distributed over:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
bimodal distributions, utilizations were distributed uniformly over either
 
\begin_inset Formula $[0.001,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 with respective probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

 (light), 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

 (medium), and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

 (heavy).
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated from 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $u_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\hat{U}\in[1,32]$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until 
\begin_inset Formula $\hat{U}$
\end_inset

 is reached.
\end_layout

\begin_layout Itemize
Each sampling point has 2000 task sets.
\end_layout

\begin_layout Itemize
Measures schedulability.
\end_layout

\end_deeper
\begin_layout Enumerate
From paper 
\begin_inset CommandInset citation
LatexCommand cite
key "Baker05acomparison"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Each data set contains 1000000 sets of tasks.
\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{i}\in[1,1000]$
\end_inset

 uniformly.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 (truncated to bound utilization into 
\begin_inset Formula $[0.001,0.999]$
\end_inset

) is drawn from the following distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distribution, between 
\begin_inset Formula $1/period$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Itemize
bimodal distribution: heavy tasks uniform between 
\begin_inset Formula $0.5$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

; light tasks uniform between 
\begin_inset Formula $1/period$
\end_inset

 and 
\begin_inset Formula $0.5$
\end_inset

; probability of being heavy = 
\begin_inset Formula $1/3^{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
exponential distribution with mean 
\begin_inset Formula $0.25$
\end_inset

.
\end_layout

\begin_layout Itemize
exponential distribution with mean 
\begin_inset Formula $0.5$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\hat{U},\, m\in\{2,4,8\}$
\end_inset

.
\end_layout

\begin_layout Itemize
Initially, each dataset contains 
\begin_inset Formula $m+1$
\end_inset

 tasks, then tasks are added to dataset until reaching 
\begin_inset Formula $\hat{U}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
From Aaron's thesis
\end_layout

\begin_deeper
\begin_layout Itemize
Look at table 6-1.
\end_layout

\begin_layout Itemize
Based on Baker.
\end_layout

\end_deeper
\begin_layout Enumerate
From Matthew's thesis
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}\in[10,100ms]$
\end_inset

 uniformly.
\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is drawn from the following distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

(heavy).
\end_layout

\begin_layout Itemize
bimodal over 
\begin_inset Formula $[0.001,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\hat{U}\in[1,48]$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until 
\begin_inset Formula $\hat{U}$
\end_inset

 is reached.
\end_layout

\begin_layout Itemize
Each sampling point has 
\begin_inset Formula $1000$
\end_inset

 task sets.
\end_layout

\end_deeper
\begin_layout Enumerate
From Branderburg dissertation
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is drawn from the following distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

(heavy).
\end_layout

\begin_layout Itemize
bimodal 
\begin_inset Formula $[0.001,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 with respective probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

 (light), 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

 (medium), and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 is drawn uniformly from the following ranges 
\begin_inset Formula $[3ms,33ms]$
\end_inset

 (short), 
\begin_inset Formula $[10ms,100ms]$
\end_inset

 (moderate), and 
\begin_inset Formula $[50ms,250ms]$
\end_inset

 (long).
\end_layout

\begin_layout Itemize
\begin_inset Formula $\hat{U}\in[1,24]$
\end_inset

.
 
\begin_inset Formula $\hat{U}$
\end_inset

 changes in steps of 
\begin_inset Formula $0.5$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until 
\begin_inset Formula $\hat{U}$
\end_inset

 is reached.
\end_layout

\begin_layout Itemize
Each sampling point has 
\begin_inset Formula $100$
\end_inset

 task sets.
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,q}$
\end_inset

 is uniformly chosen from 
\begin_inset Formula ${1,2,3,4,5}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i,q}$
\end_inset

 is randomly chosen from the following uniform distributions: short 
\begin_inset Formula $[1μs,15μs]$
\end_inset

, intermediate 
\begin_inset Formula $[1μs,100μs]$
\end_inset

, and long 
\begin_inset Formula $[5μs,1280μs]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $pacc\in{0.1,0.25,0.4,0.55,0.7,0.85}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $n_{r}\in{1,3,5,6,12,24}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $wratio\in{0.1,0.2,0.3,0.5,0.75}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Title
Suggested parameters
\end_layout

\begin_layout Section
Task's parameters
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{U}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{2,4,6,8\}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
uniformly chosedn from 
\begin_inset Formula $[10ms,100ms]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $u_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uniformly chosen from 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

(heavy).
 
\begin_inset Formula $\sum_{\forall i}u_{i}\le\hat{U}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $e_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $u_{i}.T_{i}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $Total_{Tx}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uniformly chosen from 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy) relative to 
\begin_inset Formula $e_{i}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $max_{Tx}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uniformly chosen from 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy) relative to 
\begin_inset Formula $e_{i}$
\end_inset

.
 
\begin_inset Formula $max_{Tx}\le Total_{Tx}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $min_{Tx}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uniformly chosen from 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy) relative to 
\begin_inset Formula $e_{i}$
\end_inset

.
 
\begin_inset Formula $min_{Tx}\le max_{Tx}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N^{r}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{i}^{r}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uniformly chosen from 
\begin_inset Formula $(0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{i}$
\end_inset

 uniformly from 
\begin_inset Formula $[10ms,100ms]$
\end_inset

.
 
\begin_inset Formula $T_{i}$
\end_inset

 is integral.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $u_{i}$
\end_inset

 is drawn from the following distributions:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform 
\begin_inset Formula $[0.001,0.1]$
\end_inset

 (light), 
\begin_inset Formula $[0.1,0.4]$
\end_inset

 (medium), and 
\begin_inset Formula $[0.5,0.9]$
\end_inset

(heavy).
\end_layout

\begin_layout Itemize
bimodal over 
\begin_inset Formula $[0.001,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,0.9]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
[OPTIONAL]
\series default
 exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is calculated based on 
\begin_inset Formula $u_{i}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\hat{U}\in[1,8]$
\end_inset

.
 
\begin_inset Formula $\hat{U}$
\end_inset

 changes in steps of 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Itemize
Tasks are added to each task set until 
\begin_inset Formula $\hat{U}$
\end_inset

 is reached, then the last task is removed.
 Each task set contains at least 
\begin_inset Formula $m+1$
\end_inset

 tasks by reducing the execution cost of each task to free up utilization
 and by then adding additional tasks if necessary.
\end_layout

\begin_layout Itemize
Each sampling point has 
\begin_inset Formula $100$
\end_inset

 tasks sets for theoretical experiments.
 For practical experiments, reduce it to 
\begin_inset Formula $10$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Section
Transaction's parameters
\end_layout

\begin_layout Itemize
Total number of resources 
\begin_inset Formula $N_{r}\in\{1,5,10,20,40\}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Minimum transaction length relative to 
\begin_inset Formula $e_{i}$
\end_inset

 is 
\begin_inset Formula $min_{Tx}\in$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
bimodal distribution 
\begin_inset Formula $[0,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,1]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
[OPTIONAL]
\series default
 exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Maximum transaction length relative to 
\begin_inset Formula $e_{i}$
\end_inset

 is 
\begin_inset Formula $max_{Tx}\in$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
bimodal distribution 
\begin_inset Formula $[0,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,1]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
[OPTIONAL]
\series default
 exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Total transaction length relative to 
\begin_inset Formula $e_{i}$
\end_inset

 is 
\begin_inset Formula $Total_{Tx}\in$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions 
\begin_inset Formula $[0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
bimodal distribution 
\begin_inset Formula $[0,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,1]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
[OPTIONAL]
\series default
 exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
Number of resources per each transaction
\end_layout

\begin_deeper
\begin_layout Itemize
uniform distributions 
\begin_inset Formula $(0,0.3)$
\end_inset

 (light), 
\begin_inset Formula $[0.3,0.6)$
\end_inset

 (medium), 
\begin_inset Formula $[0.6,1]$
\end_inset

 (heavy).
\end_layout

\begin_layout Itemize
bimodal distribution 
\begin_inset Formula $(0,0.5)$
\end_inset

 or 
\begin_inset Formula $[0.5,1]$
\end_inset

 with probabilities of 
\begin_inset Formula $8/9$
\end_inset

 and 
\begin_inset Formula $1/9$
\end_inset

, 
\begin_inset Formula $6/9$
\end_inset

 and 
\begin_inset Formula $3/9$
\end_inset

, and 
\begin_inset Formula $4/9$
\end_inset

 and 
\begin_inset Formula $5/9$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
[OPTIONAL]
\series default
 exponential with a mean of 
\begin_inset Formula $0.10$
\end_inset

 (light), 
\begin_inset Formula $0.25$
\end_inset

 (medium), and 
\begin_inset Formula $0.50$
\end_inset

 (heavy).
 Discarding any points that fell outside the allowed range of 
\begin_inset Formula $[0,1]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Section
Use the following transaction's parameters if the previous ones do not work.
 The following parameters is collected from real-time locking protocols
 parameters
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,q}$
\end_inset

 is uniformly chosen from 
\begin_inset Formula ${1,2,3,4,5}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i,q}$
\end_inset

 is drawn uniformly from the following distributions: short 
\begin_inset Formula $[1μs,15μs]$
\end_inset

, intermediate 
\begin_inset Formula $[1μs,100μs]$
\end_inset

, and long 
\begin_inset Formula $[5μs,1280μs]$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $pacc\in{0.1,0.25,0.4,0.55,0.7,0.85}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $n_{r}\in{1,3,5,6,12,24}$
\end_inset

.
 Or 
\begin_inset Formula $n_{r}\in\{\frac{m}{4},\frac{m}{2},m,2m\}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $wratio\in{0.1,0.2,0.3,0.5,0.75}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsubsection
TALK ABOUT CHRONOS AND MODIFICATIONS BY R-STM, AND THE MODIFICATIONS TO
 R-STM ITSELF (UNTIL NOW ALL EXPERIEMNTS ARE WRITE OPERATIONS).
\end_layout

\begin_layout Standard
We used ChronOS real-time operating system 
\begin_inset CommandInset citation
LatexCommand cite
key "dellinger2011chronos"

\end_inset

 and Rochester STM implementation 
\begin_inset CommandInset citation
LatexCommand cite
key "marathe2006lowering"

\end_inset

, known as RSTM .
 We modified the RSTM to include the new contention managers ECM, RCM, LCM-EDF
 and LCM-RMA.
 For retry-loop lock-free implementation, we use a loop that reads the value
 of a varible, then tries to write a specified value in that variable using
 a CAS API provided by Rochester University; if the CAS does not succeed,
 task loops until it can modify the variable.
 We refer to this retry-loop lock-free operation as CAS-loop operation.
\end_layout

\begin_layout Subsubsection
DESCRIPTION OF USED SERVERS.
\end_layout

\begin_layout Standard
We use 8 core, 2GHz AMD Opeteron processor server.
 The average time taken by one 
\begin_inset Quotes eld
\end_inset

write
\begin_inset Quotes erd
\end_inset

 operation by RSTM implementation on any core is 0.0129653375 
\series bold

\begin_inset Formula $\mu s$
\end_inset


\series default
, and the average time taken by one 
\begin_inset Quotes eld
\end_inset

CAS-loop
\begin_inset Quotes erd
\end_inset

 operation on any core is 0.0292546250 
\begin_inset Formula $\mu s$
\end_inset

.
\end_layout

\begin_layout Subsubsection
DESCRIPTION OF TASK SETS.
\end_layout

\begin_layout Standard
Three periodic task sets are used with time properties shown in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

.
 Each task runs in its own thread and is modified to include a random number
 of atomic sections by specifying three parameters:- the maximum and minimum
 lengths of any atomic section within the task, and the total length of
 atomic sections within any task.
 Each parameter of the previous three ones takes a value of 0.2, 0.5 and 0.8
 of the total length of the task, but of course, the minimum length cannot
 exceed the maximum length, and both of them cannot exceed the total lenght
 of atomic sections per task.
 IN THE CURRENT SET OF EXPERIEMNTS, ALL TASKS MUST HAVE ATOMIC SECTIONS,
 AND ALL ATOMIC SECTION ACCESS THE SAME OBJECT.
 In the current set of experiments, all atomic sections try to make 
\begin_inset Quotes eld
\end_inset

write
\begin_inset Quotes erd
\end_inset

 operations, so contention is at its highest level.
 To compare STM against retry-loop lock-free method, the same length of
 each atomic section within any task is implemented with the CAS-loop operation.
 Due to the longer time taken by one CAS-loop, the number of CAS-loops within
 the same length of atomic sections is smaller than the number of 
\begin_inset Quotes eld
\end_inset

STM write
\begin_inset Quotes erd
\end_inset

 operations within the same length of atomic section, but using the same
 length of each atomic section in comparing STM against retry-loop lock-free
 allowes us to compare the effect of contention resolution between both
 methods, ignoring the overhead of their implementations.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-set-1"

\end_inset

Task sets (a) 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(a)"

\end_inset

Task set 1 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(b)"

\end_inset

(b) Task set 2 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(c)"

\end_inset

(c)Task set 3
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(a)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
150000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
227000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
410000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
299000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(b)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
75241
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
750000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69762
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1200000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
267122
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69863
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
152014
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
286301
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
493150
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{8}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
794520
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{9}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1212328
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{10}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1775342
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(c)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
58195
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
750000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
53963
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
206330
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1200000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
53968
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
117449
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
221143
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
290428
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{8}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83420
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{9}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
380917
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{10}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
613700
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{11}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
936422
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{12}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1371302
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Results
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RC_results"

\end_inset

 represents retry cost (RC) for each task in the three task sets given in
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

 where each task has one atomic section of length equal to half of its correspon
ding task length.
 It can be seen that LCM-EDF and LCM-RMA acheive better or comparative retry
 cost to ECM and RCM.
 As all tasks are initially released at the same time, and due to time propereti
es of tasks as shown in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

, this makes tasks with lower ID somehow have higher priority when using
 G-EDF scheduler, meanwhile, these tasks with lower ID are definitly of
 higher priority when using G-RMA scheduling as tasks are ordered in non-decreas
ing periods.
 Thus, it is seen that LCM-EDF and LCM-RMA acheive comparative retry cost
 to ECM and RCM for some tasks with lower ID, but as task ID increases,
 LCM - for both schedulers- acheive much better results than ECM and RCM.
 This is because higher priority tasks in LCM suffers blocking by lower
 priority tasks, which is not the case for ECM and RCM, but as task priority
 decreases, LCM, by definition, pervents higher priority tasks from aborting
 lower priority ones if the higher priority task interfers with a lower
 priority one after a specified threshold, but for ECM and RCM, lower priority
 tasks must abort in favor of higher priority ones.
 LCM-EDF and LCM-RMA also acheive comparative or better results than retry-loop
 lock-free algorithm.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_5t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set1"

\end_inset

Task set 1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_10t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set2"

\end_inset

Task set 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_12t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set3"

\end_inset

Task set 3 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RC_results"

\end_inset

Retry Cost by nano_sec for each task in a)Task set 1 b)Task set 2 c)Task
 set 3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results-1"

\end_inset

 shows response time of each task in the three task sets given in Table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

 where each task has one atomic section of length equals to half of its
 corresponding task.
 It appears from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results-1"

\end_inset

 that LCM-EDF and LCM-RMA acheive better response time than retry-loop lock-free
 algorithm, and comparative or better response time than ECM and RCM.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_5t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set1-1"

\end_inset

Task set 1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_10t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set2-1"

\end_inset

Task set 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename G:/e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_12t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set3-1"

\end_inset

Task set 3 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:res_results-1"

\end_inset

Response time by nano_sec for each task in a)Task set 1 b)Task set 2 c)Task
 set 3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Notes on results
\end_layout

\begin_layout Enumerate
Current implementation of PNF uses lock-free operations (__sync_val_comp_and_swa
p).
 Previous implementations used locks or compinations of locks and lock-free
 operations (cas and casX as defined in RSTM_R5 atomic support header file).
 Current implementation may be faster than previous ones but it stucks with
 some datasets like 12541.
 This stuck is due to centralized nature of PNF.
 All transactions are competing to get served by PNF.
\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
A new real time contention manager (LCM), based on the length of the interfered
 and interfering atomic sections, has been presented.
 The main purpose of this contention manager is to reduce the worst case
 effect of abort and retry in ECM and RCM in that a task incurs 
\begin_inset Formula $2s_{max}$
\end_inset

 retry cost for each of its atomic section due to a confilct with another
 task's atomic section, but with LCM, a task incures 
\begin_inset Formula $(1+\alpha_{max})s_{max}$
\end_inset

 retry cost for each abort and retry to each one of its atomic sections.
 In ECM and RCM, there is no blocking to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 due to a lower priority one 
\begin_inset Formula $T_{i}$
\end_inset

 as an atomic section, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, in the higher priority task can abort an atomic section, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, in the lower priority task once 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 arrives, even if 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is at the end of its execution.
 But in LCM, 
\begin_inset Formula $T_{j}$
\end_inset

 can be blocked by 
\begin_inset Formula $T_{i}$
\end_inset

 if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 arrives after 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k}(\theta))$
\end_inset

.
\end_layout

\begin_layout Standard
By comparing G-EDF/LCM with ECM, it was found that schedulability performance
 of G-EDF/LCM is better or equal to that of ECM because of the enhancement
 of retry cost and lower blocking time cost, as blocking is encountered
 only from the last instance of the a task 
\begin_inset Formula $T_{j}$
\end_inset

 during the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

 (this last instance of 
\begin_inset Formula $T_{j}$
\end_inset

 did not have any effect on 
\begin_inset Formula $T_{i}$
\end_inset

 in ECM because it is of lower priority).
 But this should not be the case when G-RMA/LCM is compared against RCM
 because each higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 can be blocked by all lower priority tasks, thus effect of blocking is
 very hihg for higher priority tasks, and is reduced as we move to lower
 priority ones, but interference effect will be large for lower priority
 tasks in comparison to higher priority ones.
 So, for schedulability of G-RMA/LCM to be better or equal to that of RCM,
 inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) should be applied.
\end_layout

\begin_layout Standard
By comparing LCM, with both G-EDF and G-RMA schedulers, it was found that
 by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

, the minimum upper bound on length of 
\begin_inset Formula $s_{max}$
\end_inset

 could be more than half length of 
\begin_inset Formula $r_{max}$
\end_inset

, which is higher than that acheived in ECM and RCM, but the maximum length
 of 
\begin_inset Formula $s_{max}$
\end_inset

 cannot exceed that of 
\begin_inset Formula $r_{max}$
\end_inset

 except in some special cases for G-RMA/LCM where length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
Finally, LCM (with G-EDF and G-RMA) is asymptotically comared against locking
 protocols.
 FMLP and OMLP locking protocols are chosen for their superiority in schedulabil
ity and optimality.
 But comparison revealed that both 
\begin_inset Formula $\frac{s_{max}}{|s\_\theta|}$
\end_inset

 for G-EDF/LCM, and 
\begin_inset Formula $\frac{s_{max}}{L_{max}}$
\end_inset

 for both G-EDF/LCM and G-RMA/LCM, are the same as that for ECM and RCM.
\end_layout

\begin_layout Standard
Our work is analytical in nature because it was desired to prove that STM
 can acheive higher schedulability against locking and lock free based on
 a new design of contention manager that tries to avoid one of the shortcomings
 of the previous ECM and RCM contention managers.
 That is why LCM is analytically compared to locking and lock free algorithms,
 in addition to analytical comparison to ECM and RCM.
 However, significant insights can be gained by experimental work on a broad
 range of embedded software, which is outside the scope of this work.
 For example, what are the typical range of values for the different parameters
 that affect the retry and blocking cost (and hence response time)? How
 tight is our dervied upper bounds in practice? Should the function used
 to represent different lengths of atomic sections be changed to give better
 results? What is the most practical suitable value for 
\begin_inset Formula $\psi$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

? Is it enough to designe a contention manager based on length of atomic
 sections, or other parameters should be included? And if yes, how is the
 best way to integrate these different parameters together? These are important
 directions for future work.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
DDA
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Ramadan:2009:CCT:1594835.1504201"

\end_inset

 considers data dependency awarness for transactional systems.
 It presents a formal model for dependence-aware transactions then proves
 its safety and its ability to accept any conflict-seriablizable interleavings,
 thus increasing concurrency than current transactional memory safety mechanisms.
\end_layout

\begin_layout Standard
In conventional STM systems, if two transactions access the same datum and
 at least one of the accesses is a write, then one transaction must either
 block or restart.
 But in DDA systems, active (in-progress) transactions are coordinated by
 two mechanisms: ordering and forwarding speculative data.
\end_layout

\begin_layout Standard
If transaction A reads a datum and then transaction B writes it (R→W), both
 transactions can continue so long as transaction A commits or aborts first.
 An implementation needs a mechanism to delay B’s commit.
 W→W dependences require the same mechanism.
 If transaction A writes a datum and then transaction B reads it (W→R),
 the system can forward the speculative data from A to B and make sure that
 A commits first.
 An implementation needs a mechanism to detect if A overwrites the data
 or restarts, in which case the runtime system restarts B.
 
\end_layout

\begin_layout Standard
Multiple dependences may arise if transactions conflict on more than one
 object.
 Dependences can form cycles in the dependence graph and these cycles must
 be broken by restarting at least one transaction to avoid deadlocks.
 Cycles means that transactions executed in a non conflict-serializable
 way.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Zhang:2010:BAE:1835698.1835715,zhangenhancing"

\end_inset

 considers applying DDA to distributed transactions.
 The example in Section 2.3 in 
\begin_inset CommandInset citation
LatexCommand cite
key "zhangenhancing"

\end_inset

 illustrates how distributed DDA works and the difference between DDA and
 GCCM model.
\end_layout

\begin_layout Standard
Each shared objects in the DDA model maintains a totally ordered sequence
 of versions in an object version list.
 At any given time, the versions of an object is numbered in increasing
 order.
 The numbering of the object version may change since the versions are inserted
 into or removed from the object list.
 The object version 
\begin_inset Formula $o.\nu_{n}$
\end_inset

 includes the data 
\begin_inset Formula $o.\nu_{n}.data$
\end_inset

, the writer transaction 
\begin_inset Formula $o.\nu_{n}.writer$
\end_inset

, the writer status 
\begin_inset Formula $o.\nu_{n}.writerstatus\in{committed,pending}$
\end_inset

, and a set of readers 
\begin_inset Formula $o.\nu_{n}.readers$
\end_inset

.
 A read operation of object 
\begin_inset Formula $o$
\end_inset

 returns the value of one of 
\begin_inset Formula $o$
\end_inset

’s version.
 A write operation of object 
\begin_inset Formula $o$
\end_inset

 adds a new version to 
\begin_inset Formula $o$
\end_inset

’s version list and sets its corresponding writer status to 
\begin_inset Formula $pending$
\end_inset

 which implies that the version 
\begin_inset Formula $o.\nu_{n}$
\end_inset

 is written by a live transaction.
 If this transaction aborts, the corresponding version is removed from the
 object list, but If transaction commits, the corresponding writer status
 is set to 
\begin_inset Formula $committed$
\end_inset

.
 Each transaction keeps a 
\begin_inset Formula $readList$
\end_inset

 and 
\begin_inset Formula $writeList$
\end_inset

.
 An entry in a 
\begin_inset Formula $readList$
\end_inset

 points to the version that has been read by the transaction.
 An entry in a writeList points to the version written by the transaction.
 Generally, the following principles are applied for read/write operations
 in the DDA model:
\end_layout

\begin_layout Enumerate
A read operation to object 
\begin_inset Formula $o$
\end_inset

 returns the value 
\begin_inset Formula $o.v_{m}$
\end_inset

 , where 
\begin_inset Formula $o.v_{m'}.writestatus=pending$
\end_inset

 for all 
\begin_inset Formula $m'>m$
\end_inset

.
\end_layout

\begin_layout Enumerate
A write operation to object 
\begin_inset Formula $o$
\end_inset

 adds the version 
\begin_inset Formula $o.v_{n+1}$
\end_inset

 to object 
\begin_inset Formula $o$
\end_inset

 if its latest version is 
\begin_inset Formula $o.v_{n}$
\end_inset

 .
 
\end_layout

\begin_layout Standard
Compared with the GCCM model, the DDA model allows the TM system to manage
 multiple versions of the object, while at the same time, keeping only one
 writable copy of each shared object.
 In the DDA model, the only possibility that a transaction is suspended
 occurs in the commit step, where the transaction may wait from other transactio
ns’ commit/abort responses due to established dependencies.
 
\end_layout

\begin_layout Standard
A transaction is aborted when the correctness criterion (which is the progressiv
e-opacity criterion) is violated.
 The progressive-opacity criterion is maintained by an acyclic precedence
 graph that follows an ideal edge update policy illustrated in Section 3.1.
\end_layout

\begin_layout Section
Problem Description
\end_layout

\begin_layout Standard
Form a real-time analysis perspective, what is the longest time any transaction
 can take to commit, noting that from a real-time point of view, each transactio
n should commit before the deadline, so each aborted transaction should
 retry, but the behavior of DDA and the progressive-opacity criterion does
 not tell the worst case response time of any transaction.
 Till now, it only tells the correctness of DDA and at least one of the
 transactions is going to commit, so it tries to ensure progress of transactions.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Title

\series bold
\size larger
\bar under
This part is collected from locking and lock free papers
\end_layout

\begin_layout Section

\series bold
\bar under
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\begin_layout Standard
According to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, the lower bound on maximum blocking time (which they call pi-blocking)
 for any task due to s-oblivious locking protocols, for any gloabl or partitione
d JLSP (Job Level Static Priority) scheduler (i.
 e., G-EDF and P-EDF), is 
\begin_inset Formula $\Omega(m)$
\end_inset

 where 
\begin_inset Formula $m$
\end_inset

 is the number of processors.
 And the lower bound on the total blocking time for the whole task set is
 
\begin_inset Formula $\Omega(n.m)$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of tasks.
\end_layout

\begin_layout Standard
According to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3,key-4,key-5"

\end_inset

, the FMLP protocol (which is used with P-EDF and G-EDF) uses both spin-based
 for short resources and suspension-based for long resources.
 A tighter bound is obtained for spin based protocols where jobs busy-wait
 non-preemptively in FIFO order, and they must wait for at most 
\begin_inset Formula $m-1$
\end_inset

 earlier requests, whereas for long resources, susbension protocol is used
 and jobs can incur 
\begin_inset Formula $\Theta(n)$
\end_inset

 s-oblivious pi-blocking.
 At the time of writing this paper, FMLP was the only prior locking protocol
 that supports G-EDF.
\end_layout

\begin_layout Standard
The global OMLP protocol is developed, which is suspension-based.
 Jobs incur at most 
\begin_inset Formula $O(m)$
\end_inset

 s-oblivious pi-blocking.
 This bound is calculated in lemma 4
\begin_inset Formula 
\begin{equation}
b_{i}\triangleq\sum_{k=1}^{q}N_{i,k}.2.(m-1).max_{1\le i\le n}\{L_{i,k}\}\label{eq29}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,k}$
\end_inset

 is the number of requests of resource 
\begin_inset Formula $k$
\end_inset

 by 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $k$
\end_inset

 is a resource identifier.
\end_layout

\begin_layout Itemize
\begin_inset Formula $q$
\end_inset

 is the number of resources.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i,k}$
\end_inset

 is the maximum request length of resource 
\begin_inset Formula $k$
\end_inset

 by task 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $N_{i,k}$
\end_inset

 and 
\begin_inset Formula $L_{i,k}$
\end_inset

 are assumed to be constants, so the s-oblivious pi-blocking is 
\begin_inset Formula $O(m)$
\end_inset

 and according to theorm 1, it is optimal.
 Theorm 4 checks schedulability of a set of tasks scheduled with G-EDF and
 OMLP using previous G-EDF tests that treat tasks as independent ones, so
 the 
\begin_inset Formula $p_{i}$
\end_inset

 cost calculated by lemma 4 for each task is added to its execution time
 
\begin_inset Formula $c_{i}$
\end_inset

 (because of the s-oblivious nature) and then used in the schedulability
 test.
 
\begin_inset Formula $p_{i}$
\end_inset

caculated by lemma 4 does not depend on the G-EDF, so it can be used for
 any JLSP scheduler.
\end_layout

\begin_layout Standard
For the case of partitioned scheduling, partitioned OMLP is used with P-EDF
 and the s-oblivious 
\begin_inset Formula $p_{i}$
\end_inset

 for each task is calculated by lemma 9 and it is independent on the EDF
 scheduler.
 Also, it was proved by theorem 3 that the s-oblivious 
\begin_inset Formula $p_{i}$
\end_inset

 under partitioned OMLP is optimal.
\end_layout

\begin_layout Standard
s-aware OMLP cannot acheive the 
\begin_inset Formula $O(m)$
\end_inset

 as 
\begin_inset Formula $p_{i}$
\end_inset

 cost, and it has a lower bound of 
\begin_inset Formula $\Omega(n)$
\end_inset

.
 Actually, for any locking protocol and JLSP scheduler, the s-aware analysis
 has a max 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(n)$
\end_inset

 and a total 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(n^{2})$
\end_inset

.
 Accordingly, s-aware pi-blocking under the global suspension based FMLP
 for any JLSP is asymptotically optimal, as proved in theorem 5, whereas
 in partitioned case, a simple partitioned FIFO protocol (SPFP) can be proved
 to be asymptotically optimal (by theorem 6) despite impractical.
 It should be noted that the use of FIFO queue helps in acheiving this asymptoti
c optimality as it was proved that ordering requests with EDF or static
 priority under any JLSP scheduler will have a maximum 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(mn)$
\end_inset

 and a total one of 
\begin_inset Formula $\Omega(m(n-m)^{2})+m^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
The final results for different protocols optimality is shown in table 1.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset

 extends work in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 to Job Level Static Priority (JLSP) clusered-based scheduled multiprocessor
 system.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset

 provides concept of 
\shape italic
priority donation
\shape default
 to ensure that each job is preempted at most once.
 In priority donation, a resource holder priority can be unconditionally
 increased.
 Thus, a resource holder can preempte another task.
 The preempted task is predetermined such that each job is preempted at
 most once.
\end_layout

\begin_layout Enumerate
OMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 with priority donation is integrated with mutex as follows: Each resource
 has a FIFO queue.
 A new request is enqueued in the FIFO queue.
 The head of the FIFO queue is the resource holder.
 Other jobs in the FIFO suspend until their turn comes.
 OMLP with priority donation is also integrated with k-exclusion locks (K-OMLP).
 Under K-exclusion locks, there are k insances of the same resouce than
 can be allocated concurrently.
 K-OMLP has the same structure of OMLP with mutex except that there are
 K FIFO queues.
 Each FIFO queue corresponds to one of the k resources.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset

 proves aympetotic optimallity of OMLP wit mutex to 
\begin_inset Formula $O(m)$
\end_inset

, and K-OMLP to 
\begin_inset Formula $O(m/k)$
\end_inset

 under s-oblivious pi-blocking analysis.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

 extends the K-OMLP in 
\bar under

\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset


\bar default
.
 The extended protocol, named 
\shape italic
Optimal K-Exclusion Global Locking Protocol (O-KGLP)
\shape default
 enables running K concurrent GPUs on a job-level static priority global
 scheduled (JLSP) multiprocessor system.
 K-OMLP 
\bar under

\begin_inset CommandInset citation
LatexCommand cite
key "6064513"

\end_inset


\bar default
 is used for clusterd scheduled multiprocoessor systems.
 While global scheduled system is a special case of cluseted scheduled systems,
 K-OMLP provides additional cost to tasks requesting no GPUs if K-OMLP is
 used with global scheduled systems.
 O-KGLP avoids this problem.
\end_layout

\begin_layout Enumerate
For 
\begin_inset Formula $m$
\end_inset

 processors and 
\begin_inset Formula $k$
\end_inset

 GPUs, O-KGLP has 
\begin_inset Formula $k$
\end_inset

 FIFO queues and 
\begin_inset Formula $1$
\end_inset

 priority queue.
 Each GPU has one of the 
\begin_inset Formula $K$
\end_inset

 FIFO queues.
 A new request is enqueud in the shortest FIFO queue if number of jobs less
 than 
\begin_inset Formula $m$
\end_inset

.
 Otherwise, request is added to priority queue according to job's priority.
 Only request at the heads of FIFO queues run.
 Resource holders inherit priorities of jobs in FIFO queues and priority
 queue.
 When a request finishs, the next request in FIFO queue runs and the highest
 priority request in the priority queue is moved to one of the FIFO queues.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

 upper bounds blocking time under O-KGLP.
 
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

 proves that 
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

 is asymptotically optimal with 
\begin_inset Formula $O(m/k)$
\end_inset

 priority inversion blocking.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset


\end_layout

\begin_layout Standard
The motivation to the design of FMLP is the shortcomings of the previously
 multiprocessor locking protocols such as:-
\end_layout

\begin_layout Enumerate
Almost all previous schemes use parititioning schedulers, whereas FMLP support
 both paritioning and global scheduling.
\end_layout

\begin_layout Enumerate
Most previous schemes impose restrictive assumptions such as the proscription
 of nested access to global critical sections.
\end_layout

\begin_layout Enumerate
Most of them are inefficient when implementing non-nested locks, which is
 the common case.
\end_layout

\begin_layout Standard
The FMLP is optimized to execute non-nested resource access more efficiently;
 it is applied to G-EDF, P-EDF and PD2, besides, it supports nested resource
 access without constraining limitations.
\end_layout

\begin_layout Standard
Global FMLP uses a variant of G-EDF, named G-EDF algorithm for suspendable
 and non-preemptable jobs (GSN-EDF), which discriminates between linke job
 and scheduled one (the former means the job is assigned to a processor
 by G-EDF but it does not have to be scheduled on it right now because of
 non-preemptive blocking).
 GSN-EDF permits for non-preemptable jobs and bounds the time a job is non-preem
ptively blocked by a lower priority job to the maximum time of a non-preemptive
 section of a job that can be linked to the processor of the higher priority
 job, and this non-preemptive blocking can only happen when the higher priority
 job is released or resumed as proved by theorems 1, 2.
\end_layout

\begin_layout Standard
There are three types of blocking that can be incured by any task in global
 FMLP.
 These are busy-wait blocking, non-preemptive blocking and direct blocking.
 The final blocking term for a job is the sum of these three terms.
 Execution time of each task is inflated by this blocking amount (
\begin_inset Formula $e_{i}+b_{i}$
\end_inset

), then any G-EDF schedulability test can be used.
 It is not mentioned in the paper how to dereive values or upper bounds
 for the blocking terms, so we try to derive them here as follows:-
\end_layout

\begin_layout Enumerate
For the 
\begin_inset Formula $BW(T_{i})$
\end_inset

, a job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 busy-waits when it is scheduled on a processor and it cannot be removed
 by any other task, even higher priority ones, until its request is satisfied,
 and as busy-waiting tasks are organized in a FIFO and they are non-preemptable,
 then 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked by at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests, where each request can consist of sum of nested requests to some
 resources in the same group.
 This process proceeds for each short resource requested by 
\begin_inset Formula $T_{i}$
\end_inset


\begin_inset Formula 
\begin{equation}
BW(T_{i})\le\sum_{s\_\theta\in\theta_{i}}(max[\sum_{k=1,k\ne i}^{min(m,n)-1}|R_{k}(g(s\_\theta))|])\label{eq26}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $s\_\theta$
\end_inset

 is a short request for object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $g(s\_\theta)$
\end_inset

 is the group containing short resource 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $R_{k}(g(s\_\theta))$
\end_inset

 is a request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(s\_\theta)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $|R_{k}(g(s\_\theta))|$
\end_inset

 is the size of the request and it equals the sum of all nested accesses
 to resources in 
\begin_inset Formula $g(s\_\theta)$
\end_inset

 made by 
\begin_inset Formula $T_{k}$
\end_inset

.
\end_layout

\begin_layout Itemize
Of course, the max sum of the highest 
\begin_inset Formula $min(m,n)-1$
\end_inset

 requests equals the sum of the highest 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $min(m,n)-1$
\end_inset

 requests.
\end_layout

\begin_layout Enumerate
For the 
\begin_inset Formula $NPB(T_{i})$
\end_inset

, Job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be non-preemptively blocked, either at its release or when it resumes,
 by at most the maximum (nested) request to any short resource.
 So,
\begin_inset Formula 
\begin{equation}
NPB(T_{i})=(1+N_{i,l}).max_{k\ne i}|R_{k}(g(s\_\theta))|\label{eq27}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,l}$
\end_inset

 is the number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests long resources.
\end_layout

\begin_deeper
\begin_layout Standard
1 is added to 
\begin_inset Formula $N_{i,l}$
\end_inset

 because 
\begin_inset Formula $T_{i}$
\end_inset

 can be non-preemptively blocked at its release in addition to suspension
 times.
\end_layout

\end_deeper
\begin_layout Enumerate
For the 
\begin_inset Formula $DB(T_{i})$
\end_inset

, 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked by all other 
\begin_inset Formula $n-1$
\end_inset

 tasks for any long resource.
 Any of these 
\begin_inset Formula $n-1$
\end_inset

 requests can be a nested request to long resources belonging to the same
 group, besides any of these requests can contain a request to a short resource
 and it can busy-wait on it.
 So, each request in the 
\begin_inset Formula $n-1$
\end_inset

 requests, requiring access to a short resource, can be delayed by at most
 the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests to the group containing that short resource.
 So, 
\begin_inset Formula 
\begin{equation}
DB(T_{i})\le\sum_{l\_\theta\in\theta_{i}}[max_{k=1,k\ne i}^{n-1}|R_{k}(g(l\_\theta))|]\label{eq28}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $|R_{k}(g(l\_\theta))|$
\end_inset

 is the sum of nested requests by 
\begin_inset Formula $T_{k}$
\end_inset

 to the group containing 
\begin_inset Formula $l\_\theta$
\end_inset

, plus 
\begin_inset Formula $max_{s\_\theta\in\theta_{k}}[\sum_{h=1,h\ne k}^{min(m,n)-1}|R_{h}(g(s\_\theta))|]$
\end_inset

, if 
\begin_inset Formula $s\_\theta$
\end_inset

 can be called inside 
\begin_inset Formula $l\_\theta$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, an upper bound was developed for 
\begin_inset Formula $DB(T_{i})$
\end_inset

 but without considering the effect of requesting a short resource within
 a long one, besides it did not develope bounds for the other two terms
 as its main concentration was on the suspension-based part of FMLP.
\end_layout

\end_deeper
\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "bc+08"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
PUT THIS PAPER AT THE END OF RELATED WORK AS A COMPARISON BETWEEN LOCKING
 AND LOCK-FREE AND WAIT-FREE
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "bc+08"

\end_inset

 compares schedulability and tardiness between different real-time synchronizati
on techniques on multiprocessor system.
\end_layout

\begin_layout Enumerate
Lock­free and wait­free executions are non­blocking synchronization.
 Object accesses may occur concurrently, with different progress guarantees
 when accesses “interfere” with one another.
 In contrast to locking, where concurrency is eliminated by sometimes requiring
 tasks to block.
 Task blocking is done either by spinning (busy­waiting) or by being suspended.
 In lock­free object implementation, progress is ensured only in a system­wide
 manner as some attempt will succeed, but an individual job may fail repeatedly.
 When lock­free objects are used in real­time systems, bounds on retries
 are required when checking schedulability.
 In a wait­free implementation, progress is ensured for individual jobs,
 as each object access by any job completes after a bounded number of instructio
n executions by that job (regardless of the behavior of other jobs).
 For locking, jobs issue requests for exclusive access to resources.
 If a request is not satisfied immediately, then the issuing job is said
 to be blocked.
 Once satisfied, the issuing job holds the resource until it completes its
 associated critical section and releases the resource.
 A request R is contained (or nested) within another request R' if the requestin
g job already holds R' when it requests R.
 A request is outermost if it is contained within no other request.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "bc+08"

\end_inset

 shows that non­blocking implementations are generally better than spin­based
 ones for simple objects, while spin­based implementations are roughly as
 good as non­blocking methods for complex objects.
 Lock­free and wait­free algorithms are equally preferable for simple objects,
 but when implementing complex objects shared by tasks of low to moderate
 utilization, wait­free algorithms are better.
 This difference is due to excessive retries in the lock­free case.
 Spinning is shown to be better than suspension, but it wastes processor
 time leaving lower capacity for background jobs.
 An attempt was made to determine when suspension would be better than spinning,
 and it was shown that as number of resources decrease­ so contention increases­
 and as relative critical section length increases, suspension becomes better
 than spinning.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "cui2011comparison,pyla2011composing,bjÃ¶rkman1993locking,seung1994spin"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
PAPER IS USELESS FOR REAL-TIME LOCKING PROTOCOLS.
 IT MAY BE USEFULL IN INTRODUCTION FOR LOCKING IN GENERAL.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "615438"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
THE PAPER MAY BE USEFULL IN CONTEXT OF IMPLEMENTATIO OF LOCKS.
 IT IS NOT ABOUT REAL-TIME LOCKING PROTOCOLS THEMSELVES.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
MENTION THIS PAPER BEFOR FMLP PAPERS BECAUSE IT IS THEIR PREDECESSOR.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset

 proposes synchronization protocols for short and long critical sections
 under Pfair scheduling.
 In Pfair scheduling, each task receives a weight that corresponds to its
 share in system resources.
 Tasks are scheduled in quanta, where each quantum has a specific job on
 a specific processor.
 Lock-free was used with Pfair 
\begin_inset CommandInset citation
LatexCommand cite
key "1019191"

\end_inset

, but lock-free is suitable for simple objects and locks are needed to synchroni
ze access to external devices.
\end_layout

\begin_layout Enumerate
Each lock has a FIFO queue.
 Requesting tasks are ordere in this FIFO queueu.
 If a task is preempted during critical section, then other tasks can be
 blocked for additional time known as 
\shape italic
frozen time
\shape default
.
 Critical sections requesting short resources execute at most in two quanta.
 By early lock-request, critical section can finish in one quanta, avoiding
 the additional blocking time.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset

 proposes two protocols to deal with short resources: 1)
\shape italic
 Skip Protocol (SP) 
\shape default
leaves any lock request in the FIFO queue during forzen interval until requestin
g task is scheduled again.
 2) 
\shape italic
Rollback Protocol (RP)
\shape default
 discards any request in the FIFO queue for the lock during frozen time.
 For long resources, 
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset

 uses 
\shape italic
Static Weight Server Protocol (SWSP)
\shape default
 where requests for each resource 
\begin_inset Formula $l$
\end_inset

 is issued to a corresponding server 
\begin_inset Formula $S$
\end_inset

.
 
\begin_inset Formula $S$
\end_inset

 orders requests in a FIFO queue and has a static specific weight.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset

 upper bounds response time of each task portion during each quanta.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1181570"

\end_inset

 also experimentally evaluates the previous protocols.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset

 introduces Parallel-PCP (P-PCP), a resource sharing protocol for fixed-priority
 preemptive scheduling multiporcessor system.
 P-PCP, in contrast to PCP, allows lower priority jobs to allocate resources
 when higher priority jobs already access resources.
 Thus, increasing parallelism.
\end_layout

\begin_layout Enumerate
When PIP is applied to uniprocessor systems, a higher priority task can
 be blocked by a lower priority task only once.
 But for multiprocessor system, a higher priority job can be blocked multiple
 times by a lower priority job.
 P-PCP has the same problem.
 With reasonable priority assignment, blocking time by lower priority jobs
 is small.
\end_layout

\begin_layout Enumerate
P-PCP uses 
\begin_inset Formula $\alpha_{i}$
\end_inset

 parameter to specify permitted number of jobs with basic priority lower
 than 
\begin_inset Formula $i$
\end_inset

 and effective priority higher than 
\begin_inset Formula $i$
\end_inset

.
 When 
\begin_inset Formula $\alpha_{i}$
\end_inset

 is small, parallelism is reduced, so as well blocking from lower priority
 tasks.
 Reverse is true.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset

 provide response time analysis for PIP and P-PCP on fixed priority preemptive
 scheduling for multiprocessor system.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "6001645"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
PUT THIS PAPER AFTER 
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\series bold
 AS IT SOLVES ONE PROBLEM IN IT WHICH IS MULTIPLE BLOCKING OF HIGHER PRIORITY
 JOB BY A LOWER PRIORITY ONE.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "6001645"

\end_inset

 presents Limited-Blocking PCP (LB-PCP), a resource sharing protocol for
 global fixed priority preemptive scheduled multiprocessor system.
\end_layout

\begin_layout Enumerate
Under PIP, a resource holding job inherits priority of the highest blocked
 job on that resource.
 This can indirectly block another higher prirority task that does not request
 the resource.
 In uniprocessor system, a lower priority job blocks a higher priority job
 (direclty on indirectly) only once.
 While in multiprocessor system, a lower priority job can block a higher
 priority job multiple times 
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset

.
 LB-PCP avoids this problem by assigning a counter at each priority level
 
\begin_inset Formula $i$
\end_inset

.
 This conuter specifies the number of times all jobs with priority higher
 than 
\begin_inset Formula $i$
\end_inset

 can be indirectly blocked.
 Thus, controlling indirect blocking from lower priority jobs.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "6001645"

\end_inset

 upper bounds blocking time and response time for LB-PCP.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6001645"

\end_inset

 also experiementally compares LB-PCP to P-PCP showing that LB-PCP is appropriat
e for task sets with medium utilization.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "6031129"

\end_inset


\end_layout

\begin_layout Enumerate
PCP can be unfair from blocking point of view.
 PCP can cause unnecessary and long blocking for tasks that do not need
 any resources.
 Thus, 
\begin_inset CommandInset citation
LatexCommand cite
key "6031129"

\end_inset

 provides Intelligent PCP (IPCP) to increase fairness and to work in dynamically
 configured system (i.e., no apriori information about number of tasks, priorities
 and accessed resources).
\end_layout

\begin_layout Enumerate
IPCP initially optimizes priorities of tasks and resources through learning.
 Then, IPCP tunes priorities according to system wide parameters to acheive
 fairness.
 During the tuning phase, penalities are assigned to tasks according to
 number of higher priority tasks that can be blocked.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The idea of bounding number of retries and preventing starvation is good,
 but as the paper is still work in progress, it may need some modifications
 in the underlying algorithms, or in the conditions used to bound number
 of retrials.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "shavit2011data"

\end_inset

 included in introduction
\end_layout

\begin_layout Standard
It generally descripes how the evolution of multicore systems affect concurrent
 data structures, in design and semantics, but says nothing about relation
 between lock-free or wait-free objects to real-time systems.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
For the lock-free implementation mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, the blocking cost is added to the execution cost for each task in equation
 (11).
 So, the total response time for 
\begin_inset Formula $T_{i}$
\end_inset

 is as calculated by equation (11), in addition to interference from higher
 priority tasks.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "sarni2009real"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The paper descripes the design of real time contention manager based on
 absolute deadline of transactions (not the absolute deadline of job).
 It explores design ideas from real time database systems (as transaction
 memory is inspired from database transactions).
 It goes to a bit into lower level implementation of the design of the real
 time STM (i.
 e., it just does not concern about the CM policy idea, but also how to implement
 it based on previous real implemntations of CMs).
 The paper provides experimental (not analytical) evaluation of the performance
 of their CM against the best available CM (they choose the best available
 one based on experiments as they evaluated peroformance of different STM
 implementations on linux and LITMUS, with different real time schedulers
 in LITMUS).
 This experimental evaluation is based on absolute deadline gurantee ratio
 which measures number of transactions that could successfully commit before
 their deadlines.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm,schoeberl2010design,schoeberl:2009-19"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010design,schoeberl2010rttm"

\end_inset

 describe a method for implementing HTM.
 Their bound for transaction retries assumes that the worst case pattern
 of interference occurs when conflicting atomic sections are released at
 the same time, but this is not the case, as shown in the analysis here.
 This assumption is changed in theorom 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl:2009-19"

\end_inset

 for a set of 
\begin_inset Formula $n$
\end_inset

 threads (resemble jobs in this theorom), with each thread containing only
 one atomic region, which gives a closer number of retries for one atomic
 section to our analysis.
 But their analysis in theorom 2 for 
\begin_inset Formula $n$
\end_inset

 threads (resemble tasks in this theorom) still does not cover the worst
 case retry pattern of atomic sections.
 Experimental evaluation is done to show the performance of the proposed
 RTTM.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "fahmy2009response"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The paper assumes distributed systems, where each node is a uniprocessor
 system.
 Tasks on one processor scheduled by EDF, and atomic sections are local
 to nodes (the part of the atomic section on node A commits first before
 the part on node B starts).
 It should be noted that a higher priority job, 
\begin_inset Formula $T_{j}^{l}$
\end_inset

, causes only one retry in a lower priority one, 
\begin_inset Formula $T_{i}^{k}$
\end_inset

, because of the uniprocessor system (the lower priority job is preempted
 during the whole execution time of the higher priority one), thus the retry
 cost is considered by adding one 
\begin_inset Formula $s$
\end_inset

 for each interference of a higher priority job.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset


\end_layout

\begin_layout Standard
The paper presents RNLP real-time locking protocol for nested resource access.
 FMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

, FMLP+
\begin_inset CommandInset citation
LatexCommand cite
key "brandenburg11"

\end_inset

 and OMLP family protocols
\begin_inset CommandInset citation
LatexCommand cite
key "key-3,springerlink:10.1007/s10617-012-9090-1"

\end_inset

 use 
\begin_inset Quotes eld
\end_inset

group locking
\begin_inset Quotes erd
\end_inset

 to support nesting.
 
\begin_inset Quotes eld
\end_inset

Group Locking
\begin_inset Quotes erd
\end_inset

 combines all resources that can be accessed by any task in the same critical
 section in a single group.
 Each group is protected by a single lock.
 Any task acquiring a resource must hold the group lock first.
 Of course, this reduces parallelism two or more task may not access the
 same resources, yet they execute serially because resources belong to the
 same group.
 
\begin_inset Quotes eld
\end_inset

Group locking
\begin_inset Quotes erd
\end_inset

 requires static assignment of resources to groups before execution.
 
\begin_inset Quotes eld
\end_inset

Group Locking
\begin_inset Quotes erd
\end_inset

 is a coarse-grained locking support for nesting, while the proposed protocol,
 RNLP, supports nesting via fine-grained locking.
 MDPCP
\begin_inset CommandInset citation
LatexCommand cite
key "chen1998multiprocessor"

\end_inset

 supports nesting in a limited way.
\end_layout

\begin_layout Standard

\series bold
RNLP can be used with partitioned, clustered and global scheduling where
 waiting is implemented by spinning or suspension.
 RNLP is used under s-oblivious or s-aware analysis.
 Progress is guaranteed via priority inheritance, priority boosting or priority
 donation.
\end_layout

\begin_layout Standard
RNLP worst case analysis is not worse than FMLP, FMLP+ and OMLP family,
 but RNLP increases parallelism by supporting nesting through fine-grained
 locking.
 So, average case analysis for RNLP is better than other protocols.
\end_layout

\begin_layout Standard
RNLP requires a strict partial order on resources (which can be avoided
 in case of global scheduling).
 Resources should be acquired in their order to prevent deadlocks and improve
 pi-blocking bounds.
 RNLP is composed of two phases: 
\shape italic
Token Lock
\shape default
 and 
\shape italic
Request Satisfaction Mechanism (RSM)
\shape default
.
 These two stages differ according to the scheduler and waiting mechanism.
 
\shape italic
Token Lock
\shape default
 bounds number of jobs with incomplete resource requests to 
\begin_inset Formula $k$
\end_inset

 (which is usually 
\begin_inset Formula $n$
\end_inset

 or 
\begin_inset Formula $m$
\end_inset

), whereas RSM serializes access to shared resources.
 In RSM, each resource 
\begin_inset Formula $\theta_{a}$
\end_inset

 has a queue of 
\begin_inset Formula $k$
\end_inset

 length.
 For a job 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 to access 
\begin_inset Formula $\theta_{a}$
\end_inset

, 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 must first obtain a token.
 
\begin_inset Formula $ts(\tau_{i,x})$
\end_inset

 is the timestamp of obtaining the token.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 is inserted in 
\begin_inset Formula $\theta_{a}$
\end_inset

's queue according according to increasing timestamp order.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 acquires 
\begin_inset Formula $\theta_{a}$
\end_inset

 when 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 is the head of 
\begin_inset Formula $\theta_{a}$
\end_inset

's queue, and no other task 
\begin_inset Formula $\tau_{j,y}$
\end_inset

 accesses a resource 
\begin_inset Formula $\theta_{b}<\theta_{a}$
\end_inset

 and 
\begin_inset Formula $ts(\tau_{j,y})<ts(\tau_{i,x})$
\end_inset

.
 This condition can be relaxed by requiring 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 to access its smallest resource 
\begin_inset Formula $\theta_{a}$
\end_inset

 initially, then 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 can access any other resource in any order.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 can access nested resources using the same rules.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 releases its token when it finishes its outer most request.
\end_layout

\begin_layout Standard
If access resources in any critical section for 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 is known a priori, this relaxes RNLP's rules and improves concurrency.
 Now, 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 can access resources in any order without deadlock.
 This is because requests are spotted in the corresponding resources' queues
 at the beginning of each critical section in increasing timestamp order.
\end_layout

\begin_layout Standard
Design of 
\shape italic
Token Lock
\shape default
 differs according to scheduler and waiting mechanism.
 For global schedulers, RNLP makes use of a k-exclusion locking protocol
 named O-KGLP
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

 to implement the 
\shape italic
Token Lock
\shape default
.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

 suggests an improved k-exclusion locking protocol (I-KGLP) for globally
 scheduled systems that reduces pi-blocking bounds (I-KGLP exists in the
 longer version of 
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

 and introduced as 
\begin_inset Formula $R^{2}DGLP$
\end_inset

 later in 
\begin_inset CommandInset citation
LatexCommand cite
key "6300160"

\end_inset

).
 Under globally scheduled systems when I-KGLP is used with priority inheritance
 RSM (I-RSM), pi-blocking is bounded by 
\begin_inset Formula $(2m-1)L_{max}$
\end_inset

 per outermost request, where 
\begin_inset Formula $L_{max}$
\end_inset

 is the maximum length of any outermost critical section.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "6300160"

\end_inset


\end_layout

\begin_layout Standard
The paper presents 
\shape italic
Replica Request Donation Global Locking Protocol
\shape default
 (
\begin_inset Formula $R^{2}DGLP$
\end_inset

), a 
\begin_inset Formula $k$
\end_inset

-exclusion locking protocol.
 R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP is used to enable access to 
\begin_inset Formula $k$
\end_inset

 replicas of each shared resource in globally scheduled systems.
 R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP can also be used to access replicated local resources in clustered
 scheduled systems.
 R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP was introduced in the long version of 
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

 under the name of I-KGLP.
\end_layout

\begin_layout Standard
R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP uses a progress property named 
\shape italic
Resource Request Priority Donation (RRPD)
\shape default
.
 Under RRPD, a job 
\begin_inset Formula $\tau_{i,x}$
\end_inset

, with priority among the highest 
\begin_inset Formula $m$
\end_inset

 effective priorities, can suspend upon request for a resource 
\begin_inset Formula $\theta_{a}$
\end_inset

 whose replicas are held by other jobs.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 donates its priority to the lowest priority job 
\begin_inset Formula $\tau_{j,y}$
\end_inset

 that has an incomplete request for a replica of 
\begin_inset Formula $\theta_{a}$
\end_inset

.
 If a job 
\begin_inset Formula $\tau_{z,h}$
\end_inset

 displaces 
\begin_inset Formula $\tau_{i,x}$
\end_inset

, where 
\begin_inset Formula $p_{z,h}>p_{i,x}$
\end_inset

, then 
\begin_inset Formula $\tau_{z,h}$
\end_inset

 becomes the new donor of 
\begin_inset Formula $\tau_{j,y}$
\end_inset

.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 ceases to be a priority donor when 
\begin_inset Formula $\tau_{j,y}$
\end_inset

 completes execution, or a new donor arrives.
 In a previous progress property, 
\shape italic
Job Release Priority Donation (JRDP)
\shape default
, jobs can donate priorities upon release, not upon resource request.
 Consequently, jobs might be pi-blocked without need and miss their deadlines
 in global scheduling or within clusters.
\end_layout

\begin_layout Standard
Each one of the 
\begin_inset Formula $k$
\end_inset

 replicas has a FIFO queue of length 
\begin_inset Formula $\left\lceil \frac{m}{k}\right\rceil $
\end_inset

.
 If job 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 issues request for one of the 
\begin_inset Formula $k$
\end_inset

 replicas, 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 is placed in the shortest FIFO queue.
 Otherwise, 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 acts as a priority donor using RRPD.
 
\begin_inset Formula $\tau_{i,x}$
\end_inset

 suspends in the FIFO queue until it becomes the head of the queue.
 The head of the queue holds the replica and inherits the highest effective
 priority of any task in the queue.
 RRPD and priority inheritance guarantee progress for pi-blocked jobs.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "nurtlwib"

\end_inset

 This citation needs to be written when paper published
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "nurtlwib"

\end_inset

 extends RNLP
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

 in the following ways:
\end_layout

\begin_layout Enumerate
If requested resources in a critical section are totally or partially known
 a priori, then they can be requested atomically, not individually.
 Thus, blocking times are reduced.
 Atomic resource request is done using 
\shape italic
Dynamic Group Locks (DGL)
\shape default
.
 The timestamp of token acquisition is recorded for each requested resource
 in a DGL in the corresponding resource queue.
 A job is ready when it is the head of all requested resource queues.
 DGL requests can be nested themselves.
 Using DGL, resource queues become simple FIFO queues instead of increasing
 timestamp ordered queues.
 Worst-case blocking bounds using DGL are the same under original RNLP
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

.
\end_layout

\begin_layout Enumerate
Short resource requests do not have to wait on long resources.
 Each type of resources has their own tokens.
 Short requests can be nested with long requests, but vice versa is not
 true.
 A request of nested long and short resources competes for a long token,
 while a request with only short resources competes for a short token.
 Long requests cannot reserve slots in short resources queues, even if the
 short resources will be nested in the future.
 
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "nurtlwib"

\end_inset

 reduces progress blocking that can happen when certain jobs are uselessly
 blocked in favor of other jobs executing their requests.
 This reduction is done by splitting resources into groups that are not
 going to nest together.
 Thus, different instances of RNLP can be instantiated for different resource
 groups with different progress and request blocking bounds.
\end_layout

\begin_layout Enumerate
Previous protocols like O-KGLP
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2011optimal"

\end_inset

, K-FMLP
\begin_inset CommandInset citation
LatexCommand cite
key "6257578"

\end_inset

 and R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP
\begin_inset CommandInset citation
LatexCommand cite
key "6300160"

\end_inset

 enable access to some replica for a single resource.
 
\begin_inset CommandInset citation
LatexCommand cite
key "nurtlwib"

\end_inset

 extends RNLP to support accessing replicas of multiple resources concurrently.
 If DGLs are used, then atomic resource requests are placed in the shortest
 queues of corresponding resources.
 Otherwise, resource requests are done as if they had been requested by
 DGL.
 In the latter case, if some resource will not be needed, its placeholder
 is removed from the replica queue.
\end_layout

\begin_layout Section
From Brandenburg dissertation
\begin_inset CommandInset citation
LatexCommand cite
key "brandenburg11"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Group locking
\begin_inset Quotes erd
\end_inset

 in locking protocols vs.
 nesting in STM.
\end_layout

\begin_layout Enumerate
Spin-locking protocols and semaphore locking protocols.
 Spin-locking is suitable for short critical sections where contention is
 low.
 Besides, spin-locking may not be an option in OSs that do not support non-preem
ptable execution nor link-based scheduling.
\end_layout

\begin_layout Enumerate
Spin-locking protocols:
\end_layout

\begin_deeper
\begin_layout Enumerate
Examples of spin-locking protocols are task-fair mutex, task-fair RW, read-prefe
rence lock, write-preference lock and Phase-fair RW locks.
\end_layout

\end_deeper
\begin_layout Enumerate
Semaphore-locking protocols:
\end_layout

\begin_deeper
\begin_layout Enumerate
Model is arbitrary deadline sporadic tasks scheduled with clustered JLFP.
 Number of critical sections and length of each critical section is constant.
 Nesting is done by group locking.
\end_layout

\begin_layout Enumerate
Discriminate between s-oblivious and s-aware analysis.
\end_layout

\begin_layout Enumerate
Priority donation is used with clustered scheduling.
 Priority donation may be reduced to priority inheritence in global scheduling.
 Be sure that priority inheritence is used not only with OMLP mutex locks,
 but also with OMLP RW locks, if the latter can ever be used with global
 JLFP scheduling.
\end_layout

\begin_layout Enumerate
In page 454, it is explained why there is no GLOBAL JLFP OMLP RW protocol
 (i.e., why RW OMLP is used only with clustered scheduling and not extended
 to the special case of global scheduling such as GLOBAL Mutex OMLP).
\end_layout

\begin_layout Enumerate
\begin_inset Formula $FMLP^{+}$
\end_inset

 is a version of FMLP that does not use spinning (i.e., it is suspension-based).
 It is used with PARTITIONED scheduling under s-aware analysis.
 In 
\begin_inset Formula $FMLP^{+}$
\end_inset

, critical sections can execute preemptively or non-preemptively.
\end_layout

\begin_layout Enumerate
Despite dissertation speaks about Global FMLP for s-aware analysis (especially
 for G-EDF implicit deadline system).
 FMLP is still suspension-based.
 If you are going to consider FMLP, take the global FMLP for implicit deadline
 systems with G-EDF or G-FP because it acheives 
\begin_inset Formula $O(n)$
\end_inset

 s-aware scheduling, so it is optimal form s-aware point of view.
 Note that author says that no s-aware blocking analysis has been published
 to date for G-EDF FMLP, but there's s-oblivious schedulabiltiy analysis
 
\begin_inset Quotes eld
\end_inset

A flexible real-time locking protocol for multiprocessors
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
This part is collected from lock-free with real-time
\end_layout

\begin_layout Standard

\series bold
THE MAIN PROBLE WITH LOCK-FREE OBJECTS WHEN USED WITH REAL-TIME SYSTEM IS
 TO BOUND NUMBER OF FAILIED RETRIES.
 THE FOLLOWING PAPERS SHOW THAT THIS NUMBER CAN BE BOUNDED UNDER DIFFERENT
 SCHEDULERS, FOR UNI AND MULTIPROCESSORS.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset


\end_layout

\begin_layout Enumerate
Lock-free objects are usually implemented with atomic primitives (e.g., CAS)
 in a 
\begin_inset Quotes eld
\end_inset

retry-loop
\begin_inset Quotes erd
\end_inset

.
 The loop repeats until the atomic operation succeeds.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset

 considers lock-free synchronization for hard-real time, periodic, uniprocessor
 systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset

 upper bounds retry loop failures and derives schedulability conditions
 with Rate Monotonic (RM), and Earliest Deadline First (EDF).
 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset

 compares, formally and experimentally, lock-free objects against locking
 protocols.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset

 concludes that lock-free objects often require less overhead than locking-proto
cols.
 They require no information about tasks and allow addition of new tasks
 simply.
 Besides, lock-free object do not induce excessive contex switches nor priority
 inversion.
 On the other hand, locking protocols allow nesting.
 Besides, performance of lock-free depends on the cost of 
\begin_inset Quotes eld
\end_inset

retry-loops
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset

 extends work in 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework"

\end_inset

 to generate a general framework for implementing lock-free objects in uniprcoce
ssr real-time systems.
 The framework tackles the problem of multi-objects lock-free operations
 and transactions through multi-word compare and swap (MWCAS) implementation.
 
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset

 provides a general approach to calculate cost of operation interference
 based on linear programming.
 
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset

 compares the proposed framework with real-time locking protocols.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset

 concludes that lock-free objects are prefered if cost of retry-loop is
 less than cost of lock-access-unlock sequence.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson1997lock"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "anderson1997lock"

\end_inset

 extends 
\begin_inset CommandInset citation
LatexCommand cite
key "anderson96framework,563704"

\end_inset

 to use lock-free objects in building memory-resident transactions for uniproces
sor real-time systems.
 Lock-free transactions, in contrast to lock-based transactions, do not
 suffere from priority inversion, deadlocks, complicated data-logging and
 rolling back.
 Lock-free transaction do not require kernel support.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 presents two synchronization methods under G-EDF scheduled real-time multiproce
ssor systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 considers simple objects.
 The first synchronization technique uses queue-based spin locks, while
 the other uses lock-free.
 The queue lock is FIFO ordered.
 Each task appends an entry at the end of the queue, and spins on it.
 While the task is spinning, it is non-preemptive.
 Task holding the head of the queue is the resource holder.
 When the resource holder finishes, the next entry executes non-preemptively.
 The queue could have been priority-based but this complicates design and
 does not enhance worst case response time analysis.
 Spinning is suitable for short critical sections.
\end_layout

\begin_layout Standard
Disabling preemption requires kernel support.
 So, second synchronization method uses lock-free objects.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 bounds number of retries.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 , analytically and experimentally, evaluates both synchronization techniques
 for soft and hard real-time analysis.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 concludes that queue locks have a little overhead.
 They are suitable for small number of shared object operations per task.
 Queue locks are not generally stuitable for nesting.
 Lock-free have high overhead compared with queue locks.
 Lock-free is suitable for small number of processors and object calls in
 the absence of kernel support.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006supporting"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006supporting"

\end_inset

 uses lock-free objects under PFair scheduling for multiprocessor system.
 
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006supporting"

\end_inset

 provides concept of 
\shape italic
supertasking
\shape default
 to reduce contention and number of failed retries.
 This is done by collecting jobs that need a common resource into the same
 supertask.
 Members of the same supertask run on the same processor.
 Thus, they cannot content together.
 
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006supporting"

\end_inset

 upper bounds worst case duration for lock-free object access with and without
 supertasking.
 
\end_layout

\begin_layout Enumerate
Lock-free is an optimization to locks, not a replacement to them.
 Locks are still needed in situations like sharing external devices, and
 accessing complex objects.
 
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Lai:2009:SSR:1529282.1529660"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Lai:2009:SSR:1529282.1529660"

\end_inset

 presents 
\shape italic
MK-Lock-Free Utility Accrual (MK-LFUA)
\shape default
 algorithm that mimizes system level energy consumption with lock-free synchroni
zation.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1656921"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1656921"

\end_inset

 uses lock-free synchronization for dynamic embedded real-time systems with
 resource overloads and arbitraty activity arrivals.
 Arbitrary activity arrivals are modeled with Universal Arrival Model (UAM).
 Lock-free retries are upper bounded.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1656921"

\end_inset

 identifies the conditions under which lock-free is better than lock-based
 sharing.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "726426"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "726426"

\end_inset

 compares building snapshot tool for real-time system using locking, lock-free
 and wait-free.
 
\begin_inset CommandInset citation
LatexCommand cite
key "726426"

\end_inset

 analytically and experimentally compares the three methods.
 
\begin_inset CommandInset citation
LatexCommand cite
key "726426"

\end_inset

 concludes that wait-free is better than its competitors.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449"

\end_inset


\end_layout

\begin_layout Standard
Wait-free protocols use multiple buffers for readers and writers.
 For single-writer/multiple-readers, each object has a number of buffers
 proportional to maximum number of reader's preemptions by the writer.
 This bounds number of reader's preemptions.
 Readers and writers can use different buffers without interfering each
 other.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1508449"

\end_inset

 presents wait-free protocol for single-writer/multiple-readers in small
 memory embedded real-time systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449"

\end_inset

 proves space optimality of the proposed protocol, as it required the minimum
 number of buffers.
 The protocol is safe and orderly.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449"

\end_inset

 also proves, analytically and experiemntally, that the protocol requires
 less space than other wait-free protocols.
 
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Cho:2006:UAP:1141277.1141490"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Cho:2006:UAP:1141277.1141490"

\end_inset

 extends 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449"

\end_inset

 to present wait-free utility accrual real-time scheduling algorithms (RUA
 and DASA) for real-time embedded systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Cho:2006:UAP:1141277.1141490"

\end_inset

 derives lower bounds on accrued utility compared with lock-based counterparts
 while minimizing additional space cost.
 Wait-free algorithms experimentally exhibit optimal utility for step time
 utility functions during underload, and higher utility than locks for non-step
 utility functions.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "4297311"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "4297311"

\end_inset

 presents synchronization techniques under LNREF 
\begin_inset CommandInset citation
LatexCommand cite
key "4032340"

\end_inset

 (an optimal real-time multiprocessor scheduler) for simple datastructures.
 Synchronization mechanisms include lock-based, lock-free and wait-free.
 
\begin_inset CommandInset citation
LatexCommand cite
key "4297311"

\end_inset

 derives minimum space cost for wait-free synchronization.
 
\begin_inset CommandInset citation
LatexCommand cite
key "4297311"

\end_inset

 compares, analytically and experimentally, between lock-free and lock-based
 synchronization under LNREF.
 
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5669659"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5669659"

\end_inset

 builds a lock-free linked-list queue on a multi-core ARM processor.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1003807"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1003807"

\end_inset

 uses wait-free to build three types of concurrent objects for real-time
 systems.
 Built objects has persistent states even if they crash.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "hohmuth2001pragmatic"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "hohmuth2001pragmatic"

\end_inset

 uses combination of lock-free and wait-free to build real-time systems.
 Lock-free is used only when CAS sufficies.
 The proposed design aims at allowing good real-time properties of the system,
 thus better schedulability.
 The design also aims at reducing synchronization overhead on uni and multiproce
ssor systems.
 The proposed mechanism is used to implement a micro-kernel interface for
 a uni-processor system.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1613351"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1613351"

\end_inset

 provides wait-free queue implementation for real-time Java specifications.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "811240"

\end_inset


\end_layout

\begin_layout Standard

\series bold
THE PROPOSED PROTOCOL CAN BE CONSIDERED WAIT-FREE SOLUTION FOR MULTI-WRITER/MULT
I-READER.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "811240"

\end_inset

 provides 
\begin_inset Formula $m$
\end_inset

-writer/
\begin_inset Formula $n$
\end_inset

-reader non-blocking synchronization protocol for real-time multiprocessor
 system.
 The protocol needs 
\begin_inset Formula $n+m+1$
\end_inset

 slots.
 
\begin_inset CommandInset citation
LatexCommand cite
key "811240"

\end_inset

 provides schedulability analysis of the protocol.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "896371"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "896371"

\end_inset

 presents wait-free methods for multi-writer/multi-reader in real-time multiproc
essor system.
 The proposed algorithms are used for both priority and quantum based scheduling.
 For a 
\begin_inset Formula $B$
\end_inset

 word buffer, the proposed algorithms exhibit 
\begin_inset Formula $O(B)$
\end_inset

 time complexity for reading and writing, and 
\begin_inset Formula $\Theta(B)$
\end_inset

 space complexity.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "896423"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "896423"

\end_inset

 provides a space-efficient wait-free implementation for 
\begin_inset Formula $n$
\end_inset

-writer/
\begin_inset Formula $n$
\end_inset

-reader synchronization in real-time multiprocessor system.
 The proposed algorithm uses timestamps to implement the shared buffer.
 
\begin_inset CommandInset citation
LatexCommand cite
key "896423"

\end_inset

 uses real-time properties to bound timestamps.
 
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1203552"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1203552"

\end_inset


\series bold
 LOOKS VERY SIMILAR TO 
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "896423"

\end_inset


\series bold
.
 I DON'T REALLY KNOW WHAT IS THE DIFFERENCE BETWEEN THEM.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1203552"

\end_inset

 presents wait-free implementation of the multi-writer/multi-reader problem
 for real-time multiprocessor synchronization.
 The proposed mechanism replicates single-writer/multi-reader to solve the
 multi-writer/multi-reader problem.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1203552"

\end_inset

, as 
\begin_inset CommandInset citation
LatexCommand cite
key "896423"

\end_inset

, uses real-time properties to ensure data cohernce through timestamps.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5953690"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5953690"

\end_inset

 combines locking and wait-free for real-time multiprocessor synchronization.
 This combination aims to reduce required space cost compared to pure wait-free
 algorithms, and blocking time compared to pure locking algorithms.
 The proposed scheme is jsut an idea.
 No formal analysis nor implementation is provided.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
This part is collected from real-time database systems
\end_layout

\begin_layout Standard
Real-time database systems (RTDBS) is not a synchronization technique.
 It is a predecessor and inspiration for real-time transactional memory.
 RTDBS itself uses synchronization techniques when transactions conflict
 together.
 RTDBS is concerned not only with logical data consistency, but also with
 temporal time constraints imposed on transactions.
 Temporal time constraints require transactions finish before their deadlines.
 External constraints require updating temporal data periodically to keep
 freshness of database.
 RTDBS allow mixed types of transactions.
 But a whole transaction is of one type.
 In real-time TM, a single task may contain atomic and non-atomic sections.
\end_layout

\begin_layout Standard

\shape italic
High-Priority two Phase Locking (HP-2PL)
\shape default
 protocol and 
\shape italic
Real-Time Optimistic Concurrency (RT-OCC)
\shape default
 protocol are the most two common protocols for RTDBS concurrency 
\begin_inset CommandInset citation
LatexCommand cite
key "lam1997concurrency,1401009,859541,259432,1541104"

\end_inset

.
 HP-2PL works like 2PL except that when a higher priority transaction request
 a lock held by a lower priority transaction, lower priority transaction
 releases the lock in favor of the higher priority one.
 Then, lower priority transaction restarts.
 RT-OCC delays conflict resolution till transaction validation.
 If validating transaction cannot be serialized with conflicting transactions,
 a priority scheme is used to determine which transaction to restart.
 In 
\shape italic
Optimistic Concurrency Control with Broadcast Commit (OCC-BC)
\shape default
, all conflicting transactions with the validating one are restarted.
 HP-2PL may encounter deadlock and long blocking times, while transactions
 under RT-OCC suffer from restart time at validation point.
\end_layout

\begin_layout Standard
Other protocols were developed based on HP-2PL and RT-OCC.
 HP-2PL, and its derivatives, are similar to locking protocols in real-time
 systems.
 They have the same problems in real-time locking protocols like priority
 inversion.
 So, the same solutions exist for the RTDBS locking protocols.
 Despite RT-OCC, and its derivatives, use locks in their implementation,
 their behaviour is closer to abort and retry in TM.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "lam1997concurrency"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "lam1997concurrency"

\end_inset

 presents 
\shape italic
Reduced Ceiling Protocol (RCP)
\shape default
 which is a combination of 
\shape italic
Priority Ceiling Protocol (PCP)
\shape default
 and 
\shape italic
Optimistic Concurrency Protocol (OCC)
\shape default
.
 RCP targets database systems with mixed hard and soft real-time transactions
 (RTDBS).
 RCP aims at guarantee of schedulabiltiy of hard real-time transactions,
 and minimizing deadline miss of soft real-time transactions.
\end_layout

\begin_layout Standard
Soft real-time transactions are blocked in favor of conflicting hard real-time
 transactions.
 While hard real-time transactions use PCP to synchrnonize among themselves,
 soft real-time transactions use OCC.
 Hard real-time transactions access locks in a 
\shape italic
tow phase locking (2PL)
\shape default
 fashion.
 Seized locks are released as soon as hard real-time transaction no longer
 need them.
 This reduces blocking time of soft real-time transactions.
 
\begin_inset CommandInset citation
LatexCommand cite
key "lam1997concurrency"

\end_inset

 derives analytical and experimental evaluation of RCP against other synchroniza
tion protocols.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1401009"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1401009"

\end_inset

 is concerned with semantic lock concurrency control.
 The semantic lock technique allows negotiation between logical and temporal
 constraints of data and transactions.
 It also controls imprecision resulting from negotiation.
 Thus, the semantic lock considers scheduling and concurrency of transactions.
 Semantic lock uses a compatibility function to determine if the release
 transaction is allowed to proceed or not.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "711842"

\end_inset


\end_layout

\begin_layout Standard

\series bold
PAPER IS USELESS.
 IT IS CONCERNED WITH SCHEDULING, NOT WITH CONCURRENCY CONTROL FOR RTDBS.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "4680843"

\end_inset


\end_layout

\begin_layout Standard
Time Interval OCC protocols try to reduce number of transaction restarts
 by dynamic adjustment of serialization timestamps.
 Time interval OCC may encounter unnecessary restarts.
 
\begin_inset CommandInset citation
LatexCommand cite
key "4680843"

\end_inset

 presents Timestamp Vector based OCC to resolve these unnecessary restarts.
 Timestamp Vector base OCC uses a timestamp vector instead of a single timestamp
 as in Time Interval OCC protocols.
 Experimental comparison between Timestamp Vector OCC and previous Time
 Interval OCC shows higher performance of Timestamp Vector OCC.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "5486030"

\end_inset


\end_layout

\begin_layout Standard

\series bold
USELESS.
 I CAN'T FIND ANY THING RELATED TO CONCURRENCY.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset

 aims to investigate performance improvement of priority congnizant OCC
 over incognizant counterparts.
 In OCC-BC, all conflicting transactions with the validating transaction
 are restarted.
 
\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset

 wonders if it is really worthy to sacrifice all other transactions in favor
 of one transaction.
 
\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset

 proposes 
\shape italic
Optimistic Concurrency Control- Adaptive PRiority (OCC-APR)
\shape default
 to answer this question.
 A validating transaction is restarted if it has sufficient time to its
 deadline if restarted, and higher priority transactions cannot be serialized
 with the conflicting transaction.
 Sufficient time estimate is adapted according to system feedback.
 System feedback is affected by contention level.
 
\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset

 experimentally concludes that integrating priority into concurrency control
 management is not very useful.
 Time Interval OCC showed better performance.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "495222"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
GENERALLY, THE PAPER IS USELESS.
 BUT IT GIVES A GOOD IDEA ABOUT WAIT-X PROTOCOL.
 SOME IDEA, BUT NOT GOOD ONE, ABOUT WAIT-X IS ALSO GIVEN IN 
\series default

\begin_inset CommandInset citation
LatexCommand cite
key "859541"

\end_inset

.
\end_layout

\begin_layout Enumerate
WAIT-X is one of the optimistic concurrency control (OCC) protocols.
 WAIT-X is a prospective (forward validation) OCC.
 Prospective means it detects conflicts between a validating transaction
 and conflicting transaction that may commit in the future.
 In retrospective (backward validation) protocols, conflicts are detected
 between a validating transaction and already committed transactions.
 Retrospective validation aborts validating transaction if it cannot be
 serialized with already committed conflicting transactions.
\end_layout

\begin_layout Enumerate
When WAIT-X detects a conflict, it can either abort validating transaction,
 or commit validating transaction and abort other conflicting transactions,
 or it can dealy validating a transction slightly hoping that conflicts
 resolve themsleves someway.
 Which action to take is a function of priorities of vlaidating and conflicting
 transactions.
 WAIT-X can delay validating transaction until percetage of higher priority
 transactions in the conflict set is lower than X%.
 WAIT-50 is a common implementation of WAIT-X.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "259432"

\end_inset


\end_layout

\begin_layout Standard

\series bold
SUERVEY PAPER.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "853992"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "853992"

\end_inset

 is concerned with concurrency control for multiprocessor RTDBS.
 
\begin_inset CommandInset citation
LatexCommand cite
key "853992"

\end_inset

 uses priority cap to modify 
\shape italic
Reader/Write Prirority Ceiling Protocol (RWPCP)
\shape default
 
\begin_inset CommandInset citation
LatexCommand cite
key "83617"

\end_inset

 to work on multiprocessor systems.
 The proposed protocol, named 
\shape italic
One Priority Inversion RWPCP (1PI-RWPCP)
\shape default
, is deadlock-free and bounds number of priority inversions for any transaction
 to one.
 
\begin_inset CommandInset citation
LatexCommand cite
key "853992"

\end_inset

 derives feasiblity condition for any transaction under 1PI-RWPCP.
 
\begin_inset CommandInset citation
LatexCommand cite
key "853992"

\end_inset

 experimentally compares performance of 1PI-RWPCP against RWPCP.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "853991"

\end_inset


\end_layout

\begin_layout Standard
RTDBS may contain mixed transactions (MRTDBS).
 
\begin_inset CommandInset citation
LatexCommand cite
key "853991"

\end_inset

 classifies mixed transactions into hard (HRT), soft (SRT) and non (NRT)
 real-time transactions.
 HRT has higher priority than SRT.
 SRT has higher priority than NRT.
 
\begin_inset CommandInset citation
LatexCommand cite
key "853991"

\end_inset

 aims at guranting deadlines of HRTs, minimizing miss rate of SRTs and reducing
 response time of NRTs.
 So, 
\begin_inset CommandInset citation
LatexCommand cite
key "853991"

\end_inset

 deals with inter and intra-transaction concurrency.
 HRTs use PCP for concurrency control among themselves.
 SRTs use WAIT-50, and NRTs use 2PL.
 SRT and NRT are blocked or aborted in favor of HRT.
 If NRT requests a lock held by SRT, then NRT is blocked.
 If SRT requests a lock held by NRT, WAIT-50 is applied.
 Experimental evaluation showed effective improvement in overall system
 performance.
 Performance objectives of each transaction type was met.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5532682"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5532682"

\end_inset

 combines locking, multi-version and valid confirmation concurrency control
 mechanisms.
 The proposed method adopts different concurrency control mechanism according
 to idiographic situation.
 Experiments show lower rate of transactional restart of the proposed mechanis
 compared to 2PL-HP.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "1541104"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "1541104"

\end_inset

 is concerned with RTDBS containing periodically updated data and one time
 transactactions.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1541104"

\end_inset

 provides two new concurrency control protocols to balance freshness of
 data and transaction performance.
 
\begin_inset CommandInset citation
LatexCommand cite
key "1541104"

\end_inset

 proposes 
\shape italic
HP-2PL with Delayed Restart (HP-2PL-DR)
\shape default
 and 
\shape italic
HP-2PL with Delayed Restart and Pre-declaration (HP-2PL-DRP)
\shape default
 based on HP-2PL.
 Before a transaction 
\begin_inset Formula $T$
\end_inset

 restarts in HP-2PL-DR, next update time of each temporal data accessed
 by 
\begin_inset Formula $T$
\end_inset

 is checked.
 If next update time starts before currently re-executing 
\begin_inset Formula $T$
\end_inset

, then 
\begin_inset Formula $T$
\end_inset

's restart time is delayed until the next udpate.
 Otherwise, 
\begin_inset Formula $T$
\end_inset

 is restarted immediately.
 If 
\begin_inset Formula $T_{r}$
\end_inset

 and 
\begin_inset Formula $T_{n}$
\end_inset

 are two transactions under HP-2PL-DRT.
 
\begin_inset Formula $T_{r}$
\end_inset

 is requesting a lock held by 
\begin_inset Formula $T_{n}$
\end_inset

.
 If priority of 
\begin_inset Formula $T_{r}$
\end_inset

 is greater than priority of 
\begin_inset Formula $T_{n}$
\end_inset

, then 
\begin_inset Formula $T_{n}$
\end_inset

 releases the lock in favor of 
\begin_inset Formula $T_{r}$
\end_inset

.
 Othewise, 
\begin_inset Formula $T_{r}$
\end_inset

 fails.
 If 
\begin_inset Formula $T_{n}$
\end_inset

 releases the lock and 
\begin_inset Formula $T_{n}$
\end_inset

 is a one time transaction, then 
\begin_inset Formula $T_{n}$
\end_inset

 restarts immediately.
 Otherwise, 
\begin_inset Formula $T_{n}$
\end_inset

 lock waiting time is updated.
 Experiments show improved performance of HP-2PL-DR and HP-2PL-DRP over
 HP-2PL.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
Add these papers to real-time TM
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Meawad:2011:RWQ:2043910.2043912"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
THE NAME OF PAPER IS MISLEADING.
 
\begin_inset Quotes eld
\end_inset

WAIT-FREE
\begin_inset Quotes erd
\end_inset

 RESULTS FROM USE OF TM.
 IT'S NOT A WAIT-FREE PROTOCOL OR SOMETHING LIKE THAT.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset citation
LatexCommand cite
key "Meawad:2011:RWQ:2043910.2043912"

\end_inset

 uses HTM to build single and double linked queue, and limited capacity
 queue.
 HTM is used as an alterntive synchronization operation to CAS and locks.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Meawad:2011:RWQ:2043910.2043912"

\end_inset

 provides worst case time analysis for the implemented datastructures.
 It experimentally compares the implemented datastructures with CAS and
 lock.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Meawad:2011:RWQ:2043910.2043912"

\end_inset

 reverses the role of TM.
 Transactions are used to build the datastructure, instead of accessing
 datastructures inside transactions.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5694263"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5694263"

\end_inset

 presents an implementation for HTM in a Java chip multiprocessor system
 (CMP).
 The used processor is JOP, where worst case execution time analysis is
 supported.
\end_layout

\begin_layout Section
(DOE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 presents two steps to minimize and limit number of transactional aborts
 in real-time multiprocessor embedded systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 assumes tasks are scheduled under partitioned EDF.
 Each task contains at most one transaction.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 uses multi-versioned STM.
 In this method, read-only transactions use recent and consistent snapshort
 of their read sets.
 Thus, they do not conflict with other transactions and commit on first
 try.
 This reduction in abort number comes at the cost of increased memory storage
 for different versions.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 uses real-time characterestics to bound maximum number of required versions
 for each object.
 Thus, required space is bounded.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 serializes conflicting transaction in a chronological order.
 Ties are broken using least laxity and processor identification.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6068352"

\end_inset

 does not provide experimental evaluation of its work.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5665752"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5665752"

\end_inset

 studies the effect of eager versus lazy conflict detection on real-time
 schedulability.
 In eager validation, conflicts are detected as soon as they occur.
 One of the conflicting transactions should be aborted immediately.
 In lazy validation, conflict detection is delayed to commit time.
 
\begin_inset CommandInset citation
LatexCommand cite
key "5665752"

\end_inset

 assumes each task is a complete transaction.
 
\begin_inset CommandInset citation
LatexCommand cite
key "5665752"

\end_inset

 proves that synchronous release of tasks does not necessarily lead to worst
 case response time of tasks.
 
\begin_inset CommandInset citation
LatexCommand cite
key "5665752"

\end_inset

 also proves that lazy validation will alawys result in a longer or equal
 response time than eager validation.
 Experiments show that this gap is quite high if higher priority tasks interfer
 with lower priority ones.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "5958224"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "5958224"

\end_inset

proposes an adaptive scheme to meet deadlines of transactions.
 This adaptive scheme collects statistical information about execution length
 of transactions.
 A transaction can execute in any of three modes depending on its closeness
 to deadline.
 These modes are optimistic, visible read and irrevocable.
 The optimistic mode defers conflict detection to commit time.
 In visible read, other transactions are informed that a particular location
 has been read and subject to conflict.
 Irrovocable mode prevents transaction from aborting.
 As a transaction gets closer to its deadline, it moves from optimistic
 to visible read to irrovocable mode.
 Deadline transactions are supported by the underlying scheduler by disabling
 preemption for them.
 Experimental evaluation shows improvement in number of committed transactions
 without noticable degradation in transactional throughput.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "6120942"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "6120942"

\end_inset

 uses timed automate for schedulability analysis of STM.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
General problems of synchronization techniques
\end_layout

\begin_layout Enumerate
In general, real-time locking protocls have disadvantages like: 1) serialized
 access to shared object, resulting in reduced concurrency and reduced utilizati
on.
 2) increased overhead due to context switches.
 3) possiblity of deadlock when lock holder crashes.
 3) some protocols requires priori knowledge of ceiling priorities of locks.
 This is not always available.
 4) OS datastructures must be updates with this knowledge which reduces
 flexibiltiy.
\end_layout

\begin_layout Enumerate
For real-time lock-free, the most important problem is to bound number of
 failed retries and reduce cost of a single loop.
 The general technique to access lock-free objects is 
\begin_inset Quotes eld
\end_inset

retry-loop
\begin_inset Quotes erd
\end_inset

.
 Retry-loop uses atomic primitives (e.g., CAS) which is repeated until success.
 To access a specific data structure efficiently, lock-free technique is
 customized to that data structure.
 This increases difficulty of response time analysis.
 Primitve operations do not access multiple objects concurrently.
 Although some attempts made to enable multi-word CAS 
\begin_inset CommandInset citation
LatexCommand cite
key "563704"

\end_inset

, but it is not available in commidity hardware 
\begin_inset CommandInset citation
LatexCommand cite
key "Meawad:2011:RWQ:2043910.2043912"

\end_inset

.
\end_layout

\begin_layout Enumerate
For real-time wait-free protocols.
 It has a space problem due to use of multiple buffers.
 This is inefficient in some applications like small-memory real-time embedded
 systems.
 Wait-free has the same problem of lock-free in handling multiple objects.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
This part is collected from contention manaer papers- but not related to
 real-time
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "Guerraoui:2005:TTT:1073814.1073863,Guerraoui:2006:TTT:1146381.1146429"

\end_inset


\end_layout

\begin_layout Enumerate
It investigates theoretical and programmatical issues related to contention
 managers.
 It provides greedy contention manager as an attempt to enlight theoritical
 aspects for contention managers.
 Greedy contention manager ensures pending property.
 Pending property means, at any time, some running transaction will run
 uninterrupted until it commits.
 Consequently, for 
\begin_inset Formula $n$
\end_inset

 concurrent transactions sharing 
\begin_inset Formula $s$
\end_inset

 objects, greedy contention manager commits each transaction within a foctor
 of 
\begin_inset Formula $s(s+1)+2$
\end_inset

 of the time taken by an off-line list scheduler (one that knows transaction
 requirements in advance), where 
\begin_inset Formula $s$
\end_inset

 is the number of shared objects.
\end_layout

\begin_layout Enumerate

\series bold
(NO NEED TO WRITE THIS POINT)
\series default
 The paper differentiates between contention managers and schedulers.
 It says schedulers are centralized, but contention managers are not.
 This way, no transaction is blocked or swapped-out.
 
\series bold
(DON'T WRITE THIS PART IN PRELIM NOW: PNF IS CENTRALIZED IN NATURE.
 IT RAISES PRIORITIES OF TRANSACTIONS TO AVOID PROBLEM OF BLOCKING OR SWAPPING
 OUT).

\series default
 The paper also says schedulers are off-line.
 They need to know their requirments in advance.
 This is not the case for contention managers.
 
\series bold
(DON'T WRITE THIS PART ALSO: AGAIN THIS LAST DIFFERENCE IS DIFFERENT FROM
 LCM, WHERE LENGTH OF INTERFERING TRANSACTION, AND REMAINING LENGTH OF INTERFERE
D TRANSACTION MUST BE KNOWN).

\series default
 The paper also differentiates between contention managers and database
 concurrency controllors and failure detector.
\end_layout

\begin_layout Enumerate
Rules for greedy algorithm are simple.
 Each transaction is given a timestamp when it starts.
 The earlier the timestamp of a transaction, the higher its priority.
 If transaction A conflicts with transaction B, and B is of lower priority
 or is waiting for antother transaction, then A aborts B.
 Otherwise, A waits for B to commit, abort or starts waiting.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Scherer:2005:ACM:1073814.1073861,scherer2004contention"

\end_inset


\end_layout

\begin_layout Enumerate
Contention manager policy ranges from never aborting enemies to always aborting
 them.
 Of course these two extremes are impractical because they can lead to deadlock,
 starvation, livelock and major loss of performance.
 Contention manager policy lies in between.
 Depending on heuristics, contention manager balances between decisions
 complexity against quality and overhead.
\end_layout

\begin_layout Enumerate
It says contention managers are decentralized.
\end_layout

\begin_layout Enumerate
The paper analyzes different contention managers.
 
\series bold
THESE CONTNETION MANAGERS ALSO MENTION IN
\series default
 
\begin_inset CommandInset citation
LatexCommand cite
key "scherer2004contention,Spear:2009:CSC:1504176.1504199,springerlink:10.1007/11561927_23,Scherer:2005:ACM:1073814.1073861"

\end_inset

 like:
\end_layout

\begin_deeper
\begin_layout Enumerate
Passive and Agressive: Passive contention manager aborts current transaction,
 while agressive aborts enemy.
\end_layout

\begin_layout Enumerate
Polite: When conflicting on an object, a transaction spins exponensially
 for average of 
\begin_inset Formula $2^{(n+k)}\, ns$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is number of times to access the object, and 
\begin_inset Formula $k$
\end_inset

 is a tuning parameter.
 Spinning times is bounded by 
\begin_inset Formula $m$
\end_inset

.
 Afterwards, any enemy is aborted.
\end_layout

\begin_layout Enumerate
Karma: It assigns priorities to transaction based on the amount of work
 done so far.
 Amount of work is measured by number of opened objects by current transaction.
 Higer priority transaction aborts lower priority one.
 If lower priority transaction tries to access an object for a number of
 times greater than priority difference between itself and higher priority
 transaction, enemy is aborted.
\end_layout

\begin_layout Enumerate
Eruption: It works like Karma except it adds priority of blocked transaction
 to the transaction blocking it.
 This way, enemy is sped-up, allowing blocked transactions to complete faster.
\end_layout

\begin_layout Enumerate
Kindergarten: A transaction maintains a hit list (initially empty) of enemies
 who previously caused current thread to abort.
 When a new enemy is encountered, current transaction backs off for a limited
 amount of time.
 The new enemy is recorded in the hit list.
 If the enemy is already in the hit list, it is aborted.
 If current transaction is still blocked afterwards, then it is aborted.
\end_layout

\begin_layout Enumerate
Timestamp: It is a fair contention manager.
 Each transaction gets a timestamp when it begins.
 Transaction with newer timestamp is aborted in favor of the older.
 Otherwise, transaction waits for a fixed intervals, marking the enemy flag
 as defunct.
 If the enemy is not done afterwards, it is killed.
 Active transaction clear their flag when they notice it is set.
\end_layout

\begin_layout Enumerate
Randomized: It aborts current transaction with some probability 
\begin_inset Formula $p$
\end_inset

, and waits with probability 
\begin_inset Formula $1-p$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
The paper proposes new contention managers:
\end_layout

\begin_deeper
\begin_layout Enumerate
PublishedTimestamp: It works like Timestamp contention manager except it
 has a new definition for an 
\begin_inset Quotes eld
\end_inset

inactive
\begin_inset Quotes erd
\end_inset

 transaction.
 Each transaction maintains a 
\begin_inset Quotes eld
\end_inset

recency
\begin_inset Quotes erd
\end_inset

 flag.
 Recency flag is updated every time the transaction makes a request.
 Each transaction maintinas its own 
\begin_inset Quotes eld
\end_inset

inactivity
\begin_inset Quotes erd
\end_inset

 threshold paramater that is doubled every time it is aborted up to a specific
 limit.
 If the enemy 
\begin_inset Quotes eld
\end_inset

recency
\begin_inset Quotes erd
\end_inset

 flag is behind the system global time by amount exceeding its 
\begin_inset Quotes eld
\end_inset

inactivity
\begin_inset Quotes erd
\end_inset

 threshold, then enemy is aborted.
\end_layout

\begin_layout Enumerate
Polka: It is a combination of Polite and Karma contention managers.
 Like Karma, it assigns priorities based on amount of job done so far.
 A transaction backs off for a number of intervals equals difference in
 priority between itself and its enemy.
 Unlike Karma, back-off length increases exponentially.
\end_layout

\end_deeper
\begin_layout Enumerate
Prioritized version of the previous contention managers appeared.
 Prioritized contention managers include base priority of the thread holding
 the transaction into contention manager policy.
 This way, higher priority threads are more favored.
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s00453-008-9195-x"

\end_inset


\end_layout

\begin_layout Enumerate
It compares performance of different contention managers against an optimal,
 clairvoyant contention manager.
 The optimal contention manager knows all resources needed by each transaction,
 as well as its release time and duration.
 Comparison is based on the 
\begin_inset Quotes eld
\end_inset

makespan
\begin_inset Quotes erd
\end_inset

 concept which is amount of time needed to finish a specific set of transactions.
 The ratio between makespan of analyzed contention manager and the makespan
 of the optimal contention manager is known as competitive ratio.
\end_layout

\begin_layout Enumerate
It proves that any contention manager can be of 
\begin_inset Formula $O(s)$
\end_inset

 competitive ratio if the contention manager is work conserving (i.e., alawys
 lets the maximal set of non-conflicting transactions run), and satisfies
 pending property 
\begin_inset CommandInset citation
LatexCommand cite
key "Guerraoui:2005:TTT:1073814.1073863"

\end_inset

.
 The paper proves that this result is asymptotically tight as no on-line
 work conserving contention manager can acheive better result.
\end_layout

\begin_layout Enumerate
The paper proves that the makespan of greedy contention manager is 
\begin_inset Formula $O(s)$
\end_inset

 instead of 
\begin_inset Formula $O(s^{2})$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Guerraoui:2005:TTT:1073814.1073863"

\end_inset

.
 This allows transactions of arbitrary release time and durations in contrast
 to what is assumed in 
\begin_inset CommandInset citation
LatexCommand cite
key "Guerraoui:2005:TTT:1073814.1073863"

\end_inset

.
 For randomized contention managers, a lower bound of 
\begin_inset Formula $\Omega(s)$
\end_inset

 if transaction can modify their resource needs when they are reinvoked.
 
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "Johnson:2010:DCM:1736020.1736035"

\end_inset


\end_layout

\begin_layout Standard
Useless in the point of view of contention managers.
 It speaks about tradeoff between spinning and blocking.
 It might be of use from locking point of view.
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "Spear:2009:CSC:1504176.1504199"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
DON'T INCLUDE THIS PAPER.
 ITS MAIN CONCERN ABOUT IMPLEMENTATION ISSUES OF CONTENTION MANAGERS.
 IT'S SOMEHOW USELESS
\series default
.
\end_layout

\begin_layout Enumerate
The paper provides a comprehensive contention manager in an attempt to acheive
 both of: 1) low overhead for low contention.
 2) good throughput and fairness in case of high contention.
\end_layout

\begin_layout Enumerate
The main components of comprehensive contention manager are: 1) lazy acquisition.
 2) extendable timestamp-based conflict detection.
 3) an efficient method for capturing conflcits and priorities.
 
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "Maldonado:2010:SST:1693453.1693465"

\end_inset


\end_layout

\begin_layout Enumerate
This paper like 
\begin_inset CommandInset citation
LatexCommand cite
key "Spear:2009:CSC:1504176.1504199"

\end_inset

 is concerned with implementation issues.
 The paper considers problems resulting from previous contention management
 policy like backing off and waiting for time intervals.
 These strategies make transactions suffer from many aborts that may lead
 to livelocks, and increased vulnerability to abort because of transactional
 preemption due to higher priority tasks.
 Imprecise information and unpredictable benifits resulting from handling
 long transactions make it difficult to make correct conflict resolution
 decisions.
 The paper discriminates between decisions for long and short transactions,
 as well as, number of threads larger or lower than number of cores.
\end_layout

\begin_layout Enumerate
The paper suggests a number of user and kernel level support mechanisms
 for contention managers, attempting to reduce overhead in current contention
 managers' implementations.
 Instead of spin-locks and system calls, the paper uses shared memory segments
 for communication between kernel and STM library.
 It also proposes reducing priority of loser threads instead of aborting
 them.
 Paper also suggests increasing time slices for transactions before they
 are preempted by higher priority threads.
 This way, long transactions can commit quickly before they are suspended,
 reducing abort numbers.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "4722347"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
PAPER IS USELESS.
 DON'T INCLUDE IT.
\end_layout

\begin_layout Enumerate
The paper investigate use of causal consistency to reduce number of conflicts
 in high contentin STM environment.
 
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/11561927_23"

\end_inset


\end_layout

\begin_layout Enumerate
By analyzind different contention managers under different situations, the
 paper concludes that no single contention manager is suitable for all cases.
 Thus, the paper proposes a polymorphic contention manager that changes
 contention managers on the fly throughout different loads, concurrent threads
 of singl load and even different phases of a single thread.
\end_layout

\begin_layout Enumerate
To implement polymorphic contention manager, it is important to resolve
 conflicts resulting from different contention managers in the same application
 by different methods.
 The easiest way is to abort the enemy contention manager if it is of different
 type.
 Paper suggests usage of generic priorities for each transaction regardless
 of the transaction's contention manager.
 Upon coflict between different classes of contention manager, highest priority
 transaction is committed.
\end_layout

\begin_layout Enumerate

\series bold
DON'T INCLUDE THIS POINT.
 SECTION 5 IN THE PAPER SPEAKS ABOUT NESTED TRANSACTIONS.
 YOU MAY NEED TO INCLUDE IT LATER WHEN DEALING WITH NESTING.
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "Blake:2009:PTS:1669112.1669133"

\end_inset


\end_layout

\begin_layout Enumerate
For high number of cores, back-off strategies perform poorly.
 This is due to hot spots created by small set of conflicts.
 These hotspots repeate in predictable manner.
 The paper introduces proactive contention manger that uses history to predict
 these hotspots and scheduler transactions around them without programmer's
 input.
\end_layout

\begin_layout Enumerate
Proactive contention manager is useful in high contention, but has high
 cost for low contention.
 So, the paper proposes a hybrid contention managers that begins with back-off
 strategy for low contention.
 After a specific threshold for contention level, hybrid contention manager
 switchs to proactive manager.
\end_layout

\begin_layout Section
(DONE) From 
\begin_inset CommandInset citation
LatexCommand cite
key "gottschlich2008extending"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
THE PAPER CAN ALSO BE INCLUDED IN RELATED WORK.
 HOWEVER, IT IS OF LITTLE USE.
\end_layout

\begin_layout Enumerate
Previous contention managers concentrate on preventing starvation through
 fair policies.
 They are not suitable for specific systems like real-time systems where
 stronger behavioral gaurantees are required.
 The paper proposes user-defined priority transactions to make contention
 management suitable for these specific systems.
 It investigates the correlation between consistency checking (i.e., finding
 memory conflicts) and user-defined priority transactions.
 Transaction priority can be static or dynamic.
 Dynamic priority increases as abort numbers of transaction increases.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Scherer:2005:ACM:1073814.1073861"

\end_inset


\end_layout

\begin_layout Enumerate
Contention managers are limited as: 1) they are reactive, and suitable only
 for imminent conflicts.
 They do not specify when aborted transaction should restart, making them
 conflict again easily.
 2) Contention managers are decentralized because they consume a large part
 of traffic during high contention.
 Decentralization prevents global view of the system and limit contention
 management policy to heuristics.
 3) As contention managers are user-level modules, it is difficult to integrate
 them in HTM.
\end_layout

\begin_layout Enumerate
The paper tackle the previous problems by 
\shape italic
adaptive transaction scheduling
\shape default
 (ATS).
 ATS uses contention intensity feedback from the application to adaptively
 decide number of concurrent transactions running within critical sections.
 ATS is called only when transaction starts in high contention.
 Thus, resulting traffic is low and scheduler can be centralized.
 ATS is integrated into HTM and STM.
\end_layout

\begin_layout Section
(DONE)From 
\begin_inset CommandInset citation
LatexCommand cite
key "Dolev:2008:CSC:1400751.1400769"

\end_inset


\end_layout

\begin_layout Standard
The paper presents CAR-STM, a scheduling-based mechanism for STM collision
 avoidance and resolution.
 CAR-STM maintains a transaction queue per each core.
 Each transaction is assigned to a queue by a dispatcher.
 At the beginning of the transaction, dispatcher uses a conflict probability
 method to determine the suitable queue for the transaction.
 The queue with high contention for the current transaction is the most
 suitable one.
 All transactions in the same queue are executed by the same thread, thus
 they are serialized and cannot collide together.
 CAR-STM uses a serilaizing contention manager.
 If one transaction conflicts with another transaction, the fromer transaction
 is moved to the queue of the latter.
 This prevents further collision between them unless the second transaction
 is moved to a third queue.
 Thus, CAR-STM uses another serialization strategy in which the two transactions
 are moved to the third queue.
 This guarantees conflict between transactions for at most once.
\end_layout

\begin_layout Enumerate
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
From [Book of Real-time database systems: architecture and design] included
 in related work
\end_layout

\begin_layout Subsection
Chapter 4
\end_layout

\begin_layout Standard
The following references introduce some information on CONSERVATIVE CONCURRENTCY
 CONTROL in real time database systems:- 1, 2, 3, 4, 5, 10, 24.
\end_layout

\begin_layout Standard
variations of RWPCP (Read/Write PCP) 7, 11, 15, 16, 17, 22, 26.
\end_layout

\begin_layout Standard

\series bold
\bar under
References for abort algorithms
\end_layout

\begin_layout Itemize
1 for high priority.
\end_layout

\begin_layout Itemize
2PL 6 for variation of 1.
\end_layout

\begin_layout Itemize
9, 10, 11, 21, 22,23, 24, 26 for integrating abortion in locking which maintain
 the followin idea:- 
\begin_inset Quotes eld
\end_inset

The main idea behind transaction aborting is that when a higher priority
 transaction is blocked by a lower priority transaction due to resource
 competition, the higher priority transaction aborts the lower priority
 transaction if the lower priority transaction is abortable, and the lower
 priority transaction may introduce excessive blocking time to any higher
 priority transaction.
 If not, the higher priority transaction is blocked by the lower priority
 transaction.
 Whether a transaction is abortable or may impose excessive blocking on
 any higher priority transaction can be determined by an on-line or off-line
 schedulability analysis.
 
\begin_inset Quotes eld
\end_inset


\end_layout

\begin_layout Itemize
[11, 9] proposed a framework in trading the aborting cost with the blocking
 cost of transactions.
 THEY MAY BE CLOSE TO YOUR WORK.
 READ THEM.
\end_layout

\begin_layout Standard
For OPTIMISTIC CONCURRENCY CONTROL, references include:-
\end_layout

\begin_layout Itemize
3, 4 wait-50 and wait-X.
\end_layout

\begin_layout Itemize
[13][14] dynamic adjustment of serializability order to avoid unnecessary
 restart.
\end_layout

\begin_layout Subsection
Chapter 5
\end_layout

\begin_layout Standard
May not be very usefull as it speaks about relaxed correctness criterion
 and its effect on concurrency control algorithms.
\end_layout

\begin_layout Standard
If you want, have a look at these references:-
\end_layout

\begin_layout Standard
8, 9, 12, 13, 3
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
This part is collected from DRTDBS nested transactions' papers
\end_layout

\begin_layout Itemize
In distributed real-time database systems
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient,4709120,1420972,316159"

\end_inset

, nested transactions are represented as trees.
 The outermost transaction is the root of the tree.
 Children of the root are either sub-transactions or leaf nodes.
 Each sub-transaction itself consists of other sub-transactions and/or leaf
 nodes.
 Data can be accessed in leaf nodes and/or sub-transactions by 
\begin_inset Quotes eld
\end_inset

read
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

write
\begin_inset Quotes erd
\end_inset

 operations.
 Relation between children of any node is done by AND or OR operations.
 AND means all children of the node must commit for their parent to commit.
 OR means only one child should commit for its parent to commit.
 
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient,4709120,1420972"

\end_inset

 are concerned with closed nesting.
 A parent and child transactions execute asynchronously if they both can
 run concurrently.
 Otherwise, if the parent stops to let the child run, this is a synchronous
 mode.
\end_layout

\begin_layout Itemize

\series bold
Asynchronous mode may be available in distributed systems, where a child
 runs on host other than its parent.
 But as we are concerned with multiprocessor (not distributed) systems,
 then we only use synchronous mode.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient"

\end_inset

 presents a priority assignment scheme called 
\shape italic
flexible high reward for nested transactions (FHRN)
\shape default
 and a real-time concurrency control protocol for nested transactions in
 DRTDBS called 
\shape italic
two phase locking with high priority for nested transactions (2PL-HPN)
\shape default
.
\end_layout

\begin_layout Itemize
There have been several ways to assign priorities to transactions.
 
\shape italic
Earliest Deadline
\shape default
 (ED) 
\begin_inset CommandInset citation
LatexCommand cite
key "Abbott:1988:SRT:44203.44209"

\end_inset

 gives higher priority to shorter transaction.
 
\shape italic
Highest Value
\shape default
 (HV) 
\begin_inset CommandInset citation
LatexCommand cite
key "Haritsa:1993:VSR:615164.615166"

\end_inset

 gives a value to a transaction if finished before deadline.
 A transaction with higher value has higher priority.
 
\shape italic
Higest Rewared and Urgency
\shape default
 (HRU) 
\begin_inset CommandInset citation
LatexCommand cite
key "Harder:1993:CCI:615159.615161"

\end_inset

 considers both deadline and value in priority assignment.
 Higher priority is given to transactions with higher value and shorter
 deadline.
 
\shape italic
Flexible High Reward
\shape default
 (FHR) 
\begin_inset CommandInset citation
LatexCommand cite
key "Chen:2001:SVT:645609.757937"

\end_inset

 extends HRU to take communication delay of distributed systems into account.
 
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient"

\end_inset

 extends FHR to FHRN where higher number of leaves and nesting levels increase
 priorities in FHRN.
\end_layout

\begin_layout Itemize
Under FHRN, a nested transaction can be aborted by any other transaction.
 So, FHRN cannot bound worst case upper bound on retry cost in real-time
 systems.
\end_layout

\begin_layout Itemize
2PL-HPN is based on two phase locking protocol with high priority scheme
 (2PL-HP) 
\series bold

\begin_inset CommandInset citation
LatexCommand cite
key "Abbott:1988:SRT:44203.44209"

\end_inset


\series default
 with priority inheritance and conditional restart.
 Under 2PL-HPN, higher priority transaction access objects first.
 Higher priority transaction is blocked if its slacking time allows current
 lower priority transactions to complete.
 Priority inheritance is used to prevent priority inversion.
 Transactions belonging to the same family should not abort each other.
 Priority inheritance is used among transactions of the same family.
\end_layout

\begin_layout Itemize
Simulation results show superiority of FHRN over other priority assignment
 schemes.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "4709120"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "4709120"

\end_inset

 presents 
\shape italic
multiversion optimistic concurrency control for nested transactions
\shape default
 (MVOCC-NT) protocol for mobile real-time nested transactions in mobile
 broadcast environments.
\end_layout

\begin_layout Itemize
In MVOCC-NT, each transaction is assigned a timestamp at its start.
 Each object can have multiple versions.
 Each version has two flags indicating largest timestamps of transactions
 created and read that object version.
 Each read and write operation access object version that just precedes
 transaction's timestamp.
 If a transaction tries to write an object with a larger read flag, then
 the writing transaction is restarted.
 Otherwise, a new object version is created.
 A read (written) object version is kept in the read (write) set of the
 transaction.
\end_layout

\begin_layout Itemize

\series bold
Read operations do not fail nor wait.
 Read only nested transactions can commit without blocking.
\end_layout

\begin_layout Itemize
Transaction's restart can be expensive.
 So, multiversion dynamic adjustment is used to prevent unnecessary restarts.
 If read(write) set of a validating transaction conflicts with write(read)
 set of an active transaction respectively, then serialization order should
 indicate that validating transaction precedes active transaction.
 Each transaction has a validating interval that is initialized to 
\begin_inset Formula $[0,\infty]$
\end_inset

.
 For each conflict, lower or upper bound of the validating interval is modified.
 If the validating interval is empty, then transaction must be restarted.
\end_layout

\begin_layout Itemize
Validation is done on two phases: pre-validation and final validation.
 Pre-validation is done locally at the mobile host.
 If a transaction passes pre-validation, then it is sent to the server for
 final validation.
 When a transaction passes final validation, it is assigned a final timestamp.
 After final validation, server broadcasts committed and aborted transactions
 with read and write sets of committed transactions.
 Splitting validation on two phases reduces number of aborted transactions
 at the server, hence reduces restart cost.
\end_layout

\begin_layout Itemize
Despite MVOCC-NT is designed for real-time nested transaction, 
\begin_inset CommandInset citation
LatexCommand cite
key "4709120"

\end_inset

 does not bound retry cost nor response time.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "1420972"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "1530682"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "1420972"

\end_inset

 presents 2PL-NT-HP concurrency control protocol and 2PC-RT-NT commit protocol.
 2PL-NT-HP solves data conflicts between nested transactions in distributed
 real-time database systems (DRTDBS).
 2PC-RT-NT ensures atomicity of distributed nested transactions in DRTDBM.
 Priorities are assigned to each sub-transaction by adding the sub-transaction
 level to its parent priority.
 The base priority of the outermost transaction is assigned by EDF.
\end_layout

\begin_layout Itemize
Under 2PL-RT-HP, a higher priority (sub)transaction is allowed to access
 data first than a lower priority (sub)transaction.
 If both the higher and lower priority (sub)transactions belong to the same
 tree, lower priority (sub)transaction inherits priority of the higher priority
 one.
 Otherwise, the lower (sub)transaction is allowed to execute only if the
 slack time of the higher priority (sub)transaction allows all lower priority
 (sub)transactions to complete their execution without violating deadline
 of the higher priority (sub)transaction.
 In this case, lower priority (sub)transactions inherit priority of higher
 priority (sub)transaction.
 Otherwise, lower priority (sub)transactions are aborted and restarted if
 a the wasted resource manager permits them.
 
\end_layout

\begin_layout Itemize

\series bold
2PC-RT-NT is out of our interest.
 Its main concern is how to commit nested transactions in distributed systems.
 2PC-RT-NT can work in a flat or hierarchical manner.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "1530682"

\end_inset

 extends 
\begin_inset CommandInset citation
LatexCommand cite
key "1420972"

\end_inset

 to deal with impreciseness in nested transactions.
 (sub)transactions can be essential and non-essentail.
 Essential (sub)transactions have firm deadlines in contrast to non-essential
 (sub)transactions.
 Essential (sub)transactions are favored over non-essential ones.
 Conflict between transactions of the same type is solved by EDF.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "620423"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "620423"

\end_inset

 introduces a new model for nested transactions based on Serialization Graphs
 (SG).
 SG consists of a set of nodes and edges.
 Each node represents a transaction.
 Each edge represents a conflict between two transactions.
 An edge starts from the transaction that should preced the transaction
 at the end of the edge.
 An SG is serializable if it is acyclic.
\end_layout

\begin_layout Standard
Usually, for nested SG, each parent and its children are represented by
 one node.
 So, any conflict between a (sub)transaction and another (sub)transaction
 appears as a conflict between the roots of both (sub)transactions.
 In this model, sub-transactions are 
\begin_inset Quotes eld
\end_inset

illegal
\begin_inset Quotes erd
\end_inset

 transactions (i.e., they lack 
\begin_inset Quotes eld
\end_inset

consistency
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

durability
\begin_inset Quotes erd
\end_inset

 properties).
 In the new model represented by 
\begin_inset CommandInset citation
LatexCommand cite
key "620423"

\end_inset

, only 
\begin_inset Quotes eld
\end_inset

leaf
\begin_inset Quotes erd
\end_inset

 transactions are 
\begin_inset Quotes eld
\end_inset

legal
\begin_inset Quotes erd
\end_inset

 transactions.
 
\begin_inset CommandInset citation
LatexCommand cite
key "620423"

\end_inset

 presents the notion of 
\begin_inset Quotes eld
\end_inset

virtually committment
\begin_inset Quotes erd
\end_inset

 to overcome the error of aborting a parent after committing a child.
 A transaction 
\begin_inset Quotes eld
\end_inset

virtually commits
\begin_inset Quotes erd
\end_inset

 when it completed its work, all transaction it reads from are committed,
 and some of its children have not yet committed.
 When a transaction 
\begin_inset Quotes eld
\end_inset

virtually committs
\begin_inset Quotes erd
\end_inset

, it cannot be aborted.
 A transaction actually committs when it virtually committed and all its
 children have committed.
 This new model allows for more concurrecy than the traditional model for
 nested transactions.
 To avoid deadlock in the new model, a (sub)transaction that writes to a
 parent of sub-transactions, extends edges to these sub-transactions.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "324920"

\end_inset


\end_layout

\begin_layout Standard
useless.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "634461"

\end_inset


\end_layout

\begin_layout Standard
Useless.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "77199"

\end_inset


\end_layout

\begin_layout Standard
Useless.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "316159"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "316159"

\end_inset

 discusses some issues related to nested transactions in DRTBS.
 
\begin_inset CommandInset citation
LatexCommand cite
key "316159"

\end_inset

 presents how deadlines can propagate from parents to children.
 One way is the absolute deadline propagation, in which deadline of the
 child is the same as the parent except for communication delay.
 This approach may not leave enough time for the rest of the parent to finish
 within deadline.
 This problem is solved by the normal propagation approach, in which remaining
 time of the parent is taken into consideration.
 For nested transactions, the normal priority propagation might face priority
 reversal situations.
 The average priority propagation solves this problem by assigning the same
 priority to all sub-transactions in the same family.
 The assigned priority value is the average of the sum of normal (sub)transactio
ns' priorities.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
This part is collected from nested transactional memory papers
\end_layout

\begin_layout Itemize
Some libraries for STM that might include nesting include:
\end_layout

\begin_deeper
\begin_layout Itemize
Tboost.stm
\end_layout

\begin_layout Itemize
SXM
\end_layout

\end_deeper
\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "6267834"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "6267834"

\end_inset

 presents a Reactive Transactional Scheduler (RTS) to schedule closed nested
 transactions in distributed systems.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6267834"

\end_inset

 assumes a data flow model in which objects move to transactional nodes.
 RTS compares between aborting or enqueuing a parent transaction.
 The choice depends on execution length of aborted transaction and contention
 level.
 Enqueuing parent transaction avoids re-requesting objects by child transactions.
 Thus, object communication time is reduced in distributed systems.
 Each enqueued parent transaction is assigned a back-off time after which
 the enqueued transaction aborts.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Points to research
\end_layout

\begin_layout Itemize
Job level dynamic priority for transactions.
\end_layout

\begin_layout Itemize
Multiple objects per transaction.
\end_layout

\begin_layout Itemize
Devide transaction to read and write operations.
\end_layout

\begin_layout Itemize
Integration of locking with transactions.
\end_layout

\begin_layout Itemize
Devide transaction to read phase, verify phase, commit phase.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Data structure implementation affects degree of exploited parallilsm in
 the system 
\begin_inset CommandInset citation
LatexCommand cite
key "shavit2011data"

\end_inset

.
 As the implementation moves from lock-based to non-blocking, more parallilism
 can be exploited.
 Thus, more computation speed-up, but more complex design.
 Things become more complicated when it comes to synchronization under real-time
 multiprocessor systems.
 Real-time systems should meet deadline of each task as much as possible.
 With shared objects, tasks have to execute in a serial order to some degree
 when accessing shared objects.
 The major problem arises when one of the accesses is a 
\shape italic
write
\shape default
 operation.
 Conflict resultion techniques is used to decide how to access these shared
 objects.
 In lock-based systems, tasks try to obtain an object's lock before accessing
 it.
 While in lock-free techniques, some intuition is used to allow tasks to
 simultaneously access the object without violating consistency.
 Different synchronization techniqes affect response time of each task.
 Depending on the rationale of conflict resolution, a task might have to
 wait for all other interfering tasks before it can access the required
 object.
\end_layout

\begin_layout Standard
Here we investigate software transactional memory synchronization under
 multi-processor real-time systems.
 We try to reduce the amount of time each task has to wait before it completes
 work on requires objects.
 Thus, minimizing response time of each task and increasing schedulability.
\end_layout

\begin_layout Subsection
Contribution
\end_layout

\begin_layout Standard
We consider STM for real-time multiprocessor systems under G-EDF and G-RMA
 schedulers.
 Atomic sections can be of arbitrary size.
 Earliest deadline CM (ECM) is re-presented, and another priority-based
 CM (RCM) is developed.
 Length-based CM (LCM) is provided to reduce retry cost of aborted transactions.
 LCM depends not only on priority, but also on relative length of the interferin
g transaction to the remaining length of the interfered transaction.
\end_layout

\begin_layout Standard
Priority-based with Negative values and First access (PNF) CM is developed
 to solve two issues in ECM and RCM: 1) To handle multiple objects per transacti
on efficiently (i.
 e., avoid transitive retry).
 2) To reduce wasted time of processors on retrying transctions.
 We establish upper bounds on retry cost and response time under ECM, RCM,
 LCM and PNF.
 We theorticially and experimentally compare schedulability of developed
 contention managers and retry-loop lock-free synchronization for real-time
 mulitprocessor systems.
 We develope conditions under which each contention manager is prefered.
\end_layout

\begin_layout Section
Past and Related Work
\end_layout

\begin_layout Subsection
Real-Time Lock-free Synchronization
\end_layout

\begin_layout Standard
Transactional-like concurrency control and lock-free synchronization, for
 real-time systems, has been previously studied in (e.g.,
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "anderson95realtime,anderson1997lock,684918,1203552,896371,anderson96framework,811240"

\end_inset

).
 Despite their numerous advantages over locks (e.g., deadlock-freedom), their
 programmability has remained a challenge.
 Past studies show that they are best suited for simple data structures
 where their retry cost is competitive to the cost of lock-based synchronization
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "bc+08,key-5"

\end_inset

.
 In contrast, STM is semantically simpler
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Herlihy:2006:AMP:1146381.1146382"

\end_inset

, and is often the only viable lock-free solution for complex data structures
 (e.g., red/black tree) 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 and nested critical sections 
\begin_inset CommandInset citation
LatexCommand cite
key "Saha:2006:MHP:1122971.1123001,Agrawal:2008:SOT:1378533.1378553,Peri:2011:CCE:1946143.1946152"

\end_inset

.
\end_layout

\begin_layout Subsection
Transactional Memory: Overview 
\end_layout

\begin_layout Standard
Database transactions motivated TM 
\begin_inset CommandInset citation
LatexCommand cite
key "Gray:1981:TCV:1286831.1286846"

\end_inset

.
 In TM, concurrent threads synchronize via transactions when they access
 shared memory.
 A TM transaction is an explicitly delimited sequence of steps executed
 atomically by a thread 
\begin_inset CommandInset citation
LatexCommand cite
key "tm-book10"

\end_inset

.
 Atomicity implies all-or-nothing: the sequence of steps (i.e., reads and
 writes) logically occur at a single instant in time; intermediate states
 are invisible to other transactions.
 The semantic difficulty of locks and the resulting high development and
 maintenance costs have been the driving motivation for seeking alternate
 concurrency control abstractions.
 The design of lock-free and wait-free data structures are one such alternative.
 These approaches are highly performant, but significantly complex to write
 and reason about, and therefore, have largely been limited to a small set
 of basic data structures - e.g., linked lists, queues, stacks 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449,4079519,1656921,Cho:2006:UAP:1141277.1141490"

\end_inset

.
\end_layout

\begin_layout Standard
The term “transactional memory” was proposed by Herlihy and Moss [5], where
 they presented hardware support for lock-free data structures.
 TM has been provided in hardware (HTM) 
\begin_inset CommandInset citation
LatexCommand cite
key "698569,Martinez:2002:SSA:605397.605400,Oplinger:2002:ESR:605397.605417,Rajwar:2002:TLE:605397.605399,ham04"

\end_inset

, software (STM) 
\begin_inset CommandInset citation
LatexCommand cite
key "4145102,Dolev:2008:CSC:1400751.1400769,Harris:2003:LSL:949305.949340,Harris:2005:CMT:1065944.1065952,Cho:2006:UAP:1141277.1141490,Marathe:2004:DTM:1066650.1066660,Yoo:2008:ATS:1378533.1378564,Saha:2006:ASS:1194816.1194838,Shpeisman:2007:EIO:1250734.1250744"

\end_inset

 and hybrid TM 
\begin_inset CommandInset citation
LatexCommand cite
key "dam06,Kumar:2006:HTM:1122971.1123003,Minh:2007:EHT:1250662.1250673,Shriraman:2007:IHA:1250662.1250676"

\end_inset

.
 Hybrid TM allows STM to exploit any available HTM support to improve performanc
e.
 One basic problem in STM is how to correctly and efficiently resolve conflicts
 when multiple threads access one shared objects simultaneously and at least
 one writes inot it.
 Generally, a contention manager (CM) is responsible to ensure that all
 transactions eventually commit.
 CM decides which transaction to delay or abort and when to restart the
 aborted transaction in case of conflicts 
\begin_inset CommandInset citation
LatexCommand cite
key "Spear:2009:CSC:1504176.1504199,Scherer:2005:ACM:1073814.1073861,Blake:2009:PTS:1669112.1669133,Maldonado:2010:SST:1693453.1693465"

\end_inset

.
\end_layout

\begin_layout Subsection
Real-Time Database Transactions
\end_layout

\begin_layout Standard
As database transactions motivated TM 
\begin_inset CommandInset citation
LatexCommand cite
key "Gray:1981:TCV:1286831.1286846"

\end_inset

.
 Real-time database has a lot of inspiration on real-time transactional
 memory 
\begin_inset CommandInset citation
LatexCommand cite
key "real-time-data-base-systems-book"

\end_inset

.
 Real-time database is not concerned only with consistency, but also with
 timing constraints.
 When there is a conflict, lower priority transaction is aborted if it is
 abortable, or may cause excessive blocking to any higher priority transaction
 
\begin_inset CommandInset citation
LatexCommand cite
key "liang2003quantification,liang1996bap,lam1997concurrency"

\end_inset

.
 Blocking time can be estimated by on-line or off-line schedulers.
 
\begin_inset CommandInset citation
LatexCommand cite
key "liang2003quantification"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "liang1996bap"

\end_inset

 proposed a framework for trading abort cost with the blocking cost of transacti
ons.
 
\begin_inset CommandInset citation
LatexCommand cite
key "xian2009data"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "chen2002efficient"

\end_inset

 present a number of transaction scheduling strategies.
 These strategies include ED (Earliest Deadline), HV (Highest Value), HRU
 (Highest Reward and Urgency), and FHR (Flexible High Reward).
 
\begin_inset CommandInset citation
LatexCommand cite
key "tseng1997adaptive"

\end_inset

 schedules transactions on multiprocessor system based on both slack time
 and value assigned to each transaction.
 So, it tries to acheive the highest possible value of completed transactions
 and meat as much deadlines as possible.
 
\begin_inset CommandInset citation
LatexCommand cite
key "yuehua2010new"

\end_inset

 combines EDF with LSF (Least Slack First) to compute transaction priorities.
 These scheduling strategies specify which transaction to commit first.
\end_layout

\begin_layout Subsection
Real-Time STM
\end_layout

\begin_layout Standard
As TM is inspired from database transactions 
\begin_inset CommandInset citation
LatexCommand cite
key "Gray:1981:TCV:1286831.1286846"

\end_inset

, TM in real-time systems also has a lot of inspiration from real-time database
 sy.
 STM concurrency control for real-time systems has been previously studied
 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "manson2006preemptible,fahmy2009bounding,sarni2009real,schoeberl2010rttm,barrosmanaging,6045438,fahmy2009response"

\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "manson2006preemptible"

\end_inset

 proposes a restricted version of STM for uniprocessors.
 
\begin_inset CommandInset citation
LatexCommand cite
key "fahmy2009response"

\end_inset

 considers STM for distributed uni-processor systems.
 A higher priority task causes only one retry in a lower prirority tasks
 due to the uni-prcessor.
 
\begin_inset CommandInset citation
LatexCommand cite
key "fahmy2009bounding"

\end_inset

 bounds response times in distributed multiprocessor systems with STM synchroniz
ation.
 They consider Pfair scheduling, limit to small atomic regions with fixed
 size, and limit transaction execution to span at most two quanta.
 
\begin_inset CommandInset citation
LatexCommand cite
key "sarni2009real"

\end_inset

 presents real-time scheduling of transactions and serializes transactions
 based on transactions' - not jobs'- deadlines.
 However, the work does not bound retries and response times, nor establishes
 tradeoffs against lock-free synchronization.
 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

 proposes real-time HTM.
 The retry bound developed in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

 assumes that the worst case conflict between atomic sections of different
 tasks occurs when the sections are released at the same time.
 This assmuption deos not cover the worst case scenario for transactions'
 interference.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 presents earliest-deadline CM or ECM.
 ECM resolves conflicts by aborting the transaction with longer absoluted
 deadline.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 derives a number of properties for ECM, upper bounds transactional retrys,
 and compares schedulability of ECM to retry-loop lock-free synchronization
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

, like 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

, assumes that the worst case conflict between atomic sections occurs when
 the sections are released simultaneously.
 Besides, 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 assumes all transactions have equal lengths.
 
\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

 presents extend idea in 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 to bound number of retries and prevent starvation.
 
\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

 presents three ideas for CMs.
 However, work in 
\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

 is still in progress.
 Provided algorithms might not give the planned results because they are
 not analyzed.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Some synchronization protocols 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="24" columns="11">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="4cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="1.5cm">
<column alignment="center" valignment="middle" width="1.5cm">
<column alignment="center" valignment="middle" width="1.5cm">
<column alignment="center" valignment="middle" width="1.5cm">
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" leftline="true" rotate="true" usebox="none" width="1.5cm">
\begin_inset Text

\begin_layout Plain Layout

\size small
Multiprocessor
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nesting
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spin_lock or Semaphore
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Protocol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Uniprocessor
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Global
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" width="1.5cm">
\begin_inset Text

\begin_layout Plain Layout

\size small
Partitioned
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clustered
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
G-EDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PFair
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Others
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
P-EDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Static 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Others
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PCP
\begin_inset CommandInset citation
LatexCommand cite
key "chen1990dynamic"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP
\begin_inset CommandInset citation
LatexCommand cite
key "baker1991stack"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PCP variant
\begin_inset CommandInset citation
LatexCommand cite
key "Rajkumar:1991:SRS:532621,sha1990priority"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not for global resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
MPCP
\begin_inset CommandInset citation
LatexCommand cite
key "lakshmanan2009coordinated,rajkumar2002real"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DPCP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not for global resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
DPCP
\begin_inset CommandInset citation
LatexCommand cite
key "rajkumar2002real-2"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not for global resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "chen1998multiprocessor"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP implementation
\begin_inset CommandInset citation
LatexCommand cite
key "lopez2004utilization"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP implementation
\begin_inset CommandInset citation
LatexCommand cite
key "gai2003comparison"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MSRP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not for global resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006locking"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PPCP
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PIP
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
FMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-4,brandenburg2008implementation,holman2006locking"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

(GSN-EDF)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

(PSN-EDF)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Both
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
OMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

JLSP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center

\size small
\begin_inset Formula $\checkmark$
\end_inset

JLSP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
task-fair mutex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
task-fair RW lock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
read-preference lock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
write-preference lock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase-fair RW lock
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
spin
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "global_bibliography/global_bibliography"
options "plain"

\end_inset


\end_layout

\begin_layout Section
STM vs.
 real-time locking protocols
\end_layout

\begin_layout Standard
Schedulabilty of real-time STM is compared against real-time locking protocols
 using total utilization.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s10617-012-9090-1,key-3,6257574,nurtlwib"

\end_inset

, priority inversion bound (
\shape italic
pi-blocking
\shape default
) is considered part of each task's execution time.
 Thus, each task's WCET is inflated by 
\shape italic
pi-blocking
\shape default
 bounds.
 Similarly, under different CMs, each task's WCET is inflated by its retry
 cost plus any other delays caused by the specified CM
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

.
 So, schedulability of a specific STM CM algorithm 
\begin_inset Formula $A$
\end_inset

 is compared against a real-time locking protocol 
\begin_inset Formula $B$
\end_inset

 as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{A}(T_{i})+D_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{c_{i}+PI_{B}(T_{i})}{T_{i}}\label{eq:stm_vs_locking_protocol}
\end{eqnarray}

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stm_vs_locking_protocol"

\end_inset

 holds if 
\begin_inset Formula 
\begin{equation}
\forall\tau_{i},\, RC_{A}(T_{i})+D_{A}(T_{i})\le PI_{B}(T_{i})\label{eq:job_stm_vs_locking_protocol}
\end{equation}

\end_inset

If 
\begin_inset Formula $\tau_{i}$
\end_inset

 has no critical sections, then 
\begin_inset Formula $RC_{A}(T_{i})+D_{A}(T_{i})=PI_{B}(T_{i})=0$
\end_inset

.
 Thus, independent tasks have the same effect in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stm_vs_locking_protocol"

\end_inset

) and they will not be considered in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

).
\end_layout

\begin_layout Subsection
CMs vs.
 Global OMLP
\end_layout

\begin_layout Standard
Under Global OMLP
\begin_inset CommandInset citation
LatexCommand cite
key "springerlink:10.1007/s10617-012-9090-1,key-3"

\end_inset

, 
\begin_inset Formula $PI(T_{i})$
\end_inset

 for any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is upper bounded by 
\begin_inset Formula 
\begin{equation}
PI(T_{i})\le\sum_{k=1}^{n_{r}}N_{i,k}(2m-1)L_{max}\label{eq:pi_omlp}
\end{equation}

\end_inset

where 
\begin_inset Formula $n_{r}$
\end_inset

 is total number of resources, 
\begin_inset Formula $N_{i,k}$
\end_inset

 is maximum number of times resource 
\begin_inset Formula $k$
\end_inset

 is accessed by 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $L_{max}$
\end_inset

 is the maximum length critical section in all tasks.
 Let 
\begin_inset Formula $N_{i}=\sum_{k=1}^{n_{r}}N_{i,k}$
\end_inset

, which is the total number of critical sections in any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp"

\end_inset

) becomes 
\begin_inset Formula 
\begin{equation}
PI(T_{i})\le N_{i}(2m-1)L_{max}\label{eq:pi_omlp-1}
\end{equation}

\end_inset

Let 
\begin_inset Formula $N_{max}=max\left\{ N_{i}:\forall1\le i\le N\right\} $
\end_inset

, 
\begin_inset Formula $N_{min}=min\left\{ N_{i}:\forall1\le i\le N\right\} $
\end_inset

, 
\begin_inset Formula $\Phi_{max}=max$
\end_inset

.
 As independent tasks are not considered in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

), 
\begin_inset Formula $\therefore\, N_{max},\, N_{min}\ge1$
\end_inset

.
\end_layout

\begin_layout Standard
OMLP uses group locking to access multiple (i.e., nested) resources in a critical
 section.
 Thus, to enable schedulability comparison between OMLP and different CMs,
 it is assumed that each transaction (critical section) accesses only one
 resource.
 So, there will be no transitive retry in CMs.
 Thus, 
\begin_inset Formula $\bar{s_{j}^{k}}$
\end_inset

, 
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset

 and 
\begin_inset Formula $\theta_{i}^{ex}$
\end_inset

 will be replaced by 
\begin_inset Formula $s_{j}^{k}$
\end_inset

, 
\begin_inset Formula $\gamma_{i}$
\end_inset

 and 
\begin_inset Formula $\theta_{i}$
\end_inset

 .
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:CMs-vs.-RNLP"

\end_inset

 investigates comparison between different CMs and fine-grained locking
 protocols (i.e., RNLP) to access multiple resources in a transaction (critical
 section).
\end_layout

\begin_layout Subsubsection
ECM vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:ecm_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of ECM is equal or better
 than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(2N_{max}+1\right)(n-1)\Phi_{max}}\label{eq:ecm_omlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of ECM
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

, 
\begin_inset Formula $D_{ECM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall s_{j}^{k}(\theta)}len\left(s_{j}^{k}(\theta)+s_{max}^{j}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:ecm_omlp_cmp_1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge len\left(s_{j}^{k}(\theta)\right),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(2\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:ecm_omlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{s_{j}^{k}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)}\label{eq:ecm_omlp_cmp_3}
\end{eqnarray}

\end_inset

According to definition of ECM, any 
\begin_inset Formula $\tau_{j}\in\gamma_{i}$
\end_inset

 also belongs to 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore\, n>|\zeta_{i}|\ge|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\Phi_{max}N_{max}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(2N_{max}+1\right)(n-1)\Phi_{max}}\label{eq:ecm_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
RCM vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:rcm_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of RCM is equal or better
 than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(2\left(\Phi_{max}+1\right)N_{max}+\Phi_{max}\right)(n-1)}\label{eq:rcm_omlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of RCM
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

, 
\begin_inset Formula $D_{RCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall s_{j}^{k}(\theta)}len\left(s_{j}^{k}(\theta)+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:rcm_omlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge s_{j}^{k}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(2\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:rcm_omlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{s_{j}^{k}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)}\label{eq:rcm_omlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\therefore\, n>|\tau_{j}^{*}|\ge|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}^{*}}\left(\left(\Phi_{max}+1\right)N_{max}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(2\left(\Phi_{max}+1\right)N_{max}+\Phi_{max}\right)(n-1)}\label{eq:rcm_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
G-EDF/LCM vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:lcm_gedf_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\alpha_{max}=max\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

, 
\begin_inset Formula $\alpha_{min}=min\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

.
 Under globally scheduled systems, schedulability of G-EDF/LCM is equal
 or better than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}N_{max}\right)+N_{max}\left(1-\alpha_{min}\right)+(n-1)\Phi_{max}}\label{eq:lcm_gedf_omlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of LCM
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

, 
\begin_inset Formula $D_{LCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall s_{j}^{k}(\theta)}len\left(s_{j}^{k}(\theta)+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)\right)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_gedf_omlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 is the maximum 
\begin_inset Formula $\alpha$
\end_inset

 caused by interference of any transaction in 
\begin_inset Formula $\tau_{l}$
\end_inset

 by any transaction in 
\begin_inset Formula $\tau_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge s_{j}^{k}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\alpha_{max}\ge\alpha_{max}^{jl}$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_gedf_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula $\forall\,\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_edf_omlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{s_{j}^{k}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_edf_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)}\label{eq:lcm_edf_omlp_cmp_3}
\end{eqnarray}

\end_inset

According to definition of LCM, any 
\begin_inset Formula $\tau_{j}\in\gamma_{i}$
\end_inset

 also belongs to 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore\, n>|\zeta_{i}|\ge|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j},\, N_{i}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_edf_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\Phi_{max}N_{max}\right)\right)+N_{max}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}N_{max}\right)+N_{max}\left(1-\alpha_{min}\right)+(n-1)\Phi_{max}}\label{eq:lcm_edf_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
G-RMA/LCM vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:lcm_grma_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\alpha_{max}=max\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

, 
\begin_inset Formula $\alpha_{min}=min\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

.
 Under globally scheduled systems, schedulability of G-RMA/LCM is equal
 or better than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}+1\right)N_{max}+N_{max}\left(1-\alpha_{min}\right)+\left((n-1)\Phi_{max}\right)}\label{eq:lcm_grma_omlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of LCM
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

, 
\begin_inset Formula $D_{LCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall s_{j}^{k}(\theta)}len\left(s_{j}^{k}(\theta)+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_grma_omlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge s_{j}^{k}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_grma_omlp_cmp_2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{s_{j}^{k}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)}\label{eq:lcm_grma_omlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, n>|\tau_{j}^{*}|\ge|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j},\, N_{i}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}}\left(\left(\Phi_{max}+1\right)N_{max}\right)\right)+N_{max}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}+1\right)N_{max}+N_{max}\left(1-\alpha_{min}\right)+\left((n-1)\Phi_{max}\right)}\label{eq:lcm_grma_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PNF vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:pnf_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of PNF is equal or better
 than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}\left(\frac{1}{m}+1\right)}\label{eq:pnf_omlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (3) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 Substitute 
\begin_inset Formula $D_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (4) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

.
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall s_{j}^{k}(\theta)}len\left(s_{j}^{k}(\theta)\right)\right)\right)+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor \nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:pnf_omlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\bar{\tau_{j}^{l}}=\{\tau_{j}^{l}:p_{j}^{l}<p_{i}^{x}\}$
\end_inset

 and 
\begin_inset Formula $\ddot{s_{j}^{h}}=\{s_{j}^{h}:s_{j}^{h}\, does\, not\, conflict\, with\, any\, s_{i}^{k}\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta)$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(N_{j}-N_{i,j}\right)\right)\right\rfloor \right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:pnf_omlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{s_{j}^{k}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 By definition of 
\begin_inset Formula $N_{j}$
\end_inset

 and 
\begin_inset Formula $N_{i,j}$
\end_inset

, 
\begin_inset Formula $|\ddot{s_{j}^{h}}|=N_{j}-N_{i,j}$
\end_inset

.
 By definition of 
\begin_inset Formula $\bar{\tau_{j}^{l}}$
\end_inset

, 
\begin_inset Formula $|\bar{\tau_{j}^{l}}|\le n-1$
\end_inset

.
 So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(N_{j}-N_{i,j}\right)\right)\right\rfloor }\label{eq:pnf_omlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, n>|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}+\left\lfloor \frac{1}{m}(n-1)\left(\Phi_{max}+1\right)N_{max}\right\rfloor }\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}+\frac{1}{m}(n-1)\left(\Phi_{max}+1\right)N_{max}}\nonumber \\
 & = & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}\left(\frac{1}{m}+1\right)}\label{eq:pnf_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
FBLT vs.
 Global OMLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_vs_omlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\delta_{max}$
\end_inset

 be the maximum 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for any transaction in any task.
 Under globally scheduled systems, schedulability of FBLT is equal or better
 than schedulability of Global OMLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{2m-1}{\delta_{max}+m-1+\left(\frac{n-1}{N_{min}}\right)\Phi_{max}}\label{eq:fblt_omlp_cmp_final-1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (1) in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pi_omlp-1"

\end_inset

) respectively.
 Substitute 
\begin_inset Formula $D_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (2) in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

,
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{\forall s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} +RC_{re}(T_{i})\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:fblt_omlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\chi_{i}^{k}$
\end_inset

 is the set of at most 
\begin_inset Formula $m-1$
\end_inset

 maximum length transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 is given by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-EDF and (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-RMA.
 Thus, 
\begin_inset Formula $RC_{re}(T_{i})\le\sum_{\forall\tau_{j}\neq\tau_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)$
\end_inset

 for both G-EDF and G-RMA.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge len(s_{iz}^{k}),\, s_{i_{max}},\, s_{j_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_omlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
 & \left(N_{i}\left(\delta_{max}+m-1\right)+m+(n-1)\Phi_{max}\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:fblt_omlp_cmp_2}
\end{eqnarray}

\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_omlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{N_{i}\left(\delta_{max}+m-1\right)+m+(n-1)\Phi_{max}}\nonumber \\
 & = & \frac{2m-1}{\delta_{max}+m-1+\frac{m}{N_{i}}+\left(\frac{n-1}{N_{i}}\right)\Phi_{max}}\label{eq:fblt_omlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, N_{min}\le N_{i}$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_omlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{2m-1}{\delta_{max}+m-1+\left(\frac{n-1}{N_{min}}\right)\Phi_{max}}\label{eq:fblt_omlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "global_bibliography/global_bibliography"
options "plain"

\end_inset


\end_layout

\begin_layout Subsection
CMs vs.
 Global RNLP
\begin_inset CommandInset label
LatexCommand label
name "sub:CMs-vs.-RNLP"

\end_inset


\end_layout

\begin_layout Standard
Under RNLP
\begin_inset CommandInset citation
LatexCommand cite
key "6257574"

\end_inset

 for global scheduling and I-KGLP (introduced as R
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

DGLP in 
\begin_inset CommandInset citation
LatexCommand cite
key "6300160"

\end_inset

) token lock, 
\begin_inset Formula $PI(T_{i})$
\end_inset

 for any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is upper bounded by 
\begin_inset Formula $\left(2m-1\right)L_{max}$
\end_inset

 for each outermost request, where 
\begin_inset Formula $L_{max}$
\end_inset

 is the maximum length of any outermost request.
 Thus, if 
\begin_inset Formula $N_{i}$
\end_inset

 is total number of outermost critical sections in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, then 
\begin_inset Formula 
\begin{equation}
PI_{RNLP}(T_{i})=N_{i}(2m-1)L_{max}\label{eq:rnlp_pi}
\end{equation}

\end_inset

Let 
\begin_inset Formula $N_{max}=max\left\{ N_{i}:\forall1\le i\le N\right\} $
\end_inset

, 
\begin_inset Formula $N_{min}=min\left\{ N_{i}:\forall1\le i\le N\right\} $
\end_inset

, 
\begin_inset Formula $\Phi_{max}=max$
\end_inset

.
 As independent tasks are not considered in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

), 
\begin_inset Formula $\therefore\, N_{max},\, N_{min}\ge1$
\end_inset

.
\end_layout

\begin_layout Subsubsection
ECM vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:ecm_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of ECM is equal or better
 than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(2N_{max}+1\right)(n-1)\Phi_{max}}\label{eq:ecm_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of ECM
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

, 
\begin_inset Formula $D_{ECM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:ecm_rnlp_cmp_1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(2\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:ecm_rnlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{\bar{s_{j}^{k}}(\theta)|\theta\in\theta_{i}^{ex})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)}\label{eq:ecm_rnlp_cmp_3}
\end{eqnarray}

\end_inset

According to definition of ECM, any 
\begin_inset Formula $\tau_{j}\in\gamma_{i}^{ex}$
\end_inset

 also belongs to 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore\, n>|\zeta_{i}|\ge|\gamma_{i}^{ex}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ecm_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\Phi_{max}N_{max}\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(2N_{max}+1\right)(n-1)\Phi_{max}}\label{eq:ecm_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
RCM vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:rcm_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of RCM is equal or better
 than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(2\left(\Phi_{max}+1\right)N_{max}+\Phi_{max}\right)(n-1)}\label{eq:rcm_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of RCM
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

, 
\begin_inset Formula $D_{RCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:rcm_rnlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(2\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:rcm_rnlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{\bar{s_{j}^{k}}(\theta)|\theta\in\theta_{i}^{ex})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)}\label{eq:rcm_rnlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\therefore\, n>|\tau_{j}^{*}|\ge|\gamma_{i}^{ex}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rcm_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{2\left(\sum_{\forall\tau_{j}^{*}}\left(\left(\Phi_{max}+1\right)N_{max}\right)\right)+\left(\sum_{\forall\tau_{j}^{*}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(2\left(\Phi_{max}+1\right)N_{max}+\Phi_{max}\right)(n-1)}\label{eq:rcm_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
G-EDF/LCM vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:lcm_gedf_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\alpha_{max}=max\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

, 
\begin_inset Formula $\alpha_{min}=min\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

.
 Under globally scheduled systems, schedulability of G-EDF/LCM is equal
 or better than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}N_{max}\right)+N_{max}\left(1-\alpha_{min}\right)+(n-1)\Phi_{max}}\label{eq:lcm_gedf_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of LCM
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

, 
\begin_inset Formula $D_{LCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)\right)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_gedf_rnlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 is the maximum 
\begin_inset Formula $\alpha$
\end_inset

 caused by interference of any transaction in 
\begin_inset Formula $\tau_{l}$
\end_inset

 by any transaction in 
\begin_inset Formula $\tau_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\alpha_{max}\ge\alpha_{max}^{jl}$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_gedf_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula $\forall\,\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_edf_rnlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{\bar{s_{j}^{k}}(\theta)|\theta\in\theta_{i}^{ex})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_edf_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor \right)}\label{eq:lcm_edf_rnlp_cmp_3}
\end{eqnarray}

\end_inset

According to definition of LCM, any 
\begin_inset Formula $\tau_{j}\in\gamma_{i}^{ex}$
\end_inset

 also belongs to 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore\, n>|\zeta_{i}|\ge|\gamma_{i}^{ex}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j},\, N_{i}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_edf_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left(\Phi_{max}N_{max}\right)\right)+N_{max}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}N_{max}\right)+N_{max}\left(1-\alpha_{min}\right)+(n-1)\Phi_{max}}\label{eq:lcm_edf_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
G-RMA/LCM vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:lcm_grma_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\alpha_{max}=max\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

, 
\begin_inset Formula $\alpha_{min}=min\left\{ \alpha_{ij}^{kl},\,\forall i,\, j,\, k,\, l\right\} $
\end_inset

.
 Under globally scheduled systems, schedulability of G-RMA/LCM is equal
 or better than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}+1\right)N_{max}+N_{max}\left(1-\alpha_{min}\right)+\left((n-1)\Phi_{max}\right)}\label{eq:lcm_grma_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of LCM
\begin_inset CommandInset citation
LatexCommand cite
key "lcmdac2012"

\end_inset

, 
\begin_inset Formula $D_{LCM}(T_{i})=0,\,\forall\tau_{i}$
\end_inset

.
 Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+\alpha_{max}^{jl}s_{max}^{j}(\theta)\right)+\sum_{\forall s_{i}^{y}}\left(1-\alpha_{max}^{iy}\right)len(s_{max}^{i})+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_grma_rnlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta),\, s_{max}^{j}(\theta),\, s_{i_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:lcm_grma_rnlp_cmp_2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{\bar{s_{j}^{k}}(\theta)|\theta\in\theta_{i}^{ex})\}|$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\left(\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}\right)\right)+N_{i}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \right)\right)}\label{eq:lcm_grma_rnlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, n>|\tau_{j}^{*}|\ge|\gamma_{i}^{ex}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j},\, N_{i}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \ge\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm_grma_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)\left(\sum_{\forall\tau_{j}^{*}}\left(\left(\Phi_{max}+1\right)N_{max}\right)\right)+N_{max}\left(1-\alpha_{min}\right)+\left(\sum_{\forall\tau_{j}^{*}}\Phi_{max}\right)}\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{\left(1+\alpha_{max}\right)(n-1)\left(\Phi_{max}+1\right)N_{max}+N_{max}\left(1-\alpha_{min}\right)+\left((n-1)\Phi_{max}\right)}\label{eq:lcm_grma_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PNF vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:pnf_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Under globally scheduled systems, schedulability of PNF is equal or better
 than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}\left(\frac{1}{m}+1\right)}\label{eq:pnf_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (3) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 Substitute 
\begin_inset Formula $D_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (4) in 
\begin_inset CommandInset citation
LatexCommand cite
key "pnf_dac_asp"

\end_inset

.
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)\right)+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor \nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:pnf_rnlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\bar{\tau_{j}^{l}}=\{\tau_{j}^{l}:p_{j}^{l}<p_{i}^{x}\}$
\end_inset

 and 
\begin_inset Formula $\ddot{s_{j}^{h}}=\{s_{j}^{h}:s_{j}^{h}\, does\, not\, conflict\, with\, any\, s_{i}^{k}\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge\bar{s_{j}^{k}}(\theta)$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
 & \left(\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(N_{j}-N_{i,j}\right)\right)\right\rfloor \right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:pnf_rnlp_cmp_2}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $N_{i,j}$
\end_inset

 is maximum number of transactions in any job of 
\begin_inset Formula $\tau_{j}$
\end_inset

 conflicting with any transaction in any job of 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,j}=|\{\bar{s_{j}^{k}}(\theta)|\theta\in\theta_{i})\}|$
\end_inset

.
 By definition of 
\begin_inset Formula $N_{j}$
\end_inset

 and 
\begin_inset Formula $N_{i,j}$
\end_inset

, 
\begin_inset Formula $|\ddot{s_{j}^{h}}|=N_{j}-N_{i,j}$
\end_inset

.
 By definition of 
\begin_inset Formula $\bar{\tau_{j}^{l}}$
\end_inset

, 
\begin_inset Formula $|\bar{\tau_{j}^{l}}|\le n-1$
\end_inset

.
 So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)N_{i,j}+\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(N_{j}-N_{i,j}\right)\right)\right\rfloor }\label{eq:pnf_rnlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, n>|\gamma_{i}|$
\end_inset

.
 
\begin_inset Formula $\because\, N_{max}\ge N_{i,j}$
\end_inset

, 
\begin_inset Formula $N_{min}\le N_{i}$
\end_inset

 and 
\begin_inset Formula $\Phi_{max}\ge\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pnf_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}+\left\lfloor \frac{1}{m}(n-1)\left(\Phi_{max}+1\right)N_{max}\right\rfloor }\nonumber \\
 & \le & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}+\frac{1}{m}(n-1)\left(\Phi_{max}+1\right)N_{max}}\nonumber \\
 & = & \frac{N_{min}\left(2m-1\right)}{(n-1)\left(\Phi_{max}+1\right)N_{max}\left(\frac{1}{m}+1\right)}\label{eq:pnf_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
FBLT vs.
 RNLP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:fblt_vs_rnlp}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\delta_{max}$
\end_inset

 be the maximum 
\begin_inset Formula $\delta_{i}^{k}$
\end_inset

 for any transaction in any task.
 Under globally scheduled systems, schedulability of FBLT is equal or better
 than schedulability of RNLP if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{2m-1}{\delta_{max}+m-1+\left(\frac{n-1}{N_{min}}\right)\Phi_{max}}\label{eq:fblt_rnlp_cmp_final}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $PI_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (1) in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rnlp_pi"

\end_inset

) respectively.
 Substitute 
\begin_inset Formula $D_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) by (2) in 
\begin_inset CommandInset citation
LatexCommand cite
key "fblt"

\end_inset

,
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:job_stm_vs_locking_protocol"

\end_inset

) holds if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall s_{i}^{k}\in s_{i}}\left(\delta_{i}^{k}len(s_{i}^{k})+\sum_{\forall s_{iz}^{k}\in\chi_{i}^{k}}len(s_{iz}^{k})\right)+\sum_{max\_m}\left\{ s_{j_{max},\forall\tau_{j}^{l},\, p_{j}^{l}<p_{i}^{x}}\right\} +RC_{re}(T_{i})\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:fblt_rnlp_cmp_1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\chi_{i}^{k}$
\end_inset

 is the set of at most 
\begin_inset Formula $m-1$
\end_inset

 maximum length transactions conflicting directly or indirectly (through
 transitive retry) with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 
\begin_inset Formula $RC_{re}(T_{i})$
\end_inset

 is given by (6.7) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-EDF and (6.9) in 
\begin_inset CommandInset citation
LatexCommand cite
key "shambake_phd_proposal"

\end_inset

 for G-RMA.
 Thus, 
\begin_inset Formula $RC_{re}(T_{i})\le\sum_{\forall\tau_{j}\neq\tau_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)$
\end_inset

 for both G-EDF and G-RMA.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, s_{max}\ge len(s_{iz}^{k}),\, s_{i_{max}},\, s_{j_{max}}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rnlp_cmp_1"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
 & \left(N_{i}\left(\delta_{max}+m-1\right)+m+(n-1)\Phi_{max}\right)s_{max}\nonumber \\
\le & N_{i}\left(2m-1\right)L_{max}\label{eq:fblt_rnlp_cmp_2}
\end{eqnarray}

\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rnlp_cmp_2"

\end_inset

) holds if 
\begin_inset Formula $\forall\tau_{i}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{N_{i}\left(2m-1\right)}{N_{i}\left(\delta_{max}+m-1\right)+m+(n-1)\Phi_{max}}\nonumber \\
 & = & \frac{2m-1}{\delta_{max}+m-1+\frac{m}{N_{i}}+\left(\frac{n-1}{N_{i}}\right)\Phi_{max}}\label{eq:fblt_rnlp_cmp_3}
\end{eqnarray}

\end_inset


\begin_inset Formula $\because\, N_{min}\le N_{i}$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fblt_rnlp_cmp_3"

\end_inset

) holds if 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{L_{max}} & \le & \frac{2m-1}{\delta_{max}+m-1+\left(\frac{n-1}{N_{min}}\right)\Phi_{max}}\label{eq:fblt_rnlp_cmp_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Checkpointing
\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "Koskinen:2008:CCI:1378533.1378563"

\end_inset

 introduces checkpointing as an alternative to closed nesting transactions
\begin_inset CommandInset citation
LatexCommand cite
key "turcu2012closed"

\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Koskinen:2008:CCI:1378533.1378563"

\end_inset

 uses boosted transactions 
\begin_inset CommandInset citation
LatexCommand cite
key "Herlihy:2008:TBM:1345206.1345237"

\end_inset

 instead of closed nesting 
\begin_inset CommandInset citation
LatexCommand cite
key "Peri:2011:CCE:1946143.1946152,turcu2012closed,6267834"

\end_inset

 to implement checkpointing.
 Booseted transactions are based on linearizable objects with abstract states
 and concrete implementation.
 Methods unders boosted transaction have well defined semantics to transit
 objects from one state to another.
 Inverse methods are used to restore objects to previous states.
 Upon a conflict, a transaction does not need to revert to its beginning,
 but rather to a point where the conflict can be avoided.
 Thus, checkpointing enables partial abort.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "turcu_phd_proposal"

\end_inset

 applies check pointing in distributed transactional memory using Hyflow
 
\begin_inset CommandInset citation
LatexCommand cite
key "Saad:2011:HHP:1996130.1996167"

\end_inset

.
 Checkpointing showed performance improvement compared to flat transactions.
\end_layout

\begin_layout Itemize

\series bold
AN IMPORTANT QUESTION IS WHERE TO MARK CHECKPOINTS? A CHECKPOINT CAN BE
 RECORDED AFTER EACH 
\begin_inset Quotes eld
\end_inset

WRITE
\begin_inset Quotes erd
\end_inset

 OPERATION, BUT THIS IS FINE-GRAINED AND IT IS NOT RECOMMENDED IN THE PAPER.
 ACTUALLY, IN MY ANALYSIS, RECORDING A CHECKPOINT OF EACH WRITE/READ OPERATION
 FOR A NEW OBJECT IS WHAT I DO.
 THIS IS EASILY IMPLEMENTED IN VERSION 5 OF RSTM, BECAUSE RSTM CHECKS IF
 THE REQUESTD OBJECT IS TO BE ACCESSED FOR THE FIRST TIME OR NOT.
 CHECKPOINTING IS IMPELEMNTED USING SETJMP/LONGJMP.
\end_layout

\begin_layout Subsection
Retry cost
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\backslash
label{clm:basic rc}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $BAS\_RC_{ij}^{kl}=len\left(s_{j}^{l}\right)+S\left(s_{j}^{l}\right)-\left(s_{i}^{k}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "global_bibliography/global_bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
