#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[ruled]{algorithm2e}
\newtheorem{clm}{Claim}
\newtheorem{mydef}{Definition}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Response Time Analysis of G-EDF and G-RMA based Multiprocessors with Contention
 Manager
\end_layout

\begin_layout Author
Mohammed Elshambakey, Binoy Ravindran
\end_layout

\begin_layout Abstract
This paper addresses the the problem of response time analysis of multiprocessor
 systems scheduled with G-EDF and G-RMA with synchronization handled by
 STM.
 Three types of contention managers are used; EDF CM with G-EDF systems,
 RMA CM with G-RMA systems, and FIFO CM with both G-RMA and G-EDF systems.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Not finished.
\end_layout

\begin_layout Section
Notations
\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="42" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="15cm">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left
Task 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}^{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $j^{th}$
\end_inset

 Instance (job) of task 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t(T_{i})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minumum period of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $D(T_{i})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relative deadline of any instance of 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $r(T_{i}^{j})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Release time of job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d(T_{i}^{j})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Absolute deadline of 
\begin_inset Formula $T_{i}^{j}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WCET of any instance of 
\begin_inset Formula $T_{j}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p(T_{i})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left
Priority of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\zeta_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks with shorter relative deadline than 
\begin_inset Formula $D_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $c_{ji}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The new WCET of 
\begin_inset Formula $T_{j}$
\end_inset

 relative to the studied task 
\begin_inset Formula $T_{i}$
\end_inset

.
 This length changes according to the studied task.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
An object that can be accessed by any task.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of objects accessed by 
\begin_inset Formula $T_{i}$
\end_inset

 without repeatition.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks that share object 
\begin_inset Formula $\theta$
\end_inset

 with 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of tasks that share objects with 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections of 
\begin_inset Formula $T_{i}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections in all tasks that share object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The 
\begin_inset Formula $k^{th}$
\end_inset

 atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 that accesses object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The 
\begin_inset Formula $k^{th}$
\end_inset

 atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 regrdless of which object it accesses.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $len(s_{i}^{k}(\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $len(s_{i}(\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sum of all atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{max}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum atomic section in all tasks that share object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum atomic section in 
\begin_inset Formula $T_{i}$
\end_inset

 that accesses object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $s_{max}^{i}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The maximum atomic section in all tasks with priority lower than or equal
 to that of 
\begin_inset Formula $T_{i}$
\end_inset

 that share object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $W_{i}^{p}(s_{j}^{k}(\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contribution or workload by 
\begin_inset Formula $s_{j}^{k}(\theta)$
\end_inset

 in the retrial cost of 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC(T_{i})$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum transactional retrial cost of atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 due to conflict between atomic sections.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC(L(T_{i}))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The same as 
\begin_inset Formula $RC(T_{i})$
\end_inset

 but calculated only in a period of length 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC(t(T_{i}))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The same as 
\begin_inset Formula $RC(T_{i})$
\end_inset

 over the whole 
\begin_inset Formula $t(T_{i})$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $G_{ij}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of interferences made by 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 during period of length 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $W_{ij}(L)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align left
Workload contributed by 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 during period of length 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s\_\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A short resource.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $l\_\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A long resource.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g(s\_\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A group containing only short resource.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g(l\_\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A group containing only long resources.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R_{k}(g(s\_\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(s\_\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R_{k}(g(l\_\theta))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(l\_\theta)$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|R_{k}(g(s\_\theta))|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The size of the request and it equals the sum of all nested accesses to
 resources in 
\begin_inset Formula $g(s\_\theta)$
\end_inset

 made by 
\begin_inset Formula $T_{k}$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $|R_{k}(g(l\_\theta))|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The sum of nested requests by 
\begin_inset Formula $T_{k}$
\end_inset

 to the group containing 
\begin_inset Formula $l\_\theta$
\end_inset

, plus 
\begin_inset Formula $max_{s\_\theta\in\theta_{k}}[\sum_{h=1,h\ne k}^{min(m,n)-1}|R_{h}(g(s\_\theta))|]$
\end_inset

, if 
\begin_inset Formula $s\_\theta$
\end_inset

 can be called inside 
\begin_inset Formula $l\_\theta$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{i,l}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests long resources.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{i,s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests short resources.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The following notations are used for the LCM
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $RC_{ji}^{lk}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The time 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 waits for the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, where the former belongs to a higher priority job.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
System model
\end_layout

\begin_layout Standard
Sporadic, hard real time multiprocessor system with G-EDF, G-RMA.
 EDF CM is used with G-EDF systems, RMA CM is used with G-RMA, and FIFO
 CM is used with both.
 Any instance 
\begin_inset Formula $T_{i}^{k}$
\end_inset

 can have any number of atomic sections, of different lengths, and the relative
 deadline of each task is equal to its period.
\end_layout

\begin_layout Section
Response time of G-EDF system with EDF CM
\end_layout

\begin_layout Standard
To get the response time of task 
\begin_inset Formula $T_{i}$
\end_inset

 with synchronization controlled by STM with EDF CM, it must be noted that
 atomic sections of different tasks that access the same object run in a
 sequential order, not in parallel, because only one atomic section will
 execute while the others retry, or will discover that they should retry.
 This means that an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 can be delayed by the commulative sum of atomic sections of other tasks
 that share the same atomic object, not by parallelizing these atomic sections
 (as is done in response time analysis of multiprocessor system without
 shared resources).
 Toward this goal, we must first determine the maximum number of interferences
 of task 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Subsection
Maximum Interference of tasks with G-EDF scheduler
\end_layout

\begin_layout Standard
The maximum number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that can occur within the period of 
\begin_inset Formula $T_{i}$
\end_inset

 occurs when the deadline of one instance of the former coincides with the
 deadline of the latter as depicted in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 and shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

.
 The first instance (
\begin_inset Formula $T_{j}^{1}$
\end_inset

) is delayed by a suitable amount of jitter (
\begin_inset Formula $j_{j}$
\end_inset

) that makes it contributes by all its execution time into the period of
 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure1.eps
	scale 50
	BoundingBox 0bp 0bp 542bp 162bp
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig1"

\end_inset

Maximum interference between two tasks in G-EDF system
\end_layout

\end_inset


\end_layout

\end_inset

This can be proved by noting that 
\begin_inset Formula $\frac{T_{i}}{T_{j}}=c.T_{j}+\delta$
\end_inset

.
 
\series bold
\shape italic
In case 
\begin_inset Formula $\delta\ne0$
\end_inset


\series default
,
\shape default
 then part of an instance of 
\begin_inset Formula $T_{j}$
\end_inset

 contributes in the period of 
\begin_inset Formula $T_{i}$
\end_inset

.
 If this part is 
\begin_inset Formula $T_{j}^{1}$
\end_inset

, then it has a workload over 
\begin_inset Formula $T_{i}$
\end_inset

 because it has a shorter absolute deadline than 
\begin_inset Formula $T_{i}$
\end_inset

.
 Otherwise, if this part is left to the end, and the first instance of 
\begin_inset Formula $T_{j}$
\end_inset

 , 
\begin_inset Formula $T_{j}^{1}$
\end_inset

, conincides in its release with 
\begin_inset Formula $T_{i}$
\end_inset

 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig2"

\end_inset

, this means that 
\begin_inset Formula $T_{j}$
\end_inset

 has been shifted to right, and the absolute deadline of 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will be greater than that of 
\begin_inset Formula $T_{i}$
\end_inset

, so it will have no effect on it, and the workload of 
\begin_inset Formula $T_{j}$
\end_inset

 is lowered by one instance.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure2.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig2"

\end_inset

Relase of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 coinciedes with 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $T_{j}$
\end_inset

 is shifted to left by any amount until the deadline of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

coincides with the start of 
\begin_inset Formula $T_{i}$
\end_inset

, this will not have higher effect on 
\begin_inset Formula $T_{i}$
\end_inset

 because the deadline of 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 is still longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

 which will make no effect for this instance, meanwhile, it reduces the
 effect of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

.
 This is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig3"

\end_inset

.
 Thus the maximum number of 
\begin_inset Formula $T_{j}$
\end_inset

 instances that can interfere with 
\begin_inset Formula $T_{i}$
\end_inset

 in this case is 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure3.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig3"

\end_inset

Deadline of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 coincides with 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\begin_inset Formula $\delta=0$
\end_inset

,
\series default
\shape default
 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig4"

\end_inset

, then the maximum number of 
\begin_inset Formula $T_{j}$
\end_inset

 instances interfering with 
\begin_inset Formula $T_{i}$
\end_inset

 is still 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil$
\end_inset

 because if 
\begin_inset Formula $T_{j}^{1}$
\end_inset

is shifted right and delayed with jitter, it will enforce the deadline of
 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 to exceed that of 
\begin_inset Formula $T_{i}$
\end_inset

, so the addition of one instance resulted in subtraction of another.
 And if 
\begin_inset Formula $T_{j}$
\end_inset

 is shifted left, this will not make 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 has any effect on 
\begin_inset Formula $T_{i}$
\end_inset

 , because its absolute deadline is still longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

, until the deadline of 
\begin_inset Formula $T_{j}^{k+1}$
\end_inset

 coincides with that of 
\begin_inset Formula $T_{i}$
\end_inset

, but in this case, 
\begin_inset Formula $T_{j}^{2}$
\end_inset

 will be removed completely from the period of 
\begin_inset Formula $T_{i}$
\end_inset

, and as before, the addition of one instance resulted in the cancelation
 of anoter.
 Then, the maximum number of interfering instances is still the same as
 before.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure4.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig4"

\end_inset


\begin_inset Formula $t(T_{i})$
\end_inset

 is an integral multiple of 
\begin_inset Formula $t(T_{j})$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This last case differs from that mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, where the maximum number of interferences is 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\lfloor\frac{T_{i}}{T_{j}}\rfloor+1$
\end_inset


\begin_inset Quotes erd
\end_inset

, which equals 
\begin_inset Formula $c+1$
\end_inset

, wherease it should be only 
\begin_inset Formula $c$
\end_inset

.
\end_layout

\begin_layout Standard
So, in all cases, the maximum number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that can be released during 
\begin_inset Formula $t(T_{i})$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
G_{ij}(t(T_{i}))=\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\label{eq1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the maximum workload contributed by 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 during the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
W_{ij}(t(T_{i}))=G_{ij}(t(T_{j})).c_{j}\label{eq8}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The workload defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq8"

\end_inset

 is consistent with situation shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

 and may be an upper bound for the maximum workload because in the case
 shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 contributes partially to 
\begin_inset Formula $T_{i}$
\end_inset

 rather than with all its WCET.
 So, a tighter value than that of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq8"

\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
W_{ij}^{*}(t(T_{i}))=\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor.c_{j}+min(c_{j},t(T_{i})-\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor.t(T_{j}))\label{eq11}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The bounds used in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 to calculate an upper bound on the response time for EDF systems compares
 between three formulas to take the minimum.
 The first one is useful when the calculated upper bound is not extended
 to reach the last instance of the interfering task, while the second one
 is used in that case because the maximum pattern of interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 changes according to whether it is calculated over the whole period of
 
\begin_inset Formula $T_{i}$
\end_inset

, or part of it.
 This is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9"

\end_inset

 where in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, the first instance 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 can contribute partially to 
\begin_inset Formula $T_{i}$
\end_inset

, but the last instance 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 contributes by its total WCET, this is the worst pattern of interference
 over 
\begin_inset Formula $t(T_{i})$
\end_inset

, wherease in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-b"

\end_inset

, interference pattern is calculated only over 
\begin_inset Formula $L$
\end_inset

, so the WCET of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 is totally included in the pattern, because instances of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 up to 
\begin_inset Formula $T_{j}^{k-1}$
\end_inset

 can contribute to the total workload over 
\begin_inset Formula $T_{i}$
\end_inset

 as their deadlines are shorter than that of 
\begin_inset Formula $T_{i}$
\end_inset

, while in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig9-a"

\end_inset

, the inclusion of the whole WCET of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 will exclude 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 because this will make its absolute deadline longer than that of 
\begin_inset Formula $T_{i}$
\end_inset

.
 So, over period 
\begin_inset Formula $L$
\end_inset

, contribution of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
\hat{W}{}_{ij}(L)=(\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).c_{j}\label{eq12}
\end{equation}

\end_inset

which is a little different than that mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 because 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 disscusses response time analysis for a set of feasible tasks, but here
 it is not known yet whether these tasks are feasible or not.
\end_layout

\begin_layout Standard
So, the overall workload will be
\begin_inset Formula 
\begin{equation}
W_{ij}(L)=min(\hat{W}_{ij}(L),W_{ij}^{*}(t(T_{i})))\label{eq13}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure9-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure9-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig9"

\end_inset

(a)Maximum interference during 
\begin_inset Formula $t(T_{i})$
\end_inset

 (b)Maximum interference during part 
\begin_inset Formula $L$
\end_inset

 of 
\begin_inset Formula $t(T_{i})$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retrial cost of atomic sections
\end_layout

\begin_layout Standard
To get the retrial cost of any atomic section under different types of scheduler
s with the specified CM, it must be noted that there are two reasons for
 retrial:- 1) conflict occurs between atomic sections.
 2) a task with lower priority, running on one of the processors, gets preempted
 by a higher priority task while the former is executing an atomic section.
 So, retrial cost of both must be calculated and summed together.
\end_layout

\begin_layout Subsubsection

\series bold
\shape italic
Retrial cost due to confliction between atomic sections
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
REMEMBER TO WRITE THE MORE CORRECT PROOF FOR RETRIAL OF ONE ATOMIC SECTION
 DUE TO ANOTHER ATOMIC SECTION (NOT DUE TO MULTIPLE ATOMIC SECTIONS).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If there are two tasks 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

, where the former is of longer absolute deadline than the latter, then
 EDF CM will give priority to conflicting atomic sections of 
\begin_inset Formula $T_{j}$
\end_inset

 over 
\begin_inset Formula $T_{i}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
 So, an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, will exprience its maximum dealy when it is at the end, and the one of
 
\begin_inset Formula $T_{j}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, is just beginning, then the CM will enforce 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 to retry.
 Despite validation time (i.
 e., eager or lazy), 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will retry for the same amount of time, which is the time of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5"

\end_inset

.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-a"

\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 validates at its beginning, because of early validation, and a conflict
 is detected.
 So, 
\begin_inset Formula $T_{i}$
\end_inset

 retries multiple times (because at each start of retrial, 
\begin_inset Formula $T_{i}$
\end_inset

 validates) during the execution of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 When 
\begin_inset Formula $T_{j}$
\end_inset

 finishes its atomic section, 
\begin_inset Formula $T_{i}$
\end_inset

 executes its own.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-b"

\end_inset

, 
\begin_inset Formula $T_{i}$
\end_inset

 tries to validate at its end (because it is lazy validation), but it finds
 a conflict with 
\begin_inset Formula $T_{j}$
\end_inset

, so it has to retry, and beacuse its atomic section length is shorter than
 that of 
\begin_inset Formula $T_{j}$
\end_inset

, it tries to validate again within the execution period of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, but EDF CM tells it to retry again.
 This process continues until 
\begin_inset Formula $T_{j}$
\end_inset

 finishes its atomic section.
 If 
\begin_inset Formula $T_{i}$
\end_inset

's atomic section length is longer than that of 
\begin_inset Formula $T_{j}$
\end_inset

's, 
\begin_inset Formula $T_{i}$
\end_inset

 would have taken the same amount of tiem to retry, because 
\begin_inset Formula $T_{j}$
\end_inset

 will validate when 
\begin_inset Formula $T_{i}$
\end_inset

 is retrying, and 
\begin_inset Formula $T_{i}$
\end_inset

 will retry again as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-c"

\end_inset

.
 So, the retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be 
\begin_inset Formula $len(s_{i}^{k}(\theta)+s_{j}^{l}(\theta))$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/figure5-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename figures/figure5-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure5-c.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\size small
\begin_inset CommandInset label
LatexCommand label
name "fig5-c"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig5"

\end_inset

(a)Early validation (b)Lazy validation with 
\begin_inset Formula $s_{i}^{k}(\theta)\le s_{j}^{l}(\theta)$
\end_inset

 (c)
\size small
Lazy validation with 
\begin_inset Formula $s_{i}^{k}(\theta)>s_{j}^{l}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
But what if there are multiple tasks interfering with 
\begin_inset Formula $T_{i}$
\end_inset

 or interfering with each other and 
\begin_inset Formula $T_{i}$
\end_inset

, as shown in Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-a"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

.
 We should note that these figures are only two examples of many possible
 patterns for interference between tasks and the resulting transactional
 retries.
\end_layout

\begin_layout Standard
In each case, each atomic section of the shorter deadline tasks contribute
 to the dealy of 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

 by its total length, plus a retrial to some atomic section in the longer
 deadline tasks.
 For example, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 contributes by 
\begin_inset Formula $len(s_{j}^{l}(\theta)+s_{i}^{p}(\theta))$
\end_inset

 in both figures, 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

 causes a retrial to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

, and 
\begin_inset Formula $s_{h}^{w}(\theta)$
\end_inset

 causes a retrial to 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

 in the same figure.
\end_layout

\begin_layout Standard
As it is not known in advance what atomic section will be retried because
 of another one, then it can be assumed that each atomic section (that share
 the same object with the studied one) in a longer deadline task contributes
 by its total length, in addition to the maximum length between all atomic
 sections that share the same object, 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

.
\begin_inset Formula 
\begin{equation}
\mbox{\ensuremath{W_{i}^{p}(s_{j}^{k}(\theta))=len(s_{j}^{l}(\theta)+s_{max}(\theta))}}\label{eq2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure6-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure6-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/circle.eps
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Replaced in calculations by 
\begin_inset Formula $s_{max}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/dotted_circle.eps
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Replaced in calculations by 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig6"

\end_inset

(a)Other tasks interfere only with 
\begin_inset Formula $T_{i}$
\end_inset

 (b)All tasks interfere with each other and 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, the total contribution- of all atomic sections of all other tasks that
 share objects with the studeid task- to the retrial cost of the studied
 task in the period 
\begin_inset Formula $t(T_{i})$
\end_inset

 is 
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(T_{i}) & = & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))\label{eq3}\\
 &  & -s_{max}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}(\theta)\in s_{j}}len(s_{j}(\theta)+s_{max}(\theta))$
\end_inset

 referes to the contribution of all instances of 
\begin_inset Formula $T_{j}$
\end_inset

-as calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq1"

\end_inset

) - during the period of 
\begin_inset Formula $T_{i}$
\end_inset

, and this contribution is added to all tasks.
 The last part in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

)- 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $s_{i_{max}}(\theta)-s_{max}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

- is added because the it is known that the last atomic section to execute
 is 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

, and one of the other atomic sections (e.
 g.; 
\begin_inset Formula $s_{m}^{n}(\theta)$
\end_inset

) should have as a contribution 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{i_{max}}(\theta))$
\end_inset

 instead of 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{max}(\theta))$
\end_inset

, that is why one 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 is subtracted, and 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is added.
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is taken to get the worst case contribution by all other tasks to the studied
 task, as one atomic section in the latter can be interfered by more than
 one atomic section in any task, but the reverse is not true, and there
 can be multiple atomic sections in the studied task that share the same
 object.
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) can be modified a little by noting that an atomic section conflicts with
 the sections of other tasks, not with its own task, because it is a hard
 real time sporadic model, so each instance must finish before the next
 begins.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will turn to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

).
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(T_{i}) & = & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))\label{eq4}\\
 &  & -\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{max}^{*}(\theta)\in s(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{max}^{*}(\theta)\not\in s_{j}(\theta)$
\end_inset

 because 
\begin_inset Formula $T_{j}$
\end_inset

 will not cause a retrial to one of its instances.
\end_layout

\begin_layout Itemize
To get 
\begin_inset Formula $\bar{s}{}_{max}(\theta)$
\end_inset

, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
the maximum atomic section of each task that accesse object 
\begin_inset Formula $\theta$
\end_inset

 is grouped into an array of non increasing order of their lengths, and
 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 will be the first one, while 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\bar{s}{}_{max}(\theta)$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
 will be the next.
 This can be illustrated by Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig7"

\end_inset

, where the maximum atomic section of each task that access object 
\begin_inset Formula $\theta$
\end_inset

 is associated with its corresponding task.
 When eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) is applied, all tasks but 
\begin_inset Formula $T_{j}$
\end_inset

 will choose 
\begin_inset Formula $s_{j_{max}}(\theta)$
\end_inset

 as the value of 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

, as it is the maximum atomic section not assciated with the interfering
 task.
 But when 
\begin_inset Formula $T_{j}$
\end_inset

 is the one whose contribution is studeid, it will choose 
\begin_inset Formula $s_{k_{max}}(\theta)$
\end_inset

 as it is the maximum one not assciated with 
\begin_inset Formula $T_{j}$
\end_inset

.
 This way, it can be seen that the maximum value alawys lies between two
 values.
 Of course, these two values can be equal, or the maximum value can be associate
d with the studeid task itself, not with any one of the interfering tasks,
 in which case, the chosen value will alawys be the one associated with
 the studied task, but still the chosen value lies between the most two
 maximum values.
 This means that the subtracted 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) must be replaced with one of these two values, but as it is not known
 a priori which one to use as it is not known which one will interfer with
 the studied task, the minimum between them is chosen to get the worst case
 retrial cost (as this value is going to be subtracted), and this minimum
 is the second maximum.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure7.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig7"

\end_inset

Values associated with 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
If the maximum atomic section (
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

) is associated with the studeid task (
\begin_inset Formula $T_{i}$
\end_inset

), then all other tasks will choose it, and the result of eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) for this specific object 
\begin_inset Formula $\theta$
\end_inset

 (i.
 e.; if 
\begin_inset Formula $\theta$
\end_inset

 is the only shared object between tasks) will be 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{i_{max}}(\theta)-s_{i_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

, wherease eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{i_{max}}(\theta)-s_{k_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

 (assuming that 
\begin_inset Formula $\bar{s}_{max}(\theta)=s_{k_{max}}(\theta)$
\end_inset

), but as 
\begin_inset Formula $s_{k_{max}}(\theta)\leq s_{i_{max}}(\theta)$
\end_inset

, then eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will give a smaller or equal value to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) for object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Standard
If the maximum atomic section (
\begin_inset Formula $s_{j_{max}}(\theta)$
\end_inset

) is associated with some other task (
\begin_inset Formula $T_{j}$
\end_inset

), not with the studied task (
\begin_inset Formula $T_{i}$
\end_inset

), and 
\begin_inset Formula $T_{j}$
\end_inset

 has 
\begin_inset Formula $n$
\end_inset

 atomic sections that share object 
\begin_inset Formula $\theta$
\end_inset

, and 
\begin_inset Formula $\bar{s}_{max}(\theta)=s_{k_{max}}(\theta)$
\end_inset

.
 Then, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

)- for object 
\begin_inset Formula $\theta$
\end_inset

- will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{j_{max}}(\theta)+n.s_{j_{max}}(\theta)-s_{j_{max}}(\theta)+s_{i_{max}}(\theta)=Const+(p+n-1).s_{j_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

, while eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will result in 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $Const+p.s_{j_{max}}(\theta)+n.s_{k_{max}}(\theta)-s_{k_{max}}(\theta)+s_{i_{max}}(\theta)=Const+p.s_{j_{max}}(\theta)+(n-1).s_{k_{max}}(\theta)+s_{i_{max}}(\theta)$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 If 
\begin_inset Formula $n=1$
\end_inset

, then both equations give the same result, otherwise, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will give a smaller value than eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

).
\end_layout

\begin_layout Standard
It can be seen that the two equations can differ according the considered
 object, but we can alawys take the minimum one for the considered object.
 So, equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) can be combined into eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(T_{i})=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))\\
-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{T_{i}}{T_{j}}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))\\
-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\end{cases}\label{eq5}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
\shape italic
Retrial cost due to preemption by higher priority tasks
\end_layout

\begin_layout Standard
When the studeid job (
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

) has a long absolute deadline among all tasks running on the 
\begin_inset Formula $m$
\end_inset

 processors, and another job (
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

) is released 
\begin_inset Formula $d_{j}^{l}<d_{i}^{x}$
\end_inset

, then 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 will be preempted in favor of 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

, but this can happen when 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is at the end of one of its atomic sections, which will enforce it to retry-
 despite there is no conflict .
 This situation is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig8"

\end_inset

.
\end_layout

\begin_layout Standard
Generally, for any instance 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 to be able to preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, then two conditions must be satisfied: 
\begin_inset Formula $r_{i}^{x}<r_{j}^{l}<d_{i}^{x}$
\end_inset

, and 
\begin_inset Formula $d_{j}^{l}\le d_{i}^{x}$
\end_inset

.
 Wihout the first condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 would have been released already before 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and it will not preempt it.
 Without the second condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 will be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and will not preempt it.
 So, If 
\begin_inset Formula $D_{j}\ge D_{i}$
\end_inset

, then no instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 will preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

because there will be at most one instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 with higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, and this instance must have been released before 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the first condition.
 Otherwise, this instance will be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the second condition.
\end_layout

\begin_layout Standard
So, to get the 
\begin_inset Formula $RC_{release}$
\end_inset

 of any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, only tasks with shorter relative deadline than 
\begin_inset Formula $D_{i}$
\end_inset

 are going to be considered as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(L)=\sum_{\tau_{j}\in\zeta_{i}}\begin{cases}
\left\lceil \frac{L}{T_{j}}\right\rceil s_{i_{max}} & ,L\le T_{i}-T_{j}\\
\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}} & ,L>T_{i}-T_{j}
\end{cases}\label{eq6}
\end{equation}

\end_inset

where 
\begin_inset Formula $\zeta_{i}$
\end_inset

 is the set of tasks with relative deadline shorter than 
\begin_inset Formula $D_{i}$
\end_inset

, and 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 is the longest transaction in 
\begin_inset Formula $\tau_{i}$
\end_inset

 as it is assumed that 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 preempts 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 when it is executing 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 to get the worst case scenario.
\end_layout

\begin_layout Standard
Although the total number of instances of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that are released during any interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{i}}\right\rceil +1$
\end_inset

, but for the case of G-EDF, carried-in and carried-out jobs are discarded
 because carried-in jobs are released before 
\begin_inset Formula $r_{i}^{x}$
\end_inset

, which violates the first condition mentioned above, while carried-out
 jobs are of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, which violates the second condition.
 This is why ceiling is used in the first case of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

) and floor is used in the second case.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure8.eps
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig8"

\end_inset

Transactional retries due to release of higher priority tasks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, the total retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 will be
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(T_{i})=RC_{conflict}(T_{i})+RC_{release}(T_{i})\label{eq7}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Upper bound on response time
\end_layout

\begin_layout Standard
To get an upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $RC(T_{i})$
\end_inset

 must be added to the workload by other tasks during the non-atomic execution
 of 
\begin_inset Formula $T_{i}$
\end_inset

.
 But this requires modification of WCET of each task as follows:-
\end_layout

\begin_layout Standard
WCET (
\begin_inset Formula $c_{j}$
\end_inset

) of each interfering task (
\begin_inset Formula $T_{j}$
\end_inset

) should be inflated to accomodate for the interference of tasks other than
 the studied one (
\begin_inset Formula $T_{k},$
\end_inset

 
\begin_inset Formula $k\ne j,i$
\end_inset

), meanwhile, atomic region that access shared objects between 
\begin_inset Formula $T_{j}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

 should not be considered in the inflation cost becuase they are already
 calculated in the retrial cost of the studied task (
\begin_inset Formula $T_{i}$
\end_inset

).
 So, the new WCET for 
\begin_inset Formula $T_{j}$
\end_inset

 will be
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{ji}=c_{j}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))+RC_{conflict}(T_{ji})+RC_{releas}(T_{ji})\label{eq9}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $c_{ji}$
\end_inset

 is the new WCET of 
\begin_inset Formula $T_{j}$
\end_inset

 relative to the studied task 
\begin_inset Formula $T_{i}$
\end_inset

.
 This length changes according to the studied task.
\end_layout

\begin_layout Standard
\begin_inset Formula $len(s_{j}(\theta))$
\end_inset

 is the sum of lengths of all atomic sections in 
\begin_inset Formula $T_{j}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}(T_{ji})$
\end_inset

 is calculated as in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

 without including shared objects between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{release}(T_{ji})$
\end_inset

 is calculated as in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

 without considering the release of any instance of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
The second term in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq9"

\end_inset

 is included because the length of these atomic sections is already included
 in the retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

, so as in the third term.
 The last term excludes any release of any instance of 
\begin_inset Formula $T_{i}$
\end_inset

 because it is assumed that 
\begin_inset Formula $T_{j}$
\end_inset

 is the one that affects 
\begin_inset Formula $T_{i}$
\end_inset

, not the reverse.
 Because of this, the calculated WCET is relative to the studied task, as
 it changes form task to task.
\end_layout

\begin_layout Standard
So, the upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated by the iterative equation (which is modified from theorm
 6 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

):-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(T_{i})+\lfloor\frac{1}{m}\sum_{j\ne i}W_{ij}(R_{i}^{up})\rfloor\label{eq10}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $R_{i}^{up}$
\end_inset

 is the iterative calculated upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

, and its initial value is 
\begin_inset Formula $c_{i}+RC(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

, but 
\begin_inset Formula $W_{ij}^{*}(t(T_{i}))$
\end_inset

 will be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq11"

\end_inset

) with replacing 
\begin_inset Formula $c_{j}$
\end_inset

 with 
\begin_inset Formula $c_{ji}$
\end_inset

, and 
\begin_inset Formula $\hat{W}_{ij}(L)$
\end_inset

 will be changed to 
\begin_inset Formula 
\begin{equation}
\hat{W}_{ij}(L(T_{i}))=max\begin{cases}
(\lceil\frac{L-c_{ji}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))}{t(T_{j})}\rceil+1).c_{ji}\\
\lceil\frac{L-c_{j}}{t(T_{j})}\rceil.c_{ji}+c_{j}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))
\end{cases}\label{eq14}
\end{equation}

\end_inset

where the top term is the same as that calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

) but with replacing 
\begin_inset Formula $c_{j}$
\end_inset

 with 
\begin_inset Formula $c_{ji}$
\end_inset

 and addition of legnths of atomic sections shared between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

.
 Although these lengths are already included in the retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

, but they are added here to get an approximate right start time for other
 instances of 
\begin_inset Formula $T_{j}$
\end_inset

 that affect 
\begin_inset Formula $T_{i}$
\end_inset

.
 It is approximate because the added atomic sections are not subject to
 retrial by other tasks (because the retrial is included in 
\begin_inset Formula $RC(T_{i})$
\end_inset

), but calculations are still valid because inclusion of retrial to these
 sections will reduce the output of the ceiling in the top term, so it still
 gives a maximum value.
 
\end_layout

\begin_layout Standard
The lower term in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

) does the same except for the first instance of 
\begin_inset Formula $T_{j}$
\end_inset

 which contributes by only 
\begin_inset Formula $c_{j}$
\end_inset

, and the shared atomic sections between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{j}$
\end_inset

 are excluded from this first instance.
\end_layout

\begin_layout Standard
These two terms are compared becuase 
\begin_inset Formula $\lceil\frac{L-c_{j}}{t(T_{j})}\rceil.c_{ji}>\lceil\frac{L-c_{ji}}{t(T_{j})}\rceil.c_{ji}$
\end_inset

 but 
\begin_inset Formula $c_{ji}>c_{j}$
\end_inset

, this makes a tradeoff beween these two terms, so the maximum is chosen.
\end_layout

\begin_layout Subsubsection
Tighter upper bound on response time
\end_layout

\begin_layout Standard
To get a tighter upper bound on response time of 
\begin_inset Formula $T_{i}$
\end_inset

, the 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will not be fixed (as is done in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) because it is calculated over the entire period of 
\begin_inset Formula $T_{i}$
\end_inset

), rather it will change according to 
\begin_inset Formula $R_{i}^{up}$
\end_inset

.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be changed to include the modified number of interfering instances
 in the same way this number is calculated in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

), but when calculating this number for the entire 
\begin_inset Formula $t(T_{i})$
\end_inset

, a situation like that shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

 can happen.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure10.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig10"

\end_inset

Atomic sections of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 contributing to 
\end_layout

\end_inset


\end_layout

\end_inset

Atomic sections of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 that are contained in period 
\begin_inset Formula $\delta$
\end_inset

 are the only ones that at most can contribute to the 
\begin_inset Formula $RC(T_{i})$
\end_inset

, of course they can be lower, but cannot be greater because 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 has been delayed by its maximum jitter, so no more atomic sections can
 enter period 
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1})]$
\end_inset

.
 Besides, 
\begin_inset Formula $T_{i}$
\end_inset

 can be released in the middle of any atomic section that shares an object
 with it, so only length 
\begin_inset Formula $\mu$
\end_inset

 of this atomic section will be considered, but the effect of this 
\begin_inset Formula $\mu$
\end_inset

 will still be the retrial of one of the other atomic sections.
 So, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be modified as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(t(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l}(\theta)\in[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}}len(s_{j}^{l^{*}}(\theta)+s_{max}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}(\theta))))-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l}(\theta)\in[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}}len(s_{j}^{l^{*}}(\theta)+s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{*}(\theta))))-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\\
\end{cases}\label{eq15}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{j}^{l^{*}}(\theta)$
\end_inset

 is the part of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 that is included in 
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $[d(T_{j}^{1})-\delta,d(T_{j}^{1}))]^{*}$
\end_inset

 contains 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 if it is partially or totaly included in it.
 In the latter case, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will contribute by its included length 
\begin_inset Formula $\mu$
\end_inset

.
\end_layout

\begin_layout Standard
Now, it is time to compute 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 during a period of length 
\begin_inset Formula $L$
\end_inset

 which does not extend to the last instance of 
\begin_inset Formula $T_{j}$
\end_inset

.
 In this case, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) will be (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) .
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(L(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1)\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)\\
+s_{max}(\theta))))-s_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1)\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta)\\
+s_{max}^{*}(\theta))))-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta))
\end{cases}
\end{cases}\label{eq16}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 during the upper bound on the response time of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq17"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{conflict}(R_{i}^{up})=min\begin{cases}
RC_{conflict}(R_{i}^{up}(T_{i}))\\
RC_{conflict}(t(T_{i}))
\end{cases}\label{eq17}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\series bold
\begin_inset Formula $RC_{release}(T_{i})$
\end_inset


\series default
 is also modified to eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq18"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(R_{i}^{up})=\sum_{T_{k}\in\zeta(T_{i})}(\lfloor\frac{R_{i}}{T_{k}}\rfloor.s_{i_{max}}(\theta))\label{eq18}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the final retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq19"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(R_{i}^{up})=RC_{conflict}(R_{i}^{up})+RC_{release}(R_{i}^{up})\label{eq19}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, the final upper bound on response time of 
\begin_inset Formula $T_{i}$
\end_inset

 will be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) with replacing 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 with 
\begin_inset Formula $RC(R_{i}^{up})$
\end_inset

.
\end_layout

\begin_layout Section
Response time of G-RMA system with RMA CM
\end_layout

\begin_layout Standard
As G-RMA is a fixed scheduler, 
\begin_inset Formula $T_{i}$
\end_inset

 will be interfered by a specific set of tasks whose priorities are higher
 than or equal to that of 
\begin_inset Formula $T_{i}$
\end_inset

 (
\begin_inset Formula $p(T_{j})\ge p(T_{i})$
\end_inset

).
\end_layout

\begin_layout Subsection
Maximum Interference of tasks with G-RMA scheduler
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 represents the maximum interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 under G-RMA.
 As 
\begin_inset Formula $T_{j}$
\end_inset

 is of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will interfere with 
\begin_inset Formula $T_{i}$
\end_inset

 even if it is not totally included in 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 Unlike the G-EDF case shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

 where only the 
\begin_inset Formula $\delta$
\end_inset

 part of 
\begin_inset Formula $T_{j}^{1}$
\end_inset

 is considered, in G-RMA, 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will contribute with the whole 
\begin_inset Formula $c_{j}$
\end_inset

 and all atomic sections contained in 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 will be considered.
 This is becasue in G-EDF, the worst case pattern releases 
\begin_inset Formula $T_{i}$
\end_inset

 before 
\begin_inset Formula $d(T_{j}^{1})$
\end_inset

 by
\begin_inset Formula $\delta$
\end_inset

 time units, and 
\begin_inset Formula $T_{i}$
\end_inset

 cannot be interfered before it is released, but in G-RMA, 
\begin_inset Formula $T_{i}$
\end_inset

 is already released, and can be interfered by the whole 
\begin_inset Formula $T_{j}^{k}$
\end_inset

 even if this is going to render it infeasible.
\end_layout

\begin_layout Standard
So, the maximum contribution of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 for any period 
\begin_inset Formula $L$
\end_inset

 can be deduced from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 as 
\begin_inset Formula $W_{ij}(L(T_{i}))=(\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).c_{j}$
\end_inset

, where 
\begin_inset Formula $L$
\end_inset

 can extend to 
\begin_inset Formula $t(T_{i})$
\end_inset

, and not like the case of G-EDF where the pattern of interference is different
 for each interval.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure11.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig11"

\end_inset

Maximum interference of 
\begin_inset Formula $T_{j}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 in G-RMA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retrial cost due to conflict between atomic sections
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) is used to calculate the retrial cost due to conflict between atomic sections.
 It is the same as eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) with some modifications as we do not have get the minimum of two formulas,
 because any atomic section in 
\begin_inset Formula $T_{j}$
\end_inset

 will cause retrial to one of the atomic sections in lower or equal priority
 tasks; that is why 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is used.
 Also, only tasks of higher or equal priority to 
\begin_inset Formula $T_{i}$
\end_inset

 are considered as they are the only ones to interfere with it.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i})) & = & \sum_{\theta\in\theta_{i}}((\sum_{(T_{j}\in\gamma(\theta))\wedge(p(T_{j})\ge p(T_{i}))}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\label{eq20}\\
 &  & \sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)+s_{max}^{j}(\theta))))-s_{max}^{j}(\theta)+s_{i_{max}}(\theta))\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $L(T_{i})$
\end_inset

 can be extended to 
\begin_inset Formula $t(T_{i})$
\end_inset

 because of the fixed priority.
\end_layout

\begin_layout Subsection
Retrial cost due to release of higher priority tasks
\end_layout

\begin_layout Standard
Eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq18"

\end_inset

) can be modified to get the retrial cost due to release of higher priority
 tasks.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC_{release}(L(T_{i}))=\sum_{p(T_{k})\ge p(T_{i})}(\lceil\frac{L}{T_{k}}\rceil.s_{i_{max}}(\theta))\label{eq21}
\end{equation}

\end_inset

The interval 
\begin_inset Formula $L$
\end_inset

 in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) can be extended to cover the whole period of 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 So, the total retrial cost of 
\begin_inset Formula $T_{i}$
\end_inset

 (
\begin_inset Formula $RC(R_{i}^{up})$
\end_inset

) can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq19"

\end_inset

).
\end_layout

\begin_layout Subsection
Upper bound on response time
\end_layout

\begin_layout Standard
Upper bound can be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq22"

\end_inset

)
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(R_{i}^{up})+\lfloor\frac{1}{m}\sum_{j\ne i}\hat{W}{}_{ij}(R_{i}^{up})\rfloor\label{eq22}
\end{equation}

\end_inset

where 
\begin_inset Formula $\hat{W}_{ij}(R_{i}^{up})$
\end_inset

 is calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

) and 
\begin_inset Formula $c_{ji}$
\end_inset

 is calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq9"

\end_inset

) but 
\begin_inset Formula $RC_{conflict}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{release}(T_{i})$
\end_inset

 are calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq21"

\end_inset

) respectively.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Response-time-of FIFO CM"

\end_inset

Response time of G-EDF and G-RMA system with FIFO CM
\end_layout

\begin_layout Standard
In FIFO CM, transactions are executed in the order they arrive.
 This way, the effect of an atomic section of 
\begin_inset Formula $T_{j}$
\end_inset

 to one in 
\begin_inset Formula $T_{i}$
\end_inset

 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig12-a"

\end_inset

 for early validation and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig12-b"

\end_inset

 for lazy validation.
 In both cases, 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 must retry for at most 
\begin_inset Formula $len(s_{j}^{p}(\theta))$
\end_inset

, which is less than that of EDF CM and RMA CM, but a higher priority task
 can be delayed by a lower one if the latter's atomic section arrives earlier
 than the former.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure12-a.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure12-b.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12-b"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig12"

\end_inset

(a)Early validation (b)Lazy validation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Retrial of atomic sections here does not depend on the scheduler, rather
 it only depends on the arrival pattern, so conflict retrial cost (
\begin_inset Formula $RC_{conflict}$
\end_inset

) will be the same for both G-EDF and G-RMA systems, and the maximum pattern
 of interference will also be the same as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

, but this pattern differs when calculating the release retrial cost (
\begin_inset Formula $RC_{release}$
\end_inset

) and the contribution of other tasks during the non-atomic part of 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}$
\end_inset

 can be calculated by eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq23"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC_{conflict}(L(T_{i}))=\sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))\label{eq23}
\end{equation}

\end_inset

where the lengths of all atomic sections in all tasks that share object
 
\begin_inset Formula $\theta$
\end_inset

 with 
\begin_inset Formula $T_{i}$
\end_inset

 are summed together, and 
\begin_inset Formula $L$
\end_inset

 can extend to cover 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 It should be noted that one instance can have multiple atomic sections
 that access the same object, then how can an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 be interfered by all of them while it should be interfered by only one
 of them according to its arrival time, the others will come after that
 of 
\begin_inset Formula $T_{i}$
\end_inset

? This can happen if 
\begin_inset Formula $T_{i}$
\end_inset

 was trying to execute its atomic section, then it is replaced by a higher
 priority job, then 
\begin_inset Formula $T_{i}$
\end_inset

 gets back to the processor.
 In the time of preemption, another atomic section of the same conflicting
 task can come and execute.
 This situation is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig13"

\end_inset

 where 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 retries while 
\begin_inset Formula $s_{j}^{p}$
\end_inset

 is executing, then 
\begin_inset Formula $T_{k}$
\end_inset

 is released, preempting 
\begin_inset Formula $T_{i}$
\end_inset

 to get its processor and before it finished, 
\begin_inset Formula $s_{j}^{p+1}$
\end_inset

 executes, so when 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 returns after 
\begin_inset Formula $T_{k}$
\end_inset

 finishes, it will be after 
\begin_inset Formula $s_{j}^{p+1}$
\end_inset

 and it will have to retry until it finishes.
 For this, eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq23"

\end_inset

) sums the lengths of all atomic sections in each instance that access the
 same object as the studeid task.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure13.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig13"

\end_inset

Retrial of 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 by multiple atomic sections of 
\begin_inset Formula $s_{j}^{p}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The rest of analysis for both schedulers is done as before, only 
\begin_inset Formula $RC_{conflict}(L(T_{i}))$
\end_inset

 is changed.
\end_layout

\begin_layout Subsection

\series medium
In case of G-RMA
\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{conflict}$
\end_inset

 can be reduced for G-RMA by noting that the case shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig13"

\end_inset

 can happen only if 
\begin_inset Formula $T_{i}$
\end_inset

 is the lowest priority among all running tasks, which reduces number of
 conflicting tasks to only those of higher or equal priority to that of
 
\begin_inset Formula $T_{i}$
\end_inset

.
 Meanwhile, if there are 
\begin_inset Formula $m$
\end_inset

 processors, this means that before 
\begin_inset Formula $T_{i}$
\end_inset

 gets preempted, it will retry for the duration of at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 atomic sections sharing the same object with 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
After 
\begin_inset Formula $T_{i}$
\end_inset

 gets preempted, no lower priority task can allocate a processor while 
\begin_inset Formula $T_{i}$
\end_inset

 is waiting, but as 
\begin_inset Formula $T_{i}$
\end_inset

 can get preempted again and again by higher priority tasks, it can be delayed
 by the sum of all atomic sections in higher priority tasks that access
 the same object as 
\begin_inset Formula $T_{i}$
\end_inset

, or for each release of a higher priority job, 
\begin_inset Formula $T_{i}$
\end_inset

 will be delayed by the maximum 
\begin_inset Formula $m-1$
\end_inset

 higher or equal priority tasks
\end_layout

\begin_layout Standard
So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 in the case of G-RMA can be calculated as in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i}))= & \sum_{\theta\in\theta_{i}}(\sum_{k=1}^{min(n-1,m-1)}(\omega(k,\theta))+(\sum_{(T_{j}\in\gamma(\theta))\wedge(p(T_{j})\ge p(T_{i}))}min((\lceil\frac{L}{t(T_{j})}\rceil).\label{eq24}\\
 & \sum_{k=1}^{m-1}(\omega_{high}(k,\theta)),((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))_{0\, if\, n\le m})\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where:-
\end_layout

\begin_layout Standard
\begin_inset Formula $\omega(k,\theta)$
\end_inset

 is the set of 
\begin_inset Formula $s_{p_{max}}(\theta)$
\end_inset

 arranged in non-increasing order.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $\omega_{high}(k,\theta)$
\end_inset

 is the set of 
\begin_inset Formula $s_{p_{max}}(\theta)$
\end_inset

 arranged in non-increasing order, where 
\begin_inset Formula $p(T_{p})\ge p(T_{i})$
\end_inset

.
 
\end_layout

\begin_layout Standard
The second term is zero in case number of tasks is less than or equal to
 number of processors, because 
\begin_inset Formula $T_{i}$
\end_inset

 will not have to be preempted because of enough number of processors for
 tasks.
 The rest of the analysis for 
\begin_inset Formula $RC_{releas}$
\end_inset

 and workload of other tasks is the same.
\end_layout

\begin_layout Subsection

\series medium
In case of G-EDF
\end_layout

\begin_layout Standard
G-EDF is similar to G-RMA in that 
\begin_inset Formula $T_{i}$
\end_inset

- before it is preempted- it can be delayed by the maximum 
\begin_inset Formula $min(m-1,n-1)$
\end_inset

 tasks, but when if it is preempted, this means that 
\begin_inset Formula $T_{i}$
\end_inset

 is the least priority task and all other 
\begin_inset Formula $m-1$
\end_inset

 tasks are of higher or equal priority, and 
\begin_inset Formula $T_{i}$
\end_inset

- or one of higher or equal priority- is allowed to allocate a processor
 when one is available, so no 
\begin_inset Formula $T_{j}$
\end_inset

 of longer relative deadline than 
\begin_inset Formula $T_{i}$
\end_inset

 will start before it because it will have a longer absolute deadline.
 So, 
\begin_inset Formula $RC_{conflict}$
\end_inset

 in the case of G-EDF will be calculated as shown in eq(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

) where 
\begin_inset Formula $L$
\end_inset

 can be extended to 
\begin_inset Formula $t(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC_{conflict}(L(T_{i}))= & \sum_{\theta\in\theta_{i}}(\sum_{k=1}^{min(n-1,m-1)}(\omega(k,\theta))+(\sum_{(T_{j}\in\gamma(\theta))\wedge(D(T_{j})\le D(T_{i}))}min((\lfloor\frac{L}{t(T_{j})}\rfloor).\nonumber \\
 & \sum_{k=1}^{m-1}(\omega_{high}(k,\theta)),(min[\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1,\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor].\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta)))))_{0\, if\, n\le m}) & \text{}\label{eq25}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $RC_{release}$
\end_inset

 and workload of other tasks is the same as before.
\end_layout

\begin_layout Section
Comparison between different synchronization approaches
\end_layout

\begin_layout Subsection
Comparison between EDF CM, RMA CM and FIFO CM
\end_layout

\begin_layout Standard
In both EDF CM and RMA CM, any atomic section 
\begin_inset Formula $s_{i}^{l}$
\end_inset

 can suffer from retrial cost of 
\begin_inset Formula $len(s_{i}^{l}+s_{j}^{k})$
\end_inset

 from an interfering task 
\begin_inset Formula $T_{j}$
\end_inset

, whereas, FIFO CM suffers only from 
\begin_inset Formula $len(s_{j}^{k})$
\end_inset

.
\end_layout

\begin_layout Standard
In case of G-RMA scheduler, both RMA CM and FIFO CM suffer from higher priority
 tasks (although the latter suffers from 
\begin_inset Formula $min(m-1,n-1)$
\end_inset

 tasks, but due to preemption by higher priority tasks, it can be affected
 by all of them as depicted in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq24"

\end_inset

)) and any task 
\begin_inset Formula $T_{i}$
\end_inset

 is interfered by the same number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

 for both approaches (this number can extend to the carry out job during
 the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

), but FIFO CM initially suffers from 
\begin_inset Formula $m-1$
\end_inset

 tasks that have their atomic sections ordered in the queue before it.
\end_layout

\begin_layout Standard
EDF CM is somehow similar to FIFO CM in that it initially suffers from all
 tasks, even those with longer relative deadline, because they may have
 shorter or equal aboslute deadline, but afterwards, it can suffer from
 those of shorter relative deadline if their coming instances still have
 shorter absolute deadline during the period of the studied task; in that
 it differs from RMA CM which is affected only by the higher priority tasks,
 but EDF CM is not affected by carry out instances, so a task 
\begin_inset Formula $T_{i}$
\end_inset

 may be interfereb by a lower number of instances of 
\begin_inset Formula $T_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
So, it can be seen that the major factors that differentiate the three contentio
n managers are:- the number of interfering tasks, which in turn is affected
 by the priority of the task, and the number of instances of any conflicting
 task.
\end_layout

\begin_layout Subsection
Comparison between lock-free and STM
\end_layout

\begin_layout Standard
In order to know when the previously mentioned STM systems are better than
 lock free approach, we follow the comparison made in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 by comparing the total utilization of each one.
 Lock free method is implemented using retrial loops 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 In each approach, execution time of each task is inflated by the retrial
 cost (in case of STM), or the loop retrial cost (in case of lock free).
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:G-EDF-scheduler-with"

\end_inset

G-EDF scheduler with EDF CM against lock-free
\end_layout

\begin_layout Standard
Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq17"

\end_inset

) can be upper bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{j}\in\gamma_{i}}(\sum_{\theta\in\theta_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}(2.s_{max})))\label{eq30}
\end{equation}

\end_inset

where 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

 and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

, and the order of the first two summation are replaced by each other with
 
\begin_inset Formula $\gamma_{i}$
\end_inset

 is the set of tasks that share objects with 
\begin_inset Formula $T_{i}$
\end_inset

.
 These two changes are done to simplify the comparison, in addition to assuming
 that 
\begin_inset Formula $\sum_{\theta\in\theta_{i}}\sum_{\forall s_{j}^{l}(\theta)}=\beta_{i,j}^{*}$
\end_inset

.
 So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

) can be modified to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq31"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j}^{*}.s_{max}\label{eq31}
\end{equation}

\end_inset

The loop retrial cost is defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 as (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq33"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j}.r_{max}\label{eq32}
\end{equation}

\end_inset

where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is number of retry loops of 
\begin_inset Formula $T_{j}$
\end_inset

 that access the same object as accessed by some retry loop of 
\begin_inset Formula $T_{i}$
\end_inset

, but as the shared objects are the same in both STM and lock free, so 
\begin_inset Formula $\beta_{i,j}=\beta_{i,j}^{*}$
\end_inset

, and 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of
 any task.
\end_layout

\begin_layout Standard
\align left
So, STM acheives better or equal performance to lock-free if the total utilizati
on of the former is less than or equal to the latter as shown in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq33"

\end_inset

)
\begin_inset Formula 
\begin{eqnarray}
\sum_{T_{i}}\frac{c_{i}+\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j}.s_{max}}{t(T_{i})} & \le & \sum_{T_{i}}\frac{c_{i}+\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j}.r_{max}}{t(T_{i})}\nonumber \\
\therefore\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\nonumber \\
 & = & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}+\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})}{2\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})}\label{eq33}
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\beta_{i,j})/t(T_{i})$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}=\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.\beta_{i,j})/t(T_{i})$
\end_inset

, 
\begin_inset Formula $\therefore\,\zeta_{1}\le\zeta_{2}$
\end_inset

 depending on 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

, and the maximum value of 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}=\frac{1}{2}$
\end_inset

 which can happen if 
\begin_inset Formula $t(T_{j})\ge t(T_{i})\,\therefore\lceil\frac{t(T_{i})}{t(T_{j})}\rceil=1$
\end_inset

, and 
\begin_inset Formula $(\ref{eq33})=1$
\end_inset

 which is its maximum value.
 Of course, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $t(T_{j})\ge t(T_{i})$
\end_inset

 means that there is small number of interferences from other tasks to 
\begin_inset Formula $T_{i}$
\end_inset

, consequently, low number of conflict, so 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be as large as 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
The theoritical minimum value for 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}$
\end_inset

 is 
\begin_inset Formula $0$
\end_inset

 which can be asymptotically reached if 
\begin_inset Formula $t(T_{j})\ll t(T_{i})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}\rightarrow\infty$
\end_inset

, so 
\begin_inset Formula $(\ref{eq33})\rightarrow1/2$
\end_inset

.
\end_layout

\begin_layout Standard
So, it can be seen that 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 has littel effect on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 as it is contained in both numerator and denominator, but number of interences
 of other tasks to 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

, has the main effect as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig14"

\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure14.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig14"

\end_inset

Effect of 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

 on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:G-RMA-scheduler-with"

\end_inset

G-RMA scheduler with RMA CM against lock-free
\end_layout

\begin_layout Standard
Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) is upper bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

) 
\begin_inset Formula 
\begin{equation}
\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).2.\beta_{i,j}.s_{max}\label{eq34}
\end{equation}

\end_inset

by considering the same assumptions as in sec 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-EDF-scheduler-with"

\end_inset

, and using subscripts 
\begin_inset Formula $k,\, l$
\end_inset

 instead of 
\begin_inset Formula $i,\, j$
\end_inset

 for tasks in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

) as it will be needed to discriminate between them, then the ratio 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).2.\beta_{kl})/t(T_{k})}\label{eq35}
\end{equation}

\end_inset

The main difference between the RMA CM and the lock free is that the former
 is affected only by the higher priority tasks, while the latter is affected
 by all tasks (just as in G-EDF wiht EDF CM), but RMA CM is still affected
 by 
\begin_inset Formula $2.\beta_{i,j}$
\end_inset

 (just as in G-EDF with EDF CM).
 The subtraction of 
\begin_inset Formula $c_{j}$
\end_inset

 in the numerator in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

 may not have a great effect on the ratio of 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

 as the loop retrial cost can also be modified to account for the effect
 of the first interfering instance of 
\begin_inset Formula $T_{j}$
\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) can be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).2.\beta_{kl})/t(T_{k})}\label{eq43}
\end{equation}

\end_inset

If tasks in both numerator and denominator are arranged in non-increasing
 order of priority, so that 
\begin_inset Formula $i=k$
\end_inset

, 
\begin_inset Formula $j=l$
\end_inset

 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\label{eq36}
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j})/t(T_{i})$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}=\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})$
\end_inset

.
 But, 
\begin_inset Formula $T_{j}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, which means 
\begin_inset Formula $D(T_{j})>D(T_{i})$
\end_inset

 because of the G-RMA scheduler, and this means that 
\begin_inset Formula $t(T_{j})>t(T_{i})$
\end_inset

.
 Consequently, 
\begin_inset Formula $\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil=1$
\end_inset

 for all 
\begin_inset Formula $T_{j}$
\end_inset

 and 
\begin_inset Formula $\zeta_{1}=\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})$
\end_inset

, and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

) will be 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil+1).\beta_{kl})/t(T_{k})}\label{eq44}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

 
\begin_inset Formula $\zeta_{1}$
\end_inset

 contains all 
\begin_inset Formula $T_{j}$
\end_inset

 of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $\zeta_{2}$
\end_inset

 contains all 
\begin_inset Formula $T_{l}$
\end_inset

 of higher or equal priority to 
\begin_inset Formula $T_{k}$
\end_inset

, and tasks are arranged in non-increasing order of priority, then for each
 
\begin_inset Formula $T_{i,j}$
\end_inset

, there exists 
\begin_inset Formula $T_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

.
 This can be shown in the following figure.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula $\begin{array}{cccccc}
 & j & 1 & 2 & \cdots & n\\
i\\
1 &  & 0 & 1 & \cdots & 1\\
2 &  & 0 & 0 & \ddots & \vdots\\
\vdots &  & \vdots & \vdots & \ddots & 1\\
n &  & 0 & 0 & \cdots & 0
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{array}{cccccc}
 & l & 1 & 2 & \cdots & n\\
k\\
1 &  & 0 & 0 & \cdots & 0\\
2 &  & 1 & 0 &  & \vdots\\
\vdots &  & \vdots & \ddots & \ddots & 0\\
n &  & 1 & \cdots & 1 & 0
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
where 0 means 
\begin_inset Quotes eld
\end_inset

This pair of 
\begin_inset Formula $i,j$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{1}$
\end_inset

, and this pair of 
\begin_inset Formula $k,l$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{2}$
\end_inset


\begin_inset Quotes erd
\end_inset

, and 1 is the reverse.
 So, it can be seen that both matrices are transpose of each other, consequently
, for each 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 there exist 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

, but the number of times 
\begin_inset Formula $T_{j}$
\end_inset

 accesses a shared object with 
\begin_inset Formula $T_{i}$
\end_inset

 may not be the same as number of times 
\begin_inset Formula $T_{i}$
\end_inset

 accesses that same object, so 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not have to be the same as 
\begin_inset Formula $\beta_{k,l}$
\end_inset

, even if 
\begin_inset Formula $i,j$
\end_inset

 and 
\begin_inset Formula $k,l$
\end_inset

 are transpose of each other.
 So, we can analize behavior of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 depending on the three parameters 
\begin_inset Formula $\beta_{i,j}$
\end_inset

, 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 and 
\begin_inset Formula $\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil$
\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is increased so that 
\begin_inset Formula $\beta_{i,j}\rightarrow\infty$
\end_inset

, 
\begin_inset Formula $\therefore\,(\ref{eq44})\rightarrow\infty$
\end_inset

, and this is natureal as 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 represents times lower priority tasks 
\begin_inset Formula $T_{j}$
\end_inset

 access shared objects with the higher priority task 
\begin_inset Formula $T_{i}$
\end_inset

.
 While this number has a great effect in lock-free, it does not have any
 effect in RMA CM because lower priority tasks does not affect higher priority
 ones, so 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be much greater than 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
Although the minimum value for 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is 1, but from a mathematical point if 
\begin_inset Formula $\beta_{i,j}\rightarrow0$
\end_inset

, then 
\begin_inset Formula $(\ref{eq44})\rightarrow1/2$
\end_inset

.
 Despite changing 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not affect retrial cost of RMA CM as lower priority tasks does not
 affect higher ones, but it does affect retrial cost of lock-free bacause
 contention between tasks will be reduced, thus 
\begin_inset Formula $s_{max}$
\end_inset

 had to be reduced in this case to a little more than half of 
\begin_inset Formula $r_{max}$
\end_inset

(it is 
\begin_inset Quotes eld
\end_inset

a little more
\begin_inset Quotes erd
\end_inset

 because the minimum value of 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is actually 1 not 0).
 The change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\beta_{k,l}\rightarrow\infty\,\therefore\,(\ref{eq44})\rightarrow1/2$
\end_inset

.
 This can be explained as 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 represent number of times a higher priority task 
\begin_inset Formula $T_{l}$
\end_inset

 accesses shared objects with a lower prirority one 
\begin_inset Formula $T_{k}$
\end_inset

.
 In case of RMA CM, this will increase retrial cost, thus reducing 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

.
 But if 
\begin_inset Formula $\beta_{k,l}\rightarrow0,\,\therefore\,(\ref{eq44})\rightarrow\infty$
\end_inset

, which is explained by lower contention from higher priority task 
\begin_inset Formula $T_{l}$
\end_inset

 to the lower priority one 
\begin_inset Formula $T_{k}$
\end_inset

, consequently reduces retrial cost in case of RMA CM and allows 
\begin_inset Formula $s_{max}$
\end_inset

 to be very large compared with 
\begin_inset Formula $r_{max}$
\end_inset

.
 Of course, the actual minimum value for 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 is 1, but this is done for mathematical illustration which is shown in
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

.
\end_layout

\begin_layout Standard
The third parameter that can affect 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is the 
\begin_inset Formula $t(T_{k})/t(T_{l})$
\end_inset

.
 If 
\begin_inset Formula $t(T_{l})\ll t(T_{k}),\,\therefore\,\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil\rightarrow\infty$
\end_inset

, and 
\begin_inset Formula $(\ref{eq44})\rightarrow1/2$
\end_inset

.
 This is explained by a high number of interferences of higher priority
 tasks 
\begin_inset Formula $T_{l}$
\end_inset

 to a lower priority one 
\begin_inset Formula $T_{k}$
\end_inset

 that increases retrial cost in case of RMA CM, consequently, reduces 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

.
 But if 
\begin_inset Formula $t(T_{l})=t(T_{k})$
\end_inset

 (which is the maximum value for 
\begin_inset Formula $t(T_{l})$
\end_inset

 as 
\begin_inset Formula $D(T_{l})\le D(T_{k})$
\end_inset

 because 
\begin_inset Formula $T_{l}$
\end_inset

 is of higher or equal priority to 
\begin_inset Formula $T_{k}$
\end_inset

), 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{k})-c_{l}}{t(T_{l})}\rceil\rightarrow1$
\end_inset

 and the right side of 
\begin_inset Formula $([eq44])\rightarrow\frac{1}{2}+\frac{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})<p(T_{i}))}(2.\beta_{i,j}))/t(T_{i})}{2.\sum_{T_{k}}(\sum_{(T_{l}\in\gamma_{k})\wedge(p(T_{l})\ge p(T_{k}))}(2.\beta_{kl}))/t(T_{k})}$
\end_inset

 which renders the system one of the two previous cases shown in Figures
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure15-a.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15-a"

\end_inset

(a)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure15-b.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15-b"

\end_inset

(b)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig15"

\end_inset

Change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 a) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 vs.
 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 b) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 vs.
 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 c)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
FIFO CM against lock-free
\end_layout

\begin_layout Standard
For both G-EDF and G-RMA with FIFO CM, the retrial cost is the same, and
 the 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 will be
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\nonumber \\
 & \le & 1\label{eq37}
\end{eqnarray}

\end_inset

So, in the case of FIFO CM, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be as large as that of 
\begin_inset Formula $r_{max}$
\end_inset

 without degrading performance than lock free implementation.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparison-between-FMLP"

\end_inset

Comparison between FMLP and G-EDF with EDF CM and FIFO CM
\end_layout

\begin_layout Standard
As FMLP is used with G-EDF, G-EDF with EDF CM and FIFO CM are compared here.
 For the case of non-nested requests, each resource (short or long) will
 be contained in its own group, and the three terms of blocking by FMLP
 can be upper bounded as follows:-
\begin_inset Formula 
\begin{eqnarray*}
BW(T_{i}) & \le & \sum_{s\_\theta\in\theta_{i}}(m-1).|s\_\theta|_{i,max}\\
 & = & N_{i,s}.(m-1).|s\_\theta|_{i,max}\\
 & \le & N_{i,s}.(m-1).|s\_\theta|_{max}
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $N_{i,s}$
\end_inset

 is the number of times 
\begin_inset Formula $T_{i}$
\end_inset

 requests a short resource, and 
\begin_inset Formula $|s\_\theta|_{i,max}$
\end_inset

 is the maximum request for a short resource by 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $|s\_\theta|_{max}$
\end_inset

 is the maximum short request by any task.
 And 
\begin_inset Formula 
\begin{eqnarray*}
NPB(T_{i}) & \le & (1+N_{i,l}).max(BW_{k\ne i}(T_{k})+|s\_\theta|_{k,max})\\
 & \le & (1+N_{i,l}).max(BW_{k\ne i}(T_{k})+|s\_\theta|_{max})\\
 & = & (1+N_{i,l}).|s\_\theta|_{max}.max_{k\ne i}(N_{k,s}.(m-1)+1)
\end{eqnarray*}

\end_inset

and
\begin_inset Formula 
\begin{eqnarray*}
DB(T_{i}) & \le & N_{i,l}.(n-1).|l\_\theta|_{i,max}\\
 & \le & N_{i,l}.(n-1).|l\_\theta|_{max}
\end{eqnarray*}

\end_inset

if 
\begin_inset Formula $|l\_\theta|_{max}\le c1.|s\_\theta|_{max}$
\end_inset

 where 
\begin_inset Formula $c1$
\end_inset

 is the minimum constant that satisfies this relation, then
\begin_inset Formula 
\[
DB(T_{i})\le N_{i,l}.(n-1).c1.|s\_\theta|_{max}
\]

\end_inset

The total blocking of each task is added to its execution time, and as before,
 the total utilization of G-EDF system (with both contention managers) is
 compared to that of FMLP.
 For performance of G-EDF with EDF CM to be better than FMLP, then
\begin_inset Formula 
\begin{eqnarray*}
s_{max}\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i}) & \le|s\_\theta|_{max}\sum_{T_{i}}[( & N_{i,s}.(m-1)+\\
 & + & (1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)\\
 & + & N_{i,l}.(n-1).c1)]/t(T_{i})
\end{eqnarray*}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}\le\frac{\sum_{T_{i}}[(N_{i,s}.(m-1)+(1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)+N_{i,l}.(n-1).c1)]/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\label{eq38}
\end{equation}

\end_inset

and for G-EDF with FIFO CM, this ratio will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}\le\frac{\sum_{T_{i}}[(N_{i,s}.(m-1)+(1+N_{i,l}).max_{k\ne i}(N_{k,s}.(m-1)+1)+N_{i,l}.(n-1).c1)]/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\label{eq39}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
From (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq39"

\end_inset

), it can be seen that 
\begin_inset Formula $T_{i}$
\end_inset

, in FMLP, depends on 
\begin_inset Formula $m,\, n$
\end_inset

 and number of times it requests resources (in contrast to G-EDF with EDF
 or FIFO CM, which depends on number of times the conflicting 
\begin_inset Formula $T_{j}$
\end_inset

 requests resources).
 So, if 
\begin_inset Formula $N_{i,s},\, N_{i,l}$
\end_inset

 and 
\begin_inset Formula $N_{k,s}$
\end_inset

 can all be upper bounded by some constant 
\begin_inset Formula $C_{2}$
\end_inset

, which is the maximum number of times any 
\begin_inset Formula $T_{i}$
\end_inset

 can ask for a short or long resource, then the numerator in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq39"

\end_inset

) is 
\begin_inset Formula $O(n(n+m))$
\end_inset

, while the denominator is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 So, 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}=O(\frac{m}{n})\label{eq45}
\end{equation}

\end_inset

which means, for 
\begin_inset Formula $n<m$
\end_inset

, contention between tasks in both STM and FMLP is low (even for short resources
 in FMLP), but FMLP is more affected by 
\begin_inset Formula $NTB$
\end_inset

.
 But when 
\begin_inset Formula $n>m$
\end_inset

, contention increases, but FMLP arranges requests in a FIFO queue, so it
 is leass affected than EDF CM which sufferes from number of conflicting
 tasks and number of instances of each conflicting one.
 FMLP is not affected by number of instances of each conflicting task, and
 FIFO CM, although arranging requests in a FIFO order, but this order can
 change due to release in higher priority tasks as previously discussed
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Response-time-of FIFO CM"

\end_inset

, so FIFO CM is also affected by number of instances of conflicting tasks.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Comparison-of-OMLP"

\end_inset

Comparison of OMLP with STM
\end_layout

\begin_layout Standard
As blocking time for OMLP is 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
bounded by
\begin_inset Formula 
\[
b_{i}\triangleq\sum_{k=1}^{q}N_{i,k}.2.(m-1).max_{1\le i\le n}\{L_{i,k}\}
\]

\end_inset

where 
\begin_inset Formula $N_{i,k}$
\end_inset

 is the maximum number of times 
\begin_inset Formula $T_{i}$
\end_inset

 requests resource 
\begin_inset Formula $k$
\end_inset

, and 
\begin_inset Formula $L_{i,k}$
\end_inset

 is the maximum length of such a request.
 So, if 
\begin_inset Formula $L_{max}=max_{\forall i,\forall k}L_{i,k}$
\end_inset

, 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\[
bi\le2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}
\]

\end_inset

and for performance of G-EDF with EDF CM to be better than global OMLP,
 then
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}\lceil\frac{t(T_{i})}{t(T_{j})}\rceil.2\beta_{i,j})/t(T_{i})}\label{eq40}
\end{equation}

\end_inset

For G-RMA with RMA CM, the ratio will be
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})\ge p(T_{i}))}(\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).2.\beta_{i,j})/t(T_{i})}\label{eq41}
\end{equation}

\end_inset

and for FIFO CM for both G-EDF and G-RMA schedulers
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}(2.(m-1)\sum_{k=1}^{q}N_{i,k})/t(T_{i})}{\sum_{T_{i}}(\sum_{T_{j}\in\gamma_{i}}((\lceil\frac{t(T_{i})-c_{j}}{t(T_{j})}\rceil+1).\beta_{i,j}))/t(T_{i})}\label{eq42}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\sum_{k=1}^{q}N_{i,k}$
\end_inset

 is upper bounded by 
\begin_inset Formula $C_{3}$
\end_inset

, which is a constant representing the maximum total number of requests
 for resources by any 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{L_{max}}=O(\frac{nm}{n^{2}})=O(\frac{m}{n})\label{eq46}
\end{equation}

\end_inset

for each of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq40"

\end_inset

), (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq41"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq42"

\end_inset

) which is similar to that of FMLP.
\end_layout

\begin_layout Subsection
Conclusion on comparison between synchronization techniques
\end_layout

\begin_layout Standard
Comparison between STM, with the three contention managers, against lock-free
 is somehow different than that between STM and locking protocols in that
 the former have similar parameters that affect retrial cost of both STM
 and lock-free (i.
 e.; number of conflicting tasks, number of instances of these conflicting
 tasks, number of shared objects and number of their requests by conflicting
 tasks).
 So, 
\begin_inset Formula $T_{i}$
\end_inset

 is mostly affected by the nature of other tasks.
 But blocking time in FMLP and OMLP depend on some different parameters
 than that in STM and lock-free, as requests are arranged in a queue, and
 the order of the request in the queue does not change (except for the case
 of the priority queue in OMLP), so blocking time depend on number of tasks
 but not on number of instances of conflicting tasks, and it depends on
 number of requests made by 
\begin_inset Formula $T_{i}$
\end_inset

 itself, and not the coflicting tasks; it also depends on number of processors
 in both protocols, which is not the case in STM and lock-free.
 That is why comparison between STM and locking protocols has the asymptotic
 nature, while in STM and lock-free, effect of different parameters can
 be compared together.
\end_layout

\begin_layout Standard
For the comparison between STM and lock-free, it has been seen that both
 EDF and RMA CM suffer from 
\begin_inset Formula $2.s_{max}$
\end_inset

 retrial cost for each atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

 by one atomic section of 
\begin_inset Formula $T_{j}$
\end_inset

, while FIFO CM does not.
 Retrial in RMA, FIFO CM and lock-free is affected by a larger number of
 conflicting instances than that of EDF CM, while EDF, FIFO CM and lock-free
 can be affected by all other tasks, but RMA CM is affected only by higher
 priority tasks.
 Due to the different parameters affecting STM and lock-free, the 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 differs to keep STM better or good as lock-free.
 In G-EDF with EDF CM, this ratio cannot exceed 1 and it can be kept at
 one half for higher number of conflicting tasks.
 For, G-RMA with RMA CM, it differs according to different parameters, but
 
\begin_inset Formula $s_{max}$
\end_inset

 can be larger than 
\begin_inset Formula $r_{max}$
\end_inset

 by many times at some cases, but the common case to keep STM performance
 well, is to keep it at one half of 
\begin_inset Formula $r_{max}$
\end_inset

.
 For the FIFO CM, 
\begin_inset Formula $s_{max}$
\end_inset

 can be as large as 
\begin_inset Formula $r_{max}$
\end_inset

, so it increased the minimum bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 over that of EDF and RMA CM, but RMA can have a larger 
\begin_inset Formula $s_{max}$
\end_inset

 in some cases.
\end_layout

\begin_layout Standard
So, it appears that each method has its merits and disadvantages.
 It is up to the designer to choose according to the parameters values of
 its application, in addition to noting the simplisity of STM programability,
 in contrast to that of lock-free approache.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Further improvements to ECM and RCM: multi-object transactions and reducing
 retry cost
\end_layout

\begin_layout Subsection
Probelm Description
\begin_inset CommandInset label
LatexCommand label
name "probelm description"

\end_inset


\end_layout

\begin_layout Standard
Previous analysis is suitable only for transactions that share one object,
 but this is not suitable for reality.
 Some reasons that make the analysis for multi-object transactions difficult
 can be illustrated by the following example.
\end_layout

\begin_layout Standard

\series bold
Example 1:
\series default
 Assume three atomic sections 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 belonging to jobs 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

,
\begin_inset Formula $\tau_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

, with priorities 
\begin_inset Formula $p_{1}^{x}>p_{2}^{y}>p_{3}^{z}$
\end_inset

.
 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 share objects, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 share objects, but 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 do not share objects.
 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 can make 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 to retry which in turn will make 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 to retry, this means that 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 is retrying transitively because of 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, which will increase retry cost of 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 Problem gets more complicated if another atomic section 
\begin_inset Formula $s_{4}^{f}$
\end_inset

, belonging to 
\begin_inset Formula $\tau_{4}^{f}$
\end_inset

 where 
\begin_inset Formula $p_{4}^{f}>p_{1}^{x}$
\end_inset

, shares objects with 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, but shares nothing with 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 nor 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 Thus, transitive retry will move from 
\begin_inset Formula $s_{4}^{f}$
\end_inset

 to 
\begin_inset Formula $s_{3}^{z}$
\end_inset

, increasing the retry cost of 
\begin_inset Formula $s_{3}^{z}$
\end_inset

.
 The situation gets worse as more tasks of higer priority are added where
 each task shares objects with its immediate lower priority task.
 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

 may have atomic sections that share objects with 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

, but this will not prevent the effect of transitive retry due to 
\begin_inset Formula $s_{1}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Transitive Retry:
\series default
 A transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 suffers from transitive retry when it conflicts with a higer priority transacti
on 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn conflicts with a higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 Still, when 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 retries due to 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 also retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Thus, the effect of the higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is transitively moved to the lower priority transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, despite they do not conflict on common objects.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "ecm-rcm-transitive-retry"

\end_inset


\end_layout

\begin_layout Standard
ECM and RCM suffer from transitive retry for multi-object transactions.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Example 1, mentioned previously, applies under both ECM and RCM where priority
 for each transaction in ECM is defined as its containing job absolute deadline,
 and in RCM, transaction priority is the period of the containg task.
 Claim follows.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, what is needed here is to extend the set of objects that can make an
 atomic section of lower priority job to retry.
 This can be done by initializing the set of conflicting object to all objects
 accessed by all transactions in the analyzed task, then looping through
 all transactions belonging to all other higher priority tasks, and each
 trasnaction that accesses at least one of the objects in the set of conflicting
 objects is going to add all other objects accessed by this transaction
 to the set.
 This loop over all higher priority tasks is repeated again and again, each
 time with the new set of objects until there is no more transactions accessing
 any object in the set.
 As it seems, this solution can extend the set of conflicting objects too
 much, and may even contain all objects access by all tasks.
\end_layout

\begin_layout Standard
So, what is provided here is a new contention manager that avoids the effect
 of transitive retry.
 This contention manager is called Priority Contention Manager with Negative
 values and First access (PCM-N-F) and is described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f"

\end_inset

.
 For convenince, terms 
\begin_inset Quotes eld
\end_inset

atomic section
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

transaction
\begin_inset Quotes erd
\end_inset

 are used interchangably, and the priority of a transaction is the priority
 of the enclosing job.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f"

\end_inset

Priority Contention Manager with Negative values and First Access (PCM-N-F)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}
\end_layout

\begin_layout Plain Layout


\backslash
footnotesize{
\end_layout

\begin_layout Plain Layout


\backslash
linesnumbered
\end_layout

\begin_layout Plain Layout


\backslash
KwData{
\end_layout

\begin_layout Plain Layout

Executing Transaction: is one that cannot be aborted by any other transaction,
 nor preempted by a higer priority task
\backslash
;
\end_layout

\begin_layout Plain Layout

m
\backslash
_set: m-length set that contains only non-conflicting exececuting transactions
\backslash
;
\end_layout

\begin_layout Plain Layout

n
\backslash
_set: n-length set that contains retrying transactions for n tasks in non-increa
sing order of priority
\backslash
;
\end_layout

\begin_layout Plain Layout

n(z): transaction at index z of the n
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_i^k$: a new released transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_j^l$: one of the executing transactions
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
KwResult{which atomic section(s) is(are) going to commit}
\end_layout

\begin_layout Plain Layout


\backslash
eIf{$s_i^k$ does not conflict with any executing transaction
\backslash
label{s_i^k true}}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

Assign $s_i^k$ as an executing transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

Add $s_i^k$ to the m
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

$s_i^k$ is to commit
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

Add $s_i^k$ to the n
\backslash
_set according to its priority
\backslash
label{move to n}
\backslash
;
\end_layout

\begin_layout Plain Layout

Assign temporal priority to job that owns $s_i^k$ to -1
\backslash
label{priority to -1}
\backslash
;
\end_layout

\begin_layout Plain Layout

The conflicting executing transaction(s) with $s_i^k$ is(are) the one(s)
 to commit
\backslash
label{s_i^k commit}
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
If{$s_j^l$ commits
\backslash
label{s_j^l commits}}
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	
\backslash
For{z=1 to size of n
\backslash
_set
\backslash
label{traverse n_set}}
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		
\backslash
If{n(z) does not conflict with any executing transaction
\backslash
label{n(z) no conflict}}
\end_layout

\begin_layout Plain Layout

		{
\end_layout

\begin_layout Plain Layout

			
\backslash
If{processor available
\backslash
label{processor available}}
\end_layout

\begin_layout Plain Layout

			{
\end_layout

\begin_layout Plain Layout

				Restore priority of task owning n(z)
\backslash
;
\end_layout

\begin_layout Plain Layout

				Assign n(z) as executing transaction
\backslash
;
\end_layout

\begin_layout Plain Layout

				Add n(z) to m
\backslash
_set
\backslash
;
\end_layout

\begin_layout Plain Layout

				n(z) to commit
\backslash
;
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

		move to the next n(z)
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{PCM-N-F} 
\backslash
label{PCM-N-F-algorithm}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
PCM-N-F works as defined in Algorithm 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{PCM-N-F-algorithm}
\end_layout

\end_inset

.
 It manages two sets: the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 which contains at most m non-conflicting transactions, where m is the number
 of processors in the system, as there cannot be more than m executing transacti
ons (or generally, m executing jobs) the the same time.
 When a transaction is entered in the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

, it executes non-preemptively and no other transaction can abort it.
 Any transaction in the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset

Executing Transaction
\begin_inset Quotes erd
\end_inset

.
 This means when a transaction is executing before the arrival of higher
 priority conflicting transactions, then the one that started executing
 first is the one to commit (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_i^k commit}
\end_layout

\end_inset

), hence the term 
\begin_inset Quotes eld
\end_inset

First
\begin_inset Quotes erd
\end_inset

 is in the name of the algorithm.
\end_layout

\begin_layout Standard
The other set is the 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 which holds the the transactions that are retrying because of conflict
 with one or more of the 
\begin_inset Quotes eld
\end_inset

Executing Transactions
\begin_inset Quotes erd
\end_inset

 (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{move to n}
\end_layout

\end_inset

), and 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 stands for the number of tasks in the system.
 It also holds transactions that cannot execute currently because processors
 are busy, either by processing 
\begin_inset Quotes eld
\end_inset

Executing Transactions
\begin_inset Quotes erd
\end_inset

 and/or by processing higher priority jobs.
 Any transaction in the 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 is assigned a temporal priority of 
\begin_inset Quotes eld
\end_inset

-1
\begin_inset Quotes erd
\end_inset

 (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{priority to -1}
\end_layout

\end_inset

), hence the term 
\begin_inset Quotes eld
\end_inset

Negative
\begin_inset Quotes erd
\end_inset

 in the name of the algorithm.
 
\begin_inset Quotes eld
\end_inset

Negative
\begin_inset Quotes erd
\end_inset

 priority is considered smaller than any normal priority, and a transaction
 continues to hold this negative priority until it is moved to the 
\begin_inset Quotes eld
\end_inset

m-set
\begin_inset Quotes erd
\end_inset

 where it restores its normal priority.
 The 
\begin_inset Quotes eld
\end_inset

n-set
\begin_inset Quotes erd
\end_inset

 can hold transactions that had been preempted by higher prirority jobs,
 even if these higher priority jobs do not have transactions to conflict
 with those preempted transactions, hence this set is of length 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 as there can be at most n jobs in the system at the same time.
 This list keeps track even of preempted transactions, because as it will
 be shown, these transactions are examined when any of the executing transaction
 commits, and any of these transactions can restore its original priority
 which can be higher than the preempting job, thus the aborted transaction
 can preempt the job which previously preempted it when the transaction
 was in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
When a new transaction is released, and it does not conflict with any one
 of the executing transactions (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_i^k true}
\end_layout

\end_inset

), then it is going to allocate a slot in the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 and become an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 itself.
 As this transaction is released, this means that its owning task is already
 allocated to processor, so this new transaction does not face the problem
 of unavailable processors.
 This new transaction might have a conflict with any of the transactions
 in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, but as transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 have priorities of -1, so they cannot prevent this new transaction from
 executing if does not conflict with any of the executing transactions.
\end_layout

\begin_layout Standard
When one of the executing transactions commits (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{s_j^l commits}
\end_layout

\end_inset

), then it is time to select one of the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 transactions to commit.
 The 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is traversed from the highest priority transaction to the lower priority
 (where priority here refers to the original priority of the transactions,
 not the -1) (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{traverse n_set}
\end_layout

\end_inset

), and if the examined transaction in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, does not conflict with any executing transaction (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{n(z) no conflict}
\end_layout

\end_inset

), and there is an available processor for it (Step
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\backslash
ref{processor available}
\end_layout

\end_inset

) (where 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

 means either an idle processor, or one that is executing a job of lower
 priority than that of the examined transaction), then this examined transaction
 in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is moved to the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 where it becomes an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 and restores its original prirority.
 If 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 is added to the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, the new 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 is used in comparison against other transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 with lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

.
 So, if one of the transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Formula $s_{d}^{g}$
\end_inset

, is of lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 and is conflicting with 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, it will remain in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 So, the choice of the new transaction from the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 depends on original priority of transactions, hence the term 
\begin_inset Quotes eld
\end_inset

PCM
\begin_inset Quotes erd
\end_inset

 in the name of the algorithm.
 So, the algorithm avoids inturrpting an already executing transaction to
 reduce its retry cost, meanwhile, it tries to avoid delaying the higest
 priority transaction in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 when it is time to select a new one to commit, even if this highest priority
 transaction arrives after other lower priority transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
PCM-N-F properties
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f-transitive-retry"

\end_inset


\end_layout

\begin_layout Standard
Transactions scheduled under PCM-N-F do not suffer from transitive retry.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proof is done by contradiction.
 Assuming a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is retrying because of higher priority transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 which in turn is retrying because of another higher priority transaction
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict, yet, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 It is noted that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot exit together in the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 as they have common objects, but they both can exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 as they both can conflict with other executing transactions.
 So, we have three cases:
\end_layout

\begin_layout Standard

\shape italic
Case 1:
\shape default
 assuming 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an executing transaction, this means that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and when 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, by definition of PCM-N-F, it will be compared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, which contains 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, and it will be found that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 Also, by definition of PCM-N-F, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared aginst transactions in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 when it newly arrives, as priorities of 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 transaction is lower than any normal priority.
 So, if there are available processors and 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with any other executing transaction, it joins the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

 and becomes an 
\begin_inset Quotes eld
\end_inset

executing transaction
\begin_inset Quotes erd
\end_inset

 which contradicts the assumption that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
\end_layout

\begin_layout Standard

\shape italic
Case 2:
\shape default
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is an executing transaction.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, it will conflict with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and joins the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 Now, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, not 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
 When 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits, the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 is traversed from the highest priority transaction to the lowest one; if
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 does not conflict with any other executing transaction and there are available
 processors, 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 becomes an executing transaction.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is compared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, it is found that it does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, and if it also does not conflict with any other executing transaction
 and there are available processors, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes and executing transaction, which means 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 are executing concurrently.
 This also violates the assumption of transitive retrying.
\end_layout

\begin_layout Standard

\shape italic
Case 3:
\shape default
 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 both exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives and comared against the 
\begin_inset Quotes eld
\end_inset

m_set
\begin_inset Quotes erd
\end_inset

, it can become an executing transaction if it does not conflict with any
 executing one and there available processors.
 Despite 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 have common objects with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared aginst 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 which is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is going to join the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, this is done because it conflicts with one or more executing transactions
 or due to lack of processors, not because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 which violates the transitive retry assumption.
\end_layout

\begin_layout Standard
If the three transactions exist in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and it is time to choose the new executing transactions.
 If 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is chosen, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 remains in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

 and this leads to Case 1, but if 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is chosen, because 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 conflicts with another executing transaction but 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 does not, then this leads to Case 2.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "first-access"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property (
\begin_inset Quotes eld
\end_inset

F
\begin_inset Quotes erd
\end_inset

 term in PCM-N-F) is important to avoid increased retry cost of transactions
 suffering from transitive retry.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proof is done by contradiction.
 Assuming retry cost of transactions in the absence of 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property is the same when 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 exists.
 Then, 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 is assumed to not apply to PCM-N-F, and executing transactions can be aborted.
 Assuming only three transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, where priority of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is higher than priority of 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn has a higher priority than that of 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 Assuming 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 conflicts with both 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict together.
 If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives when 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an executing transaction and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can be an executing transaction itself while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is retrying.
 But if 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 did not commit at least when 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 commit, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 can become an executing transaction, and because of lack of 
\begin_inset Quotes eld
\end_inset

First access
\begin_inset Quotes erd
\end_inset

 property, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will enforce 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to retry.
 So, the retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 will be 
\begin_inset Formula $len(s_{z}^{h}+s_{j}^{l})$
\end_inset

, which is the same retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 if it had been transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 which contradicts with the first assumption.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
PCM-N-F handles multi-object transactions better than ECM and RCM.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
From Claims 
\begin_inset CommandInset ref
LatexCommand ref
reference "ecm-rcm-transitive-retry"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-transitive-retry"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "first-access"

\end_inset

, it appears that PCM-N-F does not increase retry cost of multi-object transacti
ons, in contrast to what is done under ECM and RCM.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "higher retry does not affect response"

\end_inset


\end_layout

\begin_layout Standard
Any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is not affected by retry cost in any other job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Because of the behavior of PCM-N-F, any retrying transaction is assigned
 a temportal priority of -1, which is lower than any other priority.
 So, when 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is released, it will have a higher priority than any higher or lower priority
 job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 with temporal priority of -1.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Retry Cost under PCM-N-F
\end_layout

\begin_layout Standard
To determine an upper bound for transactions under PCM-N-F, the following
 Claims are introduced.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "two transactions retry cost pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming only two conflicting transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

.
 Under PCM-N-F, the maximum retry cost suffered by 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is 
\begin_inset Formula $len(s_{j}^{l})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By definition of PCM-N-F, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 cannot have started before 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, otherwise, it would have been an executing transaction and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot abort it, whether 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is of higher or lower priority than 
\begin_inset Formula $s_{i}^{k}$
\end_inset

.
 So, at most, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 have started just after 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, and it has to wait until 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits, so 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can start.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The retry cost for any job 
\begin_inset Formula $\tau_{i}^{k}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 due to conflict between its transactions and transactions of other jobs
 under PCM-N-F is upper bounded by 
\begin_inset Formula 
\begin{equation}
RC(L)\le\sum_{\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)\right)\label{rc-pcm-n-f}
\end{equation}

\end_inset

where 
\begin_inset Formula $\bar{s_{j}^{k}(\theta)}$
\end_inset

 is the same as 
\begin_inset Formula $s_{j}^{k}(\theta)$
\end_inset

, but if 
\begin_inset Formula $s_{j}^{k}$
\end_inset

 accesses more than one object 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

, then 
\begin_inset Formula $len(s_{j}^{k})$
\end_inset

 is included only once in the last summation as a representative of all
 accessed objects by 
\begin_inset Formula $s_{j}^{k}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Assuming a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 belonging to job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 The worst case scenario for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 occurs when it conflicts with one or more executing transactions, then
 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has to wait in the 
\begin_inset Quotes eld
\end_inset

n_set
\begin_inset Quotes erd
\end_inset

, and all higher priority transactions conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 are chosen before 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to be executing transaction.
 When a higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, conflicting with 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, becomes an executing transaction, another lower priority transaction 
\begin_inset Formula $s_{l}^{f}$
\end_inset

- which does not conflict with any executing transaction- can become an
 executing transaction itself.
 Thus, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 can wait for both higher and lower priority conflicting transactions.
 
\begin_inset Formula $\bar{s_{j}^{k}(\theta)}$
\end_inset

 is used because 
\begin_inset Formula $s_{j}^{k}$
\end_inset

 does not repeat itself for each object it access, in addition to the notion
 that the same 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

 cannot enforce more than one transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 to retry because if 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

, enforces 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to retry, this means that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, or 
\begin_inset Formula $s_{l}^{f}$
\end_inset

, is an executing transaction and it will commit before the next transaction
 in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 arrives.
 Combining this with Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "two transactions retry cost pcm-n-f"

\end_inset

 and the maximum number of jobs of any task 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfere with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during interval 
\begin_inset Formula $L$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{j}}\right\rceil +1$
\end_inset

, then Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "delay"

\end_inset


\end_layout

\begin_layout Standard
The delay time, for a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, due to lower priority jobs, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
D(\tau_{i}^{x})\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{h}}}len\left(\bar{s_{j}^{h}}\right)\right)\right\rfloor \label{pcm-n-f-delay}
\end{equation}

\end_inset

where 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is delay time suffered by 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to lower priority jobs, 
\begin_inset Formula $\bar{\tau_{j}^{l}=\{\tau_{j}^{l}:p_{j}^{l}<p_{i}^{x}\}}$
\end_inset

 and 
\begin_inset Formula $\bar{s_{j}^{h}}=\{s_{j}^{h}:s_{j}^{h}\, does\, not\, conflict\, with\, any\, s_{i}^{k}\}$
\end_inset

.
 During this delay time, all processor are unavailable for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lower priority jobs can delay 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 only at executing transactions of these jobs, because executing transactions
 are non-preemptive.
 These lower priority executing transactions can be conflicting with transaction
s in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, in which case, their effect is retry cost to 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 which is already included in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

.
 When these lower priority transactions are non-conflicting with any transaction
 in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, they act as if they were higher priority jobs interfering with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 whose interference workload (which is the delay they casue to 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

) can be calculated by Theorem 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

.
 If not all processors are busy with these lower priority transactions,
 then 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 can run in parallel with them on a free processor because these lower priority
 transactions are non-conflicting with any transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, but the problem appears all processors are busy with higher priority jobs
 and/or lower priority non-conflicting transactions.
 So, during the delay time, no processors are available for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response time ecm pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming a multiprocessor system scheduled with G-EDF and synchronization
 is done by STM with PCM-N-F used as the contention manager.
 The response time of a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D_{edf}(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}

\end_inset

where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

), and 
\begin_inset Formula $D_{edf}(\tau_{i}^{x})$
\end_inset

 is the same as 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

, defined in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

, but for G-EDF scheduled systems, (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

) is modified to 
\begin_inset Formula 
\begin{eqnarray}
D_{edf}(\tau_{i}^{x}) & \le & \left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\begin{cases}
0 & ,L\le T_{i}-T_{j}\\
\sum_{\forall\bar{s_{j}^{h}}}len\left(\bar{s_{j}^{h}}\right) & ,L>T_{i}-T_{j}
\end{cases}\right\rfloor \label{d-edf}
\end{eqnarray}

\end_inset

and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Response time for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is calculated as in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

 except that delay time of lower priority tasks is added as defined by Claim
 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, but as G-EDF uses absolute deadlines for scheduling, this affects which
 jobs can be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and which will be of higher priority as follows: During 
\begin_inset Formula $T_{i}$
\end_inset

, all instance of task 
\begin_inset Formula $\tau_{j}$
\end_inset

 will be of higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 except the instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that is released after 
\begin_inset Formula $T_{i}-T_{j}$
\end_inset

, because that last instance will have a longer absolute deadline than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 So, as our interest only in interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, then there can be only one instance of each task (that is why 
\begin_inset Formula $\left\lceil \frac{L}{T_{j}}\right\rceil +1$
\end_inset

 in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

 is replaced with 1 in the second case in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

) interfering with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, that can have a lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, and this lower priority instance is released only if 
\begin_inset Formula $L>T_{i}-T_{j}$
\end_inset

 (this is why 0 is used in the first case in (
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

)).
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is defined by Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

 instead of Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

 (which is used in ECM) because- in contrast to ECM- retry cost of higher
 priority jobs does not affect response time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 as proved in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "higher retry does not affect response"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response rcm pcm-n-f"

\end_inset


\end_layout

\begin_layout Standard
Assuming a multiprocessor system scheduled with G-RMA and synchronization
 is done by STM with PCM-N-F used as the contention manager.
 Response time of job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is upper bounded by 
\begin_inset Formula 
\begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}

\end_inset

where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

), 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

), and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The proof is the same as for Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "response time ecm pcm-n-f"

\end_inset

 except that G-RMA uses static priority for tasks, so (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f-delay"

\end_inset

) can be used directly for calculating 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 without modifications.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Comparison between PCM-N-F and concurrency controls
\end_layout

\begin_layout Standard
In this section, schedulability of G-EDF (G-RMA) systems with PCM-N-F used
 for STM concurrency control will be compared against ECM (RCM) systems,
 as well as retry-loop lock-free systems to understand when PCM-N-F will
 perform better.
 Toward this, total utilization of PCM-N-F with the corresponding scheduler
 is compared against other methods.
 Inflated execution time of each method (which is the sum of the WCET of
 the task and its retry cost) is used in calculating utilization of each
 task.
\end_layout

\begin_layout Standard
In the case of PCM-N-F, delay time caused by lower priority jobs to higher
 priority jobs as defined in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, is not considered in utilization calculation because during this time,
 as proved in Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, no processor is available for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

.
 So, this time is not added to the inflated execution time of 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 because the processor is busy with some other job.
\end_layout

\begin_layout Standard
If retry cost caused by concurrency control method 
\begin_inset Formula $A$
\end_inset

 to any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

 is 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

, and the retry cost by method 
\begin_inset Formula $B$
\end_inset

 to the same task is 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

, then schedulability of method 
\begin_inset Formula $A$
\end_inset

 is comparable to method 
\begin_inset Formula $B$
\end_inset

 if 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{c_{i}+RC_{B}(T_{i})}{T_{i}}\nonumber \\
\sum_{\forall\tau_{i}}\frac{RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{RC_{B}(T_{i})}{T_{i}}\label{utilization comparison}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Retry cost of ECM, RCM and lock-free for any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 includes retry cost due to conflict between transactions of other tasks
 with 
\begin_inset Formula $\tau_{i}$
\end_inset

's transactions, and retry cost caused by preemption of 
\begin_inset Formula $\tau_{i}$
\end_inset

's instances due to release of higher priority jobs.
 Retry due to release of higher priority jobs does not exist in PCM-N-F
 because executing transactions are running non-preemptively.
 Also, in the case of ECM, RCM the set of common objects is modified as
 mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "probelm description"

\end_inset

.
 This new set of objects will be denoted as 
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset

 as the extended set of objects that can make conflict to any transaction
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\gamma_{i}^{ex}$
\end_inset

 can include non-accessed, as well as, accessed objects by any transactino
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

, which is not the case for 
\begin_inset Formula $\gamma_{i}$
\end_inset

 (used by PCM-N-F) which is the set of only accessed objects by any transaction
 in 
\begin_inset Formula $\tau_{i}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
PCM-N-F versus ECM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pcm-n-f ecf comaprison clm"

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with G-EDF is better or equal to schedulab
ility performance of ECM if length of each atomic section that accesses
 a specific object in any task is lower or equal to the maximum length of
 any atomic section in other task that accesses the same object.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituing 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq7"

\end_inset

) respectively.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f edf comparison 1}\\
\le & \sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{ex}}\sum_{\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can enforce transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry.
 Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
 Then it can be assumed that 
\begin_inset Formula $g(\tau_{i})=\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}^{*}}\sum_{\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{*}(\theta)\right)\right)\right)+\left(\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}}\right)}{T_{i}}$
\end_inset

.
 By substituting 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 and subtracting 
\begin_inset Formula $\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}$
\end_inset

 from both sides of (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f edf comparison 1"

\end_inset

), we get 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}} & \le\label{pcm-n-f ecm comparison 2}\\
\sum_{\forall\tau_{i}}\frac{\left(\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)\right)\right)}{T_{i}} & + & g(\tau_{i})\nonumber 
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecm comparison 2"

\end_inset

) that by keeping every 
\begin_inset Formula $len(\bar{s_{j}^{k}(\theta)})\le len(s_{max}^{j}(\theta))$
\end_inset

 for each 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\tau_{j}\in\gamma_{i}$
\end_inset

 and 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecm comparison 2"

\end_inset

) holds, besides, 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 can belong to any other task than 
\begin_inset Formula $\tau_{j}$
\end_inset

 because of the dynamic priority of G-EDF.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PCM-N-F versus RCM
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with G-RMA tends to be better or equal
 to schedulability performance of RCM if conflict effect of higher priority
 tasks to lower priority tasks increases.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By substituting 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 with 
\begin_inset Formula 
\[
\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)
\]

\end_inset

where 
\begin_inset Formula $\tau_{j}^{*}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}>p_{i}\right)\right\} $
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) becomes 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f rcm comparison 1}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{ex}}\sum_{\forall\theta\in\theta_{i}^{ex}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}\nonumber 
\end{eqnarray}

\end_inset

As assumed in the proof of Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f ecf comaprison clm"

\end_inset

, 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 and 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

.
 It is also assumed that 
\begin_inset Formula 
\[
g(\tau_{i})=\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}^{*}}\sum_{\forall\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)+\sum_{\forall\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil s_{i_{max}}\right)}{T_{i}}
\]

\end_inset

and 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

 where 
\begin_inset Formula $\bar{\tau_{j}}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}<p_{i}\right)\right\} $
\end_inset

, thus 
\begin_inset Formula $\tau_{j}^{*}\cap\bar{\tau_{j}}=\phi$
\end_inset

.
 By substitution of the previous assumptions in (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 1"

\end_inset

), we get 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset

For each 
\begin_inset Formula $\tau_{j}\in\bar{\tau_{j}}$
\end_inset

, 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

 because under G-RMA system for implicit deadline tasks, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

 when 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

.
 Then 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
+ & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})
\end{eqnarray*}

\end_inset


\begin_inset Formula $\therefore$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
 & 2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)}{T_{i}}\label{pcm-n-f rcm comparison 2}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}^{*}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)}{T_{i}}+g(\tau_{i})\nonumber 
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) that with increasing number of higher priority tasks, and their instances
 conflicting with lower priority ones , as well as, increasing number of
 shared objects, (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) tends to hold.
 By increasing number of shared objects between higher and lower priority
 tasks, 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 also increases, which allows (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f rcm comparison 2"

\end_inset

) to hold more.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
PCM-N-F versus lock-free
\end_layout

\begin_layout Standard
As retry-loop lock-free accessed only one object, number of accessed objects
 per transaction in PCM-N-F is limited to one to enable schedulability compariso
n between PCM-N-F and retry-loop lock-free algorithm.
 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) is replaced with 
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+\begin{cases}
\sum_{\forall\tau_{j}\in\zeta_{i}}\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor r_{max} & ,for\, G-EDF\\
\sum_{\forall\tau_{j}^{*}}\left\lceil \frac{T_{i}}{T_{j}}\right\rceil r_{max} & ,for\, G-RMA
\end{cases}\nonumber \\
= & \sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+g(\tau_{i})\label{retry-loop higher release}
\end{eqnarray}

\end_inset

where the first summation is defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 and the second summation is the retry cost due to release of higher priority
 tasks.
 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is number of retry loops of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that access the same object as accessed by some retry loop of 
\begin_inset Formula $\tau_{i}$
\end_inset

, and 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of
 any task.
 Despite 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 is concerned with lock-free concurrency control for G-EDF systems, but
 the same retry cost can be applied for G-RMA systems because higher priority
 tasks can loop on objects held by lower priority ones.
 But retry cost due to release of higher priority jobs differes from G-EDF
 systems to G-RMA systems.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Schedulability performance of PCM-N-F with either G-EDF or G-RMA is better
 or equal to schedulability performance of retry-loop lock-free synchronization
 if maximum length of any transaction, 
\begin_inset Formula $s_{max}$
\end_inset

, is less than or equal to the maximum execution cost of a single iteration
 of any retry loop of any task, 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) be replaced with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 with (
\begin_inset CommandInset ref
LatexCommand ref
reference "retry-loop higher release"

\end_inset

).
 To simpilify comparison, (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-pcm-n-f"

\end_inset

) is upper bounded by 
\begin_inset Formula 
\[
RC(T_{i})=\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}s_{max}\right)
\]

\end_inset

where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is as defined above, and 
\begin_inset Formula $s_{max}$
\end_inset

 is the maximum transaction length.
 Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}s_{max}\right)}{T_{i}} & \le\nonumber \\
\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+g(\tau_{i})}{T_{i}}\label{pcm-n-f lock-free comparison}
\end{eqnarray}

\end_inset

It appears from (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f lock-free comparison"

\end_inset

) that if 
\begin_inset Formula $s_{max}\le r_{max}$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "pcm-n-f lock-free comparison"

\end_inset

) holds.
 Claim follows.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Design of a new real-time length-based contention manager with priority
 (LCM)
\end_layout

\begin_layout Standard
For both G-EDF/EDF CM (ECM) and G-RMA/RMA CM (RCM), 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 can be totally repeated if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

- which belongs to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 than 
\begin_inset Formula $T_{i}$
\end_inset

- interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at the end of its execution, while 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is just about to commit.
 So, the LCM  takes the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, as well as 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

, into consideration when deciding which transaction should abort.
 The LCM  can also consider priority of the conflicting tasks.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sec 9.1"

\end_inset

Design rationale of LCM 
\end_layout

\begin_layout Standard
It is assumed that 
\begin_inset Formula $len(s_{j}^{l}(\theta))=c_{m}len(s_{i}^{k}(\theta))$
\end_inset

, where 
\begin_inset Formula $c_{m}\in]0,\infty[$
\end_inset

, to cover all possible lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 The idea is to reduce the opportunity of abortion of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 when it is close to commit when it is interfered, and 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is large.
 This abortion opportunity increases more and more as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to its end of execution, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 gets larger.
 On the other side, as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is early interfered, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is small compared to the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 To decide whether 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 should abort or not, we use a threshold value 
\begin_inset Formula $\psi\in[0,1]$
\end_inset

, that determines the length percentage of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

-
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

- below which 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will abort due to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

.
 If abort percent (abort opportunity) is 0, this means 
\begin_inset Quotes eld
\end_inset

do not abort
\begin_inset Quotes erd
\end_inset

, but if it is 1, this means 
\begin_inset Quotes eld
\end_inset

abort
\begin_inset Quotes erd
\end_inset

.
 Any value between them means 
\begin_inset Quotes eld
\end_inset

to aport with an opportunity equal to this value
\begin_inset Quotes erd
\end_inset

.
 The behaviour of LCM  is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure16.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig16"

\end_inset

Interference of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 by various length 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

 represents five different lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interfering with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at all points of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 For a specific curve (which means a specific length for 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

), 
\begin_inset Formula $\psi$
\end_inset

 value determines the percentage of 
\begin_inset Formula $len(s_{i}^{k}(\theta))$
\end_inset

 above which 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be aborted.
 For example, for 
\begin_inset Formula $len(s_{j}^{l}(\theta))=0.1\times len(s_{i}^{k}(\theta))$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be aborted by 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 if the latter interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 no later than 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 reaches 
\begin_inset Formula $\alpha3$
\end_inset

 percentages of its length.
 After that, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will have to retry.
 As 
\begin_inset Formula $len(s_{j}^{k}(\theta))$
\end_inset

 decreases, the opportunity that it will abort 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at a higher percentage 
\begin_inset Formula $\alpha_{max}$
\end_inset

 increases, as 
\begin_inset Formula $\alpha3>\alpha2>\alpha1$
\end_inset

.
 The chosen function to represent different curves in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

 is 
\begin_inset Formula 
\begin{equation}
f(c_{m},\alpha)=e^{\frac{-c_{m}\alpha}{1-\alpha}}\label{eq49}
\end{equation}

\end_inset

where 
\begin_inset Formula $c_{m}$
\end_inset

 is fixed for a specific curve, but 
\begin_inset Formula $\alpha$
\end_inset

 changes along each curve.
 This function acheives the desired requirements that the abortion opportunity
 is reduced as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to its end of execution (as 
\begin_inset Formula $\alpha\rightarrow1,\, f(c_{m},1)\rightarrow0$
\end_inset

), or as the length of the conflicting transaction is large (as 
\begin_inset Formula $c_{m}\rightarrow\infty,\, f(\infty,\alpha)\rightarrow0$
\end_inset

).
 Meanwhile, this abort opportunity is increased as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is interfered closer to its release (as 
\begin_inset Formula $\alpha\rightarrow0,\, f(c_{m},0)\rightarrow1$
\end_inset

), or as length of conlicting transaction decreases (as 
\begin_inset Formula $c_{m}\rightarrow0,\, f(0,\alpha)\rightarrow1$
\end_inset

).
 It should be noted that all lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 are normalized to the same unit length, this way different values of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 intercept different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at the same percentage 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 (the 
\begin_inset Formula $\alpha$
\end_inset

 value the corresponds the threshold value 
\begin_inset Formula $\psi$
\end_inset

), but the actual length of interception for different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 differ according to 
\begin_inset Formula $len(s_{i}^{k}(\theta))$
\end_inset

 (i.e., let 
\begin_inset Formula $len(s_{i}^{k}(\theta))\ne len(s_{i}^{k+1}(\theta))$
\end_inset

, then for one 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, both 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{i}^{k+1}(\theta)$
\end_inset

 will be intercepted at the same value 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

, but 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k}(\theta))$
\end_inset

 differs from 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k+1}(\theta))$
\end_inset

).
 This normalization of different lengths of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is done to simplify calculations.
\end_layout

\begin_layout Standard
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 belongs to a higher priority task than 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

.
 If 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 starts before or at the same start time of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, then 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will have to abort and retry until 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 finishes execution.
 But if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 starts after 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, then the comparison illustrated in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec 9.1"

\end_inset

 will be applied.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage to acheive the threashold value 
\begin_inset Formula $\psi$
\end_inset

, then the maximum retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 due to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
\alpha_{max}^{jl}len(s_{i}^{k}(\theta))+len(s_{j}^{l}(\theta))\label{eq47}
\end{equation}

\end_inset

because if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at a 
\begin_inset Formula $\Upsilon$
\end_inset

 percentage, where 
\begin_inset Formula $\Upsilon<\alpha_{max}^{jl}$
\end_inset

, then the maximum retrial cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will be 
\begin_inset Formula $\Upsilon len(s_{i}^{k}(\theta))+len(s_{j}^{l}(\theta))$
\end_inset

 which is lower than that calculated in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq47"

\end_inset

).
 And if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage, then 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will not abort.
\end_layout

\begin_layout Standard
It should be noted that a higher priority task, 
\begin_inset Formula $T_{j}$
\end_inset

, can be blocked by a lower priority one, 
\begin_inset Formula $T_{i}$
\end_inset

, if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after the the 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 percentage.
 This blocking time of 
\begin_inset Formula $T_{j}$
\end_inset

, due to 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, is upper bounded by 
\begin_inset Formula 
\begin{equation}
(1-\alpha_{max}^{jl})len(s_{i}^{k}(\theta))\label{eq48}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
This part comes from the DATE12 paper, so it has some different notations
 that that mentioned here, but it contains important information
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout

\backslash
begin{clm} 
\backslash
label{priority_inversion} A higher priority job, $
\backslash
tau_i^z$, suffers from priority inversion for at most number of atomic sections
 in $
\backslash
tau_i^z$.
 
\backslash
end{clm} 
\backslash
begin{proof} Assuming three atomic sections, $s_i^k(
\backslash
theta)$, $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$, where $p_j > p_i$ and $s_j^l(
\backslash
theta)$ interferes with $s_i^k(
\backslash
theta)$ after $
\backslash
alpha_{ij}^{kl}$.
 Then $s_j^l(
\backslash
theta)$ will have to abort and retry.
 At this time, if $s_a^b(
\backslash
theta)$ interferes with the other two atomic sections, and the LCM decides
 which transaction to commit based on comparison between each two transactions.
 So, we have the following cases:- 
\backslash
begin{itemize} 
\backslash
item $p_a < p_i < p_j$, then $s_a^b(
\backslash
theta)$ will not abort any one because it is still in its beginning and
 it is of the lowest priority.
 So.
 $
\backslash
tau_j$ is not indirectly blocked by $
\backslash
tau_a$.
 
\backslash
item $p_i<p_a<p_j$ and even if $s_a^b(
\backslash
theta)$ interferes with $s_i^k(
\backslash
theta)$ before $
\backslash
alpha_{ia}^{kb}$, so, $s_a^b(
\backslash
theta)$ is allowed abort $s_i^k(
\backslash
theta)$.
 Comparison between $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$ will result in LCM choosing $s_j^l(
\backslash
theta)$ to commit and abort $s_a^b(
\backslash
theta)$ because the latter is still beginning, and $
\backslash
tau_j$ is of higher priority.
 If $s_a^b(
\backslash
theta)$ is not allowed to abort $s_i^k(
\backslash
theta)$, the situation is still the same, because $s_j^l(
\backslash
theta)$ was already retrying until $s_i^k(
\backslash
theta)$ finishes.
 
\backslash
item $p_a>p_j>p_i$, then if $s_a^b(
\backslash
theta)$ is chosen to commit, this is not priority inversion for $
\backslash
tau_j$ because $
\backslash
tau_a$ is of higher priority.
 
\backslash
item if $
\backslash
tau_a$ preempts $
\backslash
tau_i$, then LCM will compare only between $s_j^l(
\backslash
theta)$ and $s_a^b(
\backslash
theta)$.
 If $p_a<p_j$, then $s_j^l(
\backslash
theta)$ will commit because of its task's higher priority and $s_a^b(
\backslash
theta)$ is still at its beginning, otherwise, $s_j^l(
\backslash
theta)$ will retry, but this will not be priority inversion because $
\backslash
tau_a$ is already of higher priority than $
\backslash
tau_j$.
 If $
\backslash
tau_a$ does not access any object but it preempts $
\backslash
tau_i$, then CM will choose $s_j^l(
\backslash
theta)$ to commit as only already running transactions are competing together.
 
\backslash
end{itemize} So, by generalizing these cases to any number of conflicting
 jobs, it is seen that when an atomic section, $s_j^l(
\backslash
theta)$, of a higher priority job is in conflict with a number of atomic
 sections belonging to lower priority jobs, $s_j^l(
\backslash
theta)$ can suffer from priority inversion by only one of them.
 So, each higher priority job can suffer priority inversion at most its
 number of atomic section.
 Claim follows.
 
\backslash
end{proof} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Response time of G-EDF/LCM
\end_layout

\begin_layout Standard
By applying the same analogy used to derive equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

), we find that 
\begin_inset Formula $RC(T_{i})$
\end_inset

 can be upper bounded by assuming each conflicting atomic section, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, causing a retry to the maximum length atomic section that accesses object
 
\begin_inset Formula $\theta$
\end_inset

, and this retry will be 
\begin_inset Formula $len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))$
\end_inset

, where 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

 at which 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 forces 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 to retry.
 But the subtracted 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will be replaced by 
\begin_inset Formula $\alpha_{max}^{*}s_{max}(\theta)$
\end_inset

 where 
\begin_inset Formula $\alpha_{max}^{*}=min_{\forall j,\forall l}\{\alpha_{max}^{jl}\}$
\end_inset

, because we are calculating the worst case retry cost, so the minimum percentag
e of 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

 should be the one to subtract.
 Also, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 is replaced by 
\begin_inset Formula $\hat{\alpha}_{max}s_{i_{max}}(\theta)$
\end_inset

 where 
\begin_inset Formula $\hat{\alpha}_{max}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{i_{max}}(\theta))$
\end_inset

 at which any of the conflicting atomic sections will enforce 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 to retry.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

) will be 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
RC(t(T_{i})) & \le & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))\nonumber \\
 &  & -\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))\label{eq50}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The same way, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray}
RC(t(T_{i})) & \le & \sum_{\theta\in\theta_{i}}((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))\nonumber \\
 &  & -\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))\label{eq51}
\end{eqnarray}

\end_inset

and 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will be calculated as in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq5"

\end_inset

) but with using equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq50"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq51"

\end_inset

) for each object 
\begin_inset Formula $\theta$
\end_inset

 instead of equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4"

\end_inset

) to get equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))\\
\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)\in s_{j}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq53}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
To get a tighter retry cost, the same rationale of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq15"

\end_inset

) can be used to get equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
RC(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l^{*}}(\theta)}len(s_{j}^{l^{*}}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta)))+\\
(\lfloor\frac{t(T_{i})}{t(T_{j})}\rfloor\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{j}\in\gamma(\theta)}(\sum_{\forall s_{j}^{l^{*}}(\theta)}len(s_{j}^{l^{*}}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq52}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
As was said in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec 9.1"

\end_inset

, 
\begin_inset Formula $T_{i}$
\end_inset

 can be blocked by a lower priority task 
\begin_inset Formula $T_{h}$
\end_inset

, if an atomic section of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 interferes with one of the atomic sections in 
\begin_inset Formula $T_{h}$
\end_inset

,
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, after the maximum allowed percentage of 
\begin_inset Formula $len(s_{h}^{z}(\theta))$
\end_inset

, then, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will abort and retry until 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

 finishes.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 be the studied instance of 
\begin_inset Formula $T_{i}$
\end_inset

.
 For the case of G-EDF, there can be at most only one instance of 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $T_{h}^{v}$
\end_inset

, during 
\begin_inset Formula $t(T_{i})$
\end_inset

, that can have a lower priority (larger absolute deadline) than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 As it was shown that the worst interference pattern of 
\begin_inset Formula $T_{h}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

 occurs when the absolute deadline of one instance of 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, coincides with the absolute deadline of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 This means that the 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 will be the first instance of 
\begin_inset Formula $T_{h}$
\end_inset

 with lower priority than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 will be released after 
\begin_inset Formula $d(T_{i}^{x})$
\end_inset

, so it will not block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 So, to get the instance of 
\begin_inset Formula $T_{h}$
\end_inset

 that can block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, the worst interference pattern is shifted a little to the right, as shown
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

, so that 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 will be a carried-out job that can block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure17-a.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17-a"

\end_inset

No blocking to 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/figure17-b.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17-b"

\end_inset

Blocking to 
\begin_inset Formula $T_{i}$
\end_inset

 by 
\begin_inset Formula $T_{h}^{p}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig17"

\end_inset

Interference to 
\begin_inset Formula $T_{i}$
\end_inset

 by higher and lower priority tasks
\end_layout

\end_inset


\end_layout

\end_inset

So, we have two cases for 
\begin_inset Formula $T_{i}$
\end_inset

.
 The first one shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-a"

\end_inset

 which represents the worst case interference pattern of 
\begin_inset Formula $T_{h}$
\end_inset

 to 
\begin_inset Formula $T_{i}$
\end_inset

.
 
\begin_inset Formula $T_{i}$
\end_inset

 does not suffer blocking because 
\begin_inset Formula $T_{h}^{p+1}$
\end_inset

 is released after the absolute deadline of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 sufferes only from retry cots due to instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, and the retry cost is given in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) and its tighter form (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
 The other case is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

, where the interference pattern in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-a"

\end_inset

 is shifted to the right, so priority of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 is lower than that of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 So, 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 suffers retry cost due to instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p-1}$
\end_inset

, and suffers blocking (as in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq48"

\end_inset

)) due to instance 
\begin_inset Formula $T_{h}^{p}$
\end_inset

.
 Any further instance than 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 cannot block 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 because they all start after 
\begin_inset Formula $d(T_{i}^{x})$
\end_inset

.
 The retry and blocking costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be obtained by modifying equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) to include only instances 
\begin_inset Formula $T_{h}^{1}$
\end_inset

 to 
\begin_inset Formula $T_{h}^{p-1}$
\end_inset

 in the retry cost, and 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 in the blocking cost.
 But as priority of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 is higher than that of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

, then any atomic section 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 in 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 can be blocked by only one conflicting atomic section, 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, of 
\begin_inset Formula $T_{h}^{p}$
\end_inset

.
 This is because after 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 will at most start at the same time as any further conflicting atomic section
 in 
\begin_inset Formula $T_{h}^{z}$
\end_inset

, and as 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 belongs to a higher priority task, then the LCM -P will allow it to commit
 first.
 On the other hand, one atomic section in 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, can block multiple atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 because any atomic section with a suitable length in any other task can
 enforce 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

 to retry multiple times, causing multiple atomic sections in 
\begin_inset Formula $T_{i}$
\end_inset

 to interfer with 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

.
 So, the worst case for blocking of 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 by 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 occurs if all atomic sections in 
\begin_inset Formula $T_{i}^{x}$
\end_inset

 that access a specific object 
\begin_inset Formula $\theta$
\end_inset

 are blocked by the maximum-length atomic section in 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 as shown in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq55"

\end_inset

).
\begin_inset Formula 
\begin{equation}
B_{ih}\le\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{max}^{iy})len(s_{h_{max}}(\theta))\label{eq55}
\end{equation}

\end_inset

where 
\begin_inset Formula $\alpha_{max}^{iy}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_{h_{max}}(\theta))$
\end_inset

 after which 
\begin_inset Formula $s_{i}^{y}(\theta)$
\end_inset

 will be enforced to abort and retry.
\end_layout

\begin_layout Standard
Thus, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

) and its tighter form (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

) can be modified to equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) that includes the effect of blocking.
 But as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) includes both retry and blocking cost, it will be called 
\begin_inset Formula $BR(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
BR(t(T_{i}))\le\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{h}\in\gamma_{(\theta)}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\begin{cases}
((\sum_{T_{h}\in\gamma_{(\theta)}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\\
\end{cases}\label{eq54}
\end{equation}

\end_inset

To get the total effect of 
\begin_inset Formula $T_{h}$
\end_inset

 on 
\begin_inset Formula $T_{i}$
\end_inset

, we take the maximum cost between retry without blocking and retry with
 blocking that each 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 imposes on 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 But as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) calculates costs depending on each object 
\begin_inset Formula $\theta$
\end_inset

, then a task 
\begin_inset Formula $T_{h}$
\end_inset

 may produce a maximum effect on 
\begin_inset Formula $T_{i}$
\end_inset

 for a specific object 
\begin_inset Formula $\theta_{1}$
\end_inset

 if it induces no blocking, but for another object 
\begin_inset Formula $\theta_{2}$
\end_inset

, it induces blocing on 
\begin_inset Formula $T_{i}$
\end_inset

 to get the maximum cost, but 
\begin_inset Formula $T_{h}$
\end_inset

 cannot be in the two positions for the same 
\begin_inset Formula $T_{i}$
\end_inset

.
 This why equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) should be calculated based on each task 
\begin_inset Formula $T_{h}$
\end_inset

, not on each object 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

.
 This modification also applies to equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

).
 Thus, the final cost imposed by all 
\begin_inset Formula $T_{h}$
\end_inset

 on 
\begin_inset Formula $T_{i}$
\end_inset

 (this cost will be called 
\begin_inset Formula $CO(t(T_{i}))$
\end_inset

) will be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq56"

\end_inset

) depending on equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

), or by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq57"

\end_inset

) depending on equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq52"

\end_inset

) (the tighter form of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq53"

\end_inset

)) and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
CO(t(T_{i}))\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\\
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}
\end{cases}\label{eq56}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
CO(t(T_{i}))\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\sum_{\forall s_{h}^{z^{*}}(\theta)}len(s_{h}^{z^{*}}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta)))+\\
(\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\sum_{\forall s_{h}^{z^{*}}(\theta)}len(s_{h}^{z^{*}}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta)))+\\
(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\\
min\begin{cases}
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor(\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}(\theta))))\\
-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(B_{ih}+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))\\
-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}
\end{cases}\label{eq57}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated over an interval 
\begin_inset Formula $L(T_{i})\le\lfloor\frac{t(T_{i})-c_{h}}{t(T_{h})}\rfloor t(T_{h})+c_{h}$
\end_inset

 (which can be deduced from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig17-b"

\end_inset

) to get a tighter upper bound on response time.
 But during this 
\begin_inset Formula $L(T_{i})$
\end_inset

 duration, 
\begin_inset Formula $T_{i}$
\end_inset

 will not be blocked by any instance of 
\begin_inset Formula $T_{h}$
\end_inset

 because of higher priority of all 
\begin_inset Formula $T_{h}^{p}$
\end_inset

 during 
\begin_inset Formula $L(T_{i})$
\end_inset

 than 
\begin_inset Formula $T_{i}^{x}$
\end_inset

.
 If 
\begin_inset Formula $L(T_{i})$
\end_inset

 is increased over its specified limit, then costs of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) where the last instance of 
\begin_inset Formula $T_{h}$
\end_inset

 blocks 
\begin_inset Formula $T_{i}^{x}$
\end_inset

, but equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq54"

\end_inset

) is already included in 
\begin_inset Formula $CO(T_{i})$
\end_inset

, so there is no need to increase 
\begin_inset Formula $L(T_{i})$
\end_inset

 over its pecified limit.
 So, the costs of 
\begin_inset Formula $T_{i}$
\end_inset

 over 
\begin_inset Formula $L(T_{i})$
\end_inset

 can be obtained from equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

), with some modifications to account for LCM -P, and this will result in
 equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq58"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(L(T_{i}))=\sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
((\sum_{T_{h}\in\gamma(\theta)}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1)\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))\\
+\alpha_{max}^{hz}len(s_{max}(\theta))))-\alpha_{max}^{*}len(s_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}\\
\begin{cases}
((\sum_{T_{h}\in\gamma(\theta)}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1)\sum_{\forall s_{h}^{z}(\theta)}len(s_{h}^{z}(\theta))\\
+\alpha_{max}^{hz}len(s_{max}^{*}(\theta))))-\alpha_{max}^{*}len(\bar{s}_{max}(\theta))+\hat{\alpha}_{max}len(s_{i_{max}}(\theta)))
\end{cases}
\end{cases}\label{eq58}
\end{equation}

\end_inset

So, the final costs of 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $CO(T_{i})$
\end_inset

, can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq59"

\end_inset

).
\begin_inset Formula 
\begin{equation}
CO(T_{i})=\begin{cases}
RC(L(T_{i})) & if\, L(T_{i})\le\lfloor\frac{t(T_{i})-c_{h}}{t(T_{h})}\rfloor t(T_{h})+c_{h}\\
CO(t(T_{i})) & otherwise
\end{cases}\label{eq59}
\end{equation}

\end_inset

and response time of 
\begin_inset Formula $T_{i}$
\end_inset

 can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) but 
\begin_inset Formula $RC(T_{i})$
\end_inset

 will be replaced with 
\begin_inset Formula $CO(T_{i})$
\end_inset

.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparison-between-G-EDF/EDF"

\end_inset

G-EDF/LCM versus ECM
\end_layout

\begin_layout Standard
Execution time of each task 
\begin_inset Formula $T_{i}$
\end_inset

 , in G-EDF/LCM, is inflated by addingt 
\begin_inset Formula $CO(T_{i})$
\end_inset

 to 
\begin_inset Formula $c_{i}$
\end_inset

, and in ECM, by adding 
\begin_inset Formula $RC(T_{i})$
\end_inset

 to 
\begin_inset Formula $c_{i}$
\end_inset

.
 Then, total utilization between ECM and G-EDF/LCM are compared to know
 when G-EDF/LCM will be better as follows :-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{c_{i}+CO(T_{i})}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{c_{i}+RC(T_{i})}{t(T_{i})}\\
\sum_{\forall T_{i}}\frac{CO(T_{i})}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{RC(T_{i})}{t(T_{i})}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
But the 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

)
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}(2.s_{max})))\label{eq61}
\end{equation}

\end_inset

with the same assumptions that 
\begin_inset Formula $s_{h}^{l}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

 and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

.
 With the same assumptions, 
\begin_inset Formula $CO(T_{i})$
\end_inset

 can also be upper bounded by 
\begin_inset Formula 
\begin{equation}
CO(T_{i})\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\sum_{\forall s_{h}^{z}(\theta)}(1+\alpha_{max})s_{max}))\\
(\sum_{\theta\in\theta_{i}\wedge\theta_{h}}((\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{min})s_{max})+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor\sum_{\forall s_{h}^{z}(\theta)}(1+\alpha_{max})s_{max}))
\end{cases}\label{eq62}
\end{equation}

\end_inset

where all atomic sections are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

, hence 
\begin_inset Formula $\alpha$
\end_inset

 will be the same for all atomic sections and will be called 
\begin_inset Formula $\alpha_{max}$
\end_inset

.
 So, 
\begin_inset Formula $s_{max}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 are both constants.
 If 
\begin_inset Formula $\sum_{\theta\in\theta_{i}\wedge\theta_{h}}\sum_{\forall s_{h}^{z}(\theta)}$
\end_inset

 and 
\begin_inset Formula $\sum_{\theta\in\theta_{i}\wedge\theta_{h}}\sum_{\forall s_{i}^{y}(\theta)}$
\end_inset

 are both lower than 
\begin_inset Formula $\beta_{i,h}$
\end_inset

, which is the maximum access number of all shared objects by both 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq61"

\end_inset

) will be
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2\lceil\frac{t(T_{i})}{t(T_{h})}\rceil\beta_{i,h}s_{max}\label{eq63}
\end{equation}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq62"

\end_inset

) will be 
\begin_inset Formula 
\begin{equation}
CO(T_{i})\le\sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}\lceil\frac{t(T_{i})}{t(T_{h})}\rceil(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\label{eq64}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor=a_{ih}$
\end_inset

, and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq64"

\end_inset

) will be
\begin_inset Formula 
\begin{eqnarray}
CO(T_{i}) & \le & \sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}a_{ih}(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\nonumber \\
 & \le & \sum_{T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}\label{eq65}
\end{eqnarray}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq63"

\end_inset

) will be 
\begin_inset Formula 
\[
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}s_{max}
\]

\end_inset

Then, G-EDF/LCM will give better performance if 
\begin_inset Formula 
\[
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}}{t(T_{i})}\le\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}s_{max}}{t(T_{i})}
\]

\end_inset

This inequality is ensured if for each 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray}
(1-\alpha_{min})+a_{ih}(1+\alpha_{max}) & \le & 2a_{ih}\nonumber \\
1-\alpha_{min} & \le & (1-\alpha_{max})a_{ih}\label{eq104}
\end{eqnarray}

\end_inset

If equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq104"

\end_inset

) applies, then schedulability of G-EDF/LCM is equal to or better than ECM.
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $\lfloor\frac{t(T_{i})}{t(T_{h})}\rfloor=a_{ih}$
\end_inset

 and 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=a_{ih}+1$
\end_inset

, and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq64"

\end_inset

) will be
\begin_inset Formula 
\begin{eqnarray}
CO(T_{i}) & \le & \sum_{T_{h}\in\gamma_{i}}max\begin{cases}
\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}\\
((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}
\end{cases}\nonumber \\
 & \le & \sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}\label{eq66}
\end{eqnarray}

\end_inset

and equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq63"

\end_inset

) will be 
\begin_inset Formula 
\[
RC(T_{i})\le\sum_{T_{h}\in\gamma_{i}}2(a_{ih}+1)\beta_{i,h}s_{max}
\]

\end_inset

For G-EDF/LCM to be better than ECM, then
\begin_inset Formula 
\[
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}}{t(T_{i})}\le\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}2(a_{ih}+1)\beta_{i,h}s_{max}}{t(T_{i})}
\]

\end_inset

This inequality is assured when for each 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset


\begin_inset Formula 
\begin{eqnarray*}
(a_{ih}+1)(1+\alpha_{max}) & \le & 2(a_{ih}+1)\\
1+\alpha_{max} & \le & 2\\
\alpha_{max} & \le & 1
\end{eqnarray*}

\end_inset

Because 
\begin_inset Formula $\alpha_{max}$
\end_inset

 is always less than or equal to 1, then performance of G-EDF/LCM is better
 or equal to that of ECM for 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

.
 So, for all cases, G-EDF/LCM gives better or equal performance to that
 of ECM.
\end_layout

\begin_layout Subsubsection
Comparison between G-EDF/LCM and retry-loop lock-free algorithm
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case
\series default
\shape default
 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq65"

\end_inset

), and retry loop cost is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq32"

\end_inset

).
 Total utilization of G-EDF/LCM is compared to that of retry-loop lock-free
 algorithm to determine which is better as follows :- 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}s_{max}}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1)\beta_{i,h}r_{max}}{t(T_{i})}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}((1-\alpha_{min})+a_{ih}(1+\alpha_{max}))\beta_{i,h}}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
By choosing 
\begin_inset Formula $1-\alpha_{min}=a_{ih}(1-\alpha_{max})-\Delta a_{ih}$
\end_inset

 , where 
\begin_inset Formula $\Delta>0$
\end_inset

, then schedulability of G-EDF/LCM is better than schedulability of ECM,
 as shown by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq104"

\end_inset

) (
\begin_inset Formula $a_{ih}$
\end_inset

 is at least 1 as there must be at least one instance of 
\begin_inset Formula $T_{h}$
\end_inset

 interfering or blocking 
\begin_inset Formula $T_{i}$
\end_inset

, so 
\begin_inset Formula $\Delta a_{ih}>0$
\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}-\Delta a_{ih}\beta_{i,h}}{t(T_{i})}}\\
 & = & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}a_{ih}\beta_{i,h}}{t(T_{i})}+\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}(1-\Delta)}{t(T_{i})}}\\
 & = & \frac{1}{2(1-\Delta)}+\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}2a_{ih}\beta_{i,h}(1-\Delta)}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $a_{ih}\ge1,\,\therefore$
\end_inset

if 
\begin_inset Formula $a_{ih}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\rightarrow\frac{1}{1-\Delta}>1$
\end_inset

, and as 
\begin_inset Formula $a_{ih}\rightarrow\infty,\,\frac{s_{max}}{r_{max}}\rightarrow\frac{1}{2(1-\Delta)}>\frac{1}{2}$
\end_inset

, which means- by proper choice of 
\begin_inset Formula $\Delta$
\end_inset

- better values for length of 
\begin_inset Formula $s_{max}$
\end_inset

 against 
\begin_inset Formula $r_{max}$
\end_inset

 compared with what was provided in ECM 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

.
\end_layout

\begin_layout Standard

\series bold
\shape italic
In case 
\series default
\shape default

\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq66"

\end_inset

), and comparison between total utilization of G-EDF/LCM and retry-loop
 lock-free is:-
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})s_{max}}{t(T_{i})} & \le\\
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+2)\beta_{i,h}r_{max}}{t(T_{i})}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+2).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & = & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}(a_{ih}+1).\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & + & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}\\
 & = & \frac{1}{1+\alpha_{max}}+\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{h}\in\gamma_{i}}\beta_{i,h}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{T_{h}\in\gamma_{i}}\beta_{i,h}(a_{ih}+1)(1+\alpha_{max})}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $a_{ih}\rightarrow1,\,\therefore\frac{s_{max}}{r_{max}}\le\frac{3}{2(1+\alpha_{max})}$
\end_inset

, if 
\begin_inset Formula $\alpha_{max}\rightarrow0,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{3}{2}>1$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{3}{4}>\frac{1}{2}$
\end_inset

.
 This means, in case of low interference and by choosing 
\begin_inset Formula $\alpha_{max}$
\end_inset

 small enough, length of 
\begin_inset Formula $s_{max}$
\end_inset

can be at most 1.5 length of 
\begin_inset Formula $r_{max}$
\end_inset

, but if 
\begin_inset Formula $\alpha_{max}$
\end_inset

 is chosen large, length of 
\begin_inset Formula $s_{max}$
\end_inset

 can still be larger than that provided by ECM (
\begin_inset Formula $0.75r_{max}$
\end_inset

 in G-EDF/LCM against 
\begin_inset Formula $0.5r_{max}$
\end_inset

 in ECM 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

) 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $a_{ih}\rightarrow\infty,\,\therefore\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

, if 
\begin_inset Formula $\alpha_{max}\rightarrow0,\,\therefore\,\frac{s_{max}}{r_{max}}\le1$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow1,\,\therefore\,\frac{s_{max}}{r_{max}}\le\frac{1}{2}$
\end_inset

.
 This means, in case of high interference, length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be as that provided by ECM (from 
\begin_inset Formula $0.5r_{max}$
\end_inset

 to 
\begin_inset Formula $r_{max}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "stmconcurrencycontrol:emsoft11"

\end_inset

)
\end_layout

\begin_layout Subsubsection
Comparison between G-EDF/LCM and locking protocols
\end_layout

\begin_layout Standard
Total utilization of G-EDF/LCM is compared against total utilization of
 FMLP and OMLP locking protocols.
 As explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Comparison-between-FMLP"

\end_inset

, blocking time of 
\begin_inset Formula $T_{i}$
\end_inset

 under FMLP is upper bounde by 
\begin_inset Formula 
\begin{eqnarray}
B(T_{i}) & \le & |s\_\theta|_{max}\sum_{T_{i}}(N_{i,s}(m-1)\nonumber \\
 & + & (1+N_{i,l})max_{k\ne i}(N_{k,s}.(m-1)+1)\nonumber \\
 & + & N_{i,l}.(n-1).c1)\label{eq67}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $|s\_\theta|_{max}$
\end_inset

 is the maximum length for short resource by any 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,s}$
\end_inset

 is the number of requests to short resources by 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $N_{i,l}$
\end_inset

 is the number of requests to long resources by 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $c1$
\end_inset

 is a constant where the maximum length request to any long resource by
 any 
\begin_inset Formula $T_{i}$
\end_inset

 equals 
\begin_inset Formula $c1\times|s\_\theta|_{max}$
\end_inset

.
 Thus, this blocking time is 
\begin_inset Formula $O(n(n+m))$
\end_inset

.
\end_layout

\begin_layout Standard
In case 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq65"

\end_inset

).
 By assuming 
\begin_inset Formula $a_{ih}\le Const1$
\end_inset

, where 
\begin_inset Formula $Const1$
\end_inset

 is the maximum number of instances of any task 
\begin_inset Formula $T_{h}$
\end_inset

 in the period of any other task 
\begin_inset Formula $T_{i}$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})=O(n^{2})$
\end_inset

.
 In case 
\begin_inset Formula $t(T_{i})=a_{ih}t(T_{h})+\delta$
\end_inset

, then 
\begin_inset Formula $CO(T_{i})$
\end_inset

 is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq66"

\end_inset

) which is also 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
So, for schedulability of G-EDF/LCM to be better or equal to that of FMLP,
 total utilization of G-EDF/LCM, whether 
\begin_inset Formula $t(T_{i})$
\end_inset

 is an integer multiple of 
\begin_inset Formula $t(T_{h})$
\end_inset

 or not, is compared against total utilization of FMLP to give that 
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{|s\_\theta|_{max}} & = & \frac{O(n(n+m))}{O(n^{2})}\\
 & = & O(\frac{m}{n})
\end{eqnarray*}

\end_inset

As mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Comparison-of-OMLP"

\end_inset

, the blocking time for 
\begin_inset Formula $T_{i}$
\end_inset

 is upper bounded by 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}$
\end_inset

 which is 
\begin_inset Formula $O(m)$
\end_inset

, and the total utilization of a task set under OMLP is 
\begin_inset Formula $O(nm)$
\end_inset

, but the total utilization under G-EDF/LCM is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 So, by comparing total utilization of G-EDF/LCM and total utilization of
 OMLP, we get
\begin_inset Formula 
\[
\frac{s_{max}}{L_{max}}=O(\frac{m}{n})
\]

\end_inset

So, it is clear that G-EDF/LCM gives the same asymptotic schedulability
 performance of ECM compared with locking protocols, and this is natural
 as the difference between G-EDF/LCM and ECM is only when an atomic section,
 
\begin_inset Formula $s_{h}^{z}(\theta)$
\end_inset

, of a higher priority task is allowed to abort an atomic section, 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

, of a lower priority task, while this abortion can happen at any point
 in the life time of 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 in ECM, it is restricted in G-EDF/LCM.
\end_layout

\begin_layout Subsubsection
Response time in G-RMA/LCM
\end_layout

\begin_layout Standard
Because of the fixed priority of G-RMA, all instances of the higher priority
 task, 
\begin_inset Formula $T_{j}$
\end_inset

, can interfere with the lower priority task, 
\begin_inset Formula $T_{i}$
\end_inset

, during 
\begin_inset Formula $t(T_{i})$
\end_inset

.
 So, blocking is not considered with higher priority tasks than 
\begin_inset Formula $T_{i}$
\end_inset

, but blocking is considered for all instances, during 
\begin_inset Formula $t(T_{i})$
\end_inset

, of any task, 
\begin_inset Formula $T_{h}$
\end_inset

, with lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

.
 Besides, whether response time is calculated over all 
\begin_inset Formula $t(T_{i})$
\end_inset

, or over an interval 
\begin_inset Formula $L<t(T_{i})$
\end_inset

, the same equations for costs of 
\begin_inset Formula $T_{i}$
\end_inset

 and response time will be used because of fixed priority as shown in equation
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

).
\begin_inset Formula 
\begin{eqnarray}
CO(L(T_{i})) & = & \sum_{\forall T_{j}^{*}}((\sum_{\theta\in(\theta_{i}\wedge\theta_{j})}((\lceil\frac{L-c_{j}}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{j}(\theta))))\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}\sum_{\theta\in(\theta_{i}\wedge\theta_{h})}((\lceil\frac{L-c_{h}}{t(T_{h})}\rceil+1).\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{max}^{iy})len(s_{h_{max}}(\theta)))\label{eq60}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $L(T_{i})$
\end_inset

 can extend to 
\begin_inset Formula $t(T_{i})$
\end_inset

, and 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 is the maximum length atomic section accessing object 
\begin_inset Formula $\theta$
\end_inset

 among all tasks of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{i}$
\end_inset

 itself, 
\begin_inset Formula $T_{j}^{*}=\{T_{j}|(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))\}$
\end_inset

, and 
\begin_inset Formula $\bar{T}_{h}=\{T_{h}|(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))\}$
\end_inset


\end_layout

\begin_layout Standard
Response time can be calculated by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq22"

\end_inset

) with replacing 
\begin_inset Formula $RC(T_{i})$
\end_inset

 with 
\begin_inset Formula $CO(L(T_{i}))$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and RCM
\end_layout

\begin_layout Standard
By applying the same assumptions in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Comparison-between-G-EDF/EDF"

\end_inset

, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

) can be upper bounded by 
\begin_inset Formula 
\begin{eqnarray}
CO(L(T_{i})) & \le & \sum_{\forall T_{j}^{*}}(\sum_{\theta\in(\theta_{i}\wedge\theta_{j})}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1).\sum_{\forall s_{j}^{l}(\theta)}(1+\alpha_{max})len(s_{max})))\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}(\sum_{\theta\in(\theta_{i}\wedge\theta_{h})}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1).\sum_{\forall s_{i}^{y}(\theta)}(1-\alpha_{min})len(s_{max})))\nonumber \\
 & = & \sum_{\forall T_{j}^{*}}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1+\alpha_{max})len(s_{max})\beta_{ij})\nonumber \\
 & + & \sum_{\forall\bar{T}_{h}}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})len(s_{max})\beta_{ih})\label{eq68}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\beta_{ij}$
\end_inset

 is the number of access times by 
\begin_inset Formula $T_{j}$
\end_inset

 to shared resources with 
\begin_inset Formula $T_{i}$
\end_inset

, and 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is the same but between 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 For RCM, 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by
\begin_inset Formula 
\begin{equation}
RC(T_{i})\le\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)2\beta_{ij}s_{max}\label{eq69}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, by comparing total utilization of G-RMA/LCM with that of RCM, we get
 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}((\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1+\alpha_{max})len(s_{max})\beta_{ij})+\sum_{\forall\bar{T}_{h}}((\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})len(s_{max})\beta_{ih})}{t(T_{i})}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\le\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)2\beta_{ij}len(s_{max})}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)(1-\alpha_{min})\beta_{ih}}{t(T_{i})} & \le & \sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)(1-\alpha_{max})\beta_{ij}}{t(T_{i})}\\
\frac{1-\alpha_{min}}{1-\alpha_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

G-RMA scheduler is used and it is assumed that relative deadline of each
 task equals its period, and 
\begin_inset Formula $T_{h}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\therefore\, t(T_{i})\le t(T_{h})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=1$
\end_inset

 for any 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{1-\alpha_{min}}{1-\alpha_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}}{t(T_{i})}}{2\sum_{\forall T_{i}}\frac{\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}\label{eq70}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So, if blocking time for each task 
\begin_inset Formula $T_{i}$
\end_inset

 is reduced, then the right hand side of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) is increased, giving a larger upper bound for 
\begin_inset Formula $\frac{1-\alpha_{min}}{1-\alpha_{max}}$
\end_inset

, and giving a wider range for 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 to choose from.
 So, by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

 and 
\begin_inset Formula $\alpha_{min}$
\end_inset

, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) can be applied, and schedulability performance of G-RMA/LCM is better
 or equal to that of RCM.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and retry-loop lock free algorithm
\end_layout

\begin_layout Standard

\series bold
NOTE: THIS SECTION IS OLD.
 LOOK FOR THE NEW SECTION BELOW IT
\end_layout

\begin_layout Standard
\begin_inset Formula $CO(T_{i})$
\end_inset

 for G-RMA/LCM is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq68"

\end_inset

), and 
\begin_inset Formula $RC(T_{i})$
\end_inset

 for retry-loop lock-free algorithm is upper bounded by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq32"

\end_inset

) which is re-written here as
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{T_{v}\in\gamma_{i}}(\lceil\frac{t(T_{i})}{t(T_{v})}\rceil+1)\beta_{iv}r_{max}\label{eq72}
\end{equation}

\end_inset

But set of tasks 
\begin_inset Formula $T_{v}\in\gamma_{i}$
\end_inset

 are composed of tasks of higher priority than 
\begin_inset Formula $T_{i}$
\end_inset

, which are donated as 
\begin_inset Formula $T_{j}$
\end_inset

 in consistence to the index notation of G-RMA/LCM, and tasks of lower priority
 than 
\begin_inset Formula $T_{i}$
\end_inset

, which are donated as 
\begin_inset Formula $T_{h}$
\end_inset

.
 So, equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq72"

\end_inset

) can be re-written as equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq73"

\end_inset

).
\begin_inset Formula 
\begin{equation}
RC(T_{i})=\sum_{\forall T_{j}^{*}}(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}r_{max}+\sum_{\forall\bar{T_{h}}}(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}r_{max}\label{eq73}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Assuming 
\begin_inset Formula $\lambda_{3}(i,j)=(\lceil\frac{t(T_{i})}{t(T_{j})}\rceil+1)\beta_{ij}$
\end_inset

 and 
\begin_inset Formula $\chi_{3}(i,h)=(\lceil\frac{t(T_{i})}{t(T_{h})}\rceil+1)\beta_{ih}$
\end_inset

.
 So, to determine when schedulability performance of G-RMA/LCM will be better
 or equal to that of retry-loop lock-free, we compare total utilization
 of both as follows:-
\begin_inset Formula 
\[
len(s_{max})\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+\sum_{\forall\bar{T}_{h}}(\chi_{3}(i,h)(1-\alpha_{min}))}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\le r_{max}\sum_{\forall T_{i}}\frac{\sum_{T_{j}^{*}}\lambda_{3}(i,j)+\sum_{\bar{T}_{h}}\chi_{3}(i,h)}{t(T_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{T_{j}^{*}}\lambda_{3}(i,j)+\sum_{\bar{T}_{h}}\chi_{3}(i,h)}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+\sum_{\forall\bar{T}_{h}}(\chi_{3}(i,h)(1-\alpha_{min}))}{t(T_{i})}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\because$
\end_inset

G-RMA scheduler is used and it is assumed that relative deadline of each
 task equals its period, and 
\begin_inset Formula $T_{h}$
\end_inset

 is of lower priority than 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\therefore\, t(T_{i})\le t(T_{h})$
\end_inset

, 
\begin_inset Formula $\therefore\,\lceil\frac{t(T_{i})}{t(T_{h})}\rceil=1$
\end_inset

 for any 
\begin_inset Formula $T_{i}$
\end_inset

 and 
\begin_inset Formula $T_{h}$
\end_inset

, 
\begin_inset Formula $\therefore$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{min})\beta_{ih})}{t(T_{i})}}\label{eq74}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is kept lower or equal to 
\begin_inset Formula $\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1+\alpha_{max})\beta_{ih})}{t(T_{i})}}$
\end_inset

, where 
\begin_inset Formula $1-\alpha_{min}$
\end_inset

 in 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
denominator
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 of the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is replaced by 
\begin_inset Formula $1+\alpha_{max}$
\end_inset

, then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is ensured because 
\begin_inset Formula $\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1+\alpha_{max})\beta_{ih})}{t(T_{i})}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{max})\beta_{ih})}{t(T_{i})}}$
\end_inset

.
 Thus, 
\begin_inset Formula 
\begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{(1+\alpha_{max})\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{3}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}\label{eq76}\\
\therefore\frac{s_{max}}{r_{max}} & \le & \frac{1}{1+\alpha_{max}}\label{eq75}
\end{eqnarray}

\end_inset

As 
\begin_inset Formula $0\le\alpha_{max}\le1$
\end_inset

 and by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

, then the minimum upper bound on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is higher than 0.5, so length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be kept higher than half length of 
\begin_inset Formula $r_{max}$
\end_inset

, which is higher than that acheived in the specific cases of RCM mentioned
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-RMA-scheduler-with"

\end_inset

 (actually, 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is a higher than 
\begin_inset Formula $\frac{1}{1+\alpha_{max}}$
\end_inset

 because the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) is the actual upper limit to 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

, not the right hand side of inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq76"

\end_inset

)).
 But inequaltiy (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

) makes the higher upper limit on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 is 1, which means that the maximum allowed length to 
\begin_inset Formula $s_{max}$
\end_inset

- for performance of G-RMA/LCM to better or equal to that of RCM- is the
 length of 
\begin_inset Formula $r_{max}$
\end_inset

, but considering the special cases in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-RMA-scheduler-with"

\end_inset

, this can be changed as follows:-
\end_layout

\begin_layout Standard
It appears from inequality (
\series bold
\size larger
\bar under

\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset


\series default
\size default
\bar default
) that 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 depend on 
\begin_inset Formula $\beta_{ij}$
\end_inset

, 
\begin_inset Formula $\beta_{ih}$
\end_inset

, 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

.
 The minimum value for 
\begin_inset Formula $\beta_{ij}$
\end_inset

 and 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is 1 as there must be at least one shared resource between 
\begin_inset Formula $T_{i},T_{j}$
\end_inset

 and 
\begin_inset Formula $T_{i},T_{h}$
\end_inset

, but 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 means value of 
\begin_inset Formula $\beta_{ij}$
\end_inset

 is very small compared to that of 
\begin_inset Formula $\beta_{ih}$
\end_inset

, and 
\begin_inset Formula $\beta_{ih}\rightarrow0$
\end_inset

 means the value of 
\begin_inset Formula $\beta_{ih}$
\end_inset

 is very small compared to that of 
\begin_inset Formula $\beta_{ij}$
\end_inset

.
 Also, if 
\begin_inset Formula $\beta_{ij}\rightarrow\infty$
\end_inset

(
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

), then value of 
\begin_inset Formula $\beta_{ij}$
\end_inset

 (
\begin_inset Formula $\beta_{ih}$
\end_inset

) is very large compared to that of 
\begin_inset Formula $\beta_{ih}$
\end_inset

(
\begin_inset Formula $\beta_{ij}$
\end_inset

).
 If 
\begin_inset Formula $\beta_{ij}\rightarrow\infty$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow0$
\end_inset

 (which can happen if higher priority tasks tend to access shared resources
 much more compared with lower priority tasks), then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) 
\begin_inset Formula $\rightarrow$
\end_inset

 
\begin_inset Formula $\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

, which is the same as the general boundary from inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

).
 But if 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

, which happens if higher priority tasks tend to access shared resources
 rarely compared to lower priority tasks , then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

) 
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{1}{1-\alpha_{max}}$
\end_inset

, and if 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

 (which means that an atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 is only allowed to interfere another one 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 when 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is very close to its start of execution), then length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be at most as that of 
\begin_inset Formula $r_{max}$
\end_inset

; the physical interpretation of these parameters (i.e., 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

) is that the effect of blocking in G-RMA/LCM is very large compared to
 that of interference, and it is even increased by making 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

 which means that an atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, belonging to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

, would suffere the maximum blocking time of any atomic section 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, belonging to a lower priority task 
\begin_inset Formula $T_{i}$
\end_inset

, because 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will have to wait for almost the whole length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 in the worst case of blocking, but as retry-loop lock-free also sufferes
 from lower priority task whose effect is approximately the same as lower
 priority tasks in G-RMA/LCM (as 
\begin_inset Formula $\alpha_{max}\rightarrow0$
\end_inset

), this will render the lengths of 
\begin_inset Formula $s_{max}$
\end_inset

 and 
\begin_inset Formula $r_{max}$
\end_inset

 to be approximately the same in order to make schedulability performance
 of G-RMA/LCM better or equal to that of retry-loop lock-free method.
 But if 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

, then 
\begin_inset Formula $\frac{s_{max}}{r_{max}}\le\infty$
\end_inset

 which means that length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

.
 The physical interpretation for these parameters (i.e., 
\begin_inset Formula $\beta_{ij}\rightarrow0$
\end_inset

 or 
\begin_inset Formula $\beta_{ih}\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

) is that the effect of blocking in G-RMA/LCM is very large compared to
 effect of interference, but as 
\begin_inset Formula $\alpha_{max}\rightarrow1$
\end_inset

, then at atomic section 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 will be blocked by another one 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 for a very short time length (almost 0), and this will reduce the effect
 of lower priority tasks too much, in contrast to retry-loop lock-free algorithm
 where lower priority tasks still affect retry cost, thus length of 
\begin_inset Formula $s_{max}$
\end_inset

 will be allowed to be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

 for schedulability performance of G-RMA/LCM to be better or equal to that
 of retry-loop lock-free algorithm.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\lceil\frac{t(T_{i})}{t(T_{j})}\rceil\rightarrow1$
\end_inset

, then inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

)
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{2\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))}\beta_{ij}+2\sum_{(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{2(1+\alpha_{max})\sum_{(T_{j}\in\gamma_{i})\wedge(p(T_{j})>p(T_{i}))}\beta_{ij}+2(1-\alpha_{max})\sum_{(T_{h}\in\gamma_{i})\wedge(p(T_{h})<p(T_{i}))}\beta_{ih}}{t(T_{i})}}$
\end_inset

, 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}\lambda_{x}(i,j)+2\sum_{\forall\bar{T}_{h}}\beta_{ih}}{t(T_{i})}}{\sum_{\forall T_{i}}\frac{\sum_{\forall T_{j}^{*}}(\lambda_{3}(i,j)(1+\alpha_{max}))+2\sum_{\forall\bar{T}_{h}}((1-\alpha_{min})\beta_{ih})}{t(T_{i})}}
\]

\end_inset


\end_layout

\begin_layout Standard
which leaves the system under control of 
\begin_inset Formula $\beta_{ij}$
\end_inset

, 
\begin_inset Formula $\beta_{ih}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 as explained above.
 But if 
\begin_inset Formula $a_{ij}\rightarrow\infty$
\end_inset

, then inequaltiy (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq74"

\end_inset

)
\begin_inset Formula $\rightarrow\frac{s_{max}}{r_{max}}\le\frac{1}{1+\alpha_{max}}$
\end_inset

 which is the same as the general boundary derived in inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq75"

\end_inset

).
\end_layout

\begin_layout Standard
From the previous analysis, it can be seen that G-RMA/LCM can acheive the
 same value for 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 as RCM, besides, it can increase the minimum upper bound on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 - by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

- from 0.5 in RCM to 
\begin_inset Formula $\frac{1}{1+\alpha_{max}}$
\end_inset

 in G-RMA/LCM.
\end_layout

\begin_layout Subsubsection
Comparison between G-RMA/LCM and retry-loop lock free algorithm
\end_layout

\begin_layout Standard

\series bold
THIS PART BETWEEN QUTATIONS NEEDS TO BE RE-WRITTEN.
 
\series default

\begin_inset Quotes eld
\end_inset

Let 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

, where 
\begin_inset Formula $\tau_{j}^{*}$
\end_inset

 is the set of higher priority tasks to 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\bar{\tau_{j}}$
\end_inset

 is the set of lower priority tasks than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with it.
 Following the same assumptions in (LCM-EDF LOCK-FREE COMPARISON), schedulabilit
y of LCM/RMA is better or equal to retry-loop lock-free if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)\beta_{i}s_{max}}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i}r_{max}}{T_{i}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\nonumber \\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}\label{eq:lcm rma lock-free comparison 1}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\bar{\tau_{j}}=\{\tau_{j}:(\tau_{j}\in\gamma_{i})\wedge(p_{j}<p_{i})\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\because\, p_{j}<p_{i},\,\therefore\,\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

 because in G-RMA systems, lower priority means longer relative deadline,
 and the system is assumed to be implicit deadline as defined in Section
 PRELEMINARIES.
 
\begin_inset Formula $\therefore$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 1"

\end_inset

) will be 
\begin_inset Formula 
\begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}2r_{max}}{T_{i}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{\left(\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)\right)s_{max}}{T_{i}}\nonumber \\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)r_{max}}{T_{i}}+\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}2r_{max}}{T_{i}}\nonumber \\
 & \frac{s_{max}}{r_{max}}\label{eq:lcm rma lock-free comparison 2}\\
\le & \frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}\nonumber 
\end{eqnarray}

\end_inset

Let 
\begin_inset Formula $\omega_{1}=|\tau_{j}^{*}|$
\end_inset

 be number of tasks with higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

, and let 
\begin_inset Formula $\omega_{2}=|\bar{\tau_{j}}|$
\end_inset

 be number of tasks with lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset Formula $\omega_{1}^{i}\ge$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

, otherwise, there is no conflict with 
\begin_inset Formula $\tau_{i}$
\end_inset

.
 To find the maximum and minimum upper bounds for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, the following cases are considered:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}2\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{1-1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}2\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\therefore\frac{s_{max}}{r_{max}}\le1+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 3}
\end{equation}

\end_inset

As the second term in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 3"

\end_inset

) is alawys positive (because 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

), then the minimum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $1$
\end_inset

.
 
\end_layout

\begin_layout Standard
To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 3"

\end_inset

) becomes 
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le1+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

If 
\begin_inset Formula $\omega_{1}^{i}\rightarrow0,\,\omega_{2}^{i}\rightarrow n-1$
\end_inset

 (the maximum and minimum values for 
\begin_inset Formula $\omega_{1}^{i}$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}$
\end_inset

 respectively), then 
\begin_inset Formula 
\[
\therefore\frac{s_{max}}{r_{max}}\le\left(2n-2\right)
\]

\end_inset

Of course, 
\begin_inset Formula $n$
\end_inset

 cannot be lower than 
\begin_inset Formula $2$
\end_inset

.
 Otherwise, there will be no conflicting tasks.
\end_layout

\begin_layout Standard
In this case, 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 are assumed too small.
 This means that the chosen value for 
\begin_inset Formula $\alpha$
\end_inset

 approaches 
\begin_inset Formula $0$
\end_inset

.
 Thus, a higher priority transaction can rarely abort a lower priority transacti
on.
 So, transactions are almost executed in the order they arrive, which is
 not the case for retry-loop lock-free.
 This is the reason for 
\begin_inset Formula $s_{max}$
\end_inset

 to exceed 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{0.5-0.5+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{0.5+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}-\frac{\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}-\frac{\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{4\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4\omega_{2}^{i}-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 4}
\end{equation}

\end_inset

The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

.
 This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

.
 To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 4"

\end_inset

) becomes 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4\omega_{2}^{i}-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+4\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

Let 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1,\,\omega_{1}^{i}\rightarrow0$
\end_inset

, then 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4(n-1)-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le2n-2
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow0$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This case is rejected because 
\begin_inset Formula $\alpha_{max}$
\end_inset

 must be greater or equal to 
\begin_inset Formula $\alpha_{min}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}+\frac{2\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 5}
\end{equation}

\end_inset

The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

.
 This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

.
 To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approaches its minimum value 
\begin_inset Formula $1$
\end_inset

.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 5"

\end_inset

) becomes 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{2\omega_{1}^{i}}{T_{i}}}
\]

\end_inset

Let 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1,\,\omega_{1}^{i}\rightarrow0$
\end_inset

, then 
\begin_inset Formula 
\[
\frac{s_{max}}{r_{max}}\rightarrow\infty
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
From the previous cases, we can derive that upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 extends from 
\begin_inset Formula $0.5$
\end_inset

 to large values.
\end_layout

\begin_layout Subsubsection
G-RMA/LCM versus OMLP
\end_layout

\begin_layout Standard
As blocking time of 
\begin_inset Formula $T_{i}$
\end_inset

 under OMLP is upper bounded by 
\begin_inset Formula $2.(m-1).L_{max}\sum_{k=1}^{q}N_{i,k}$
\end_inset

 which is 
\begin_inset Formula $O(m)$
\end_inset

, so the total utilization of a task set under OMLP is 
\begin_inset Formula $O(nm)$
\end_inset

, and the total utilization of a task set under G-RMA/LCM is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
 To determine when schedulability of G-RMA/LCM is better or equal to that
 of OMLP, total utilization of G-RMA/LCM is compared against that of OMLP
 (FMLP is not considered as it uses G-EDF for scheduling) to get:-
\begin_inset Formula 
\[
\frac{s_{max}}{L_{max}}=O(\frac{m}{n})
\]

\end_inset

So, if the available number of processors in the system is much greater
 than number of tasks, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be much greater than that of 
\begin_inset Formula $L_{max}$
\end_inset

.
\end_layout

\begin_layout Section
Experimental evaluation
\end_layout

\begin_layout Standard
I THINK IN THIS PART I SHOULD MENTION WHAT RESULTS COMING OUT OF THE EXPERIEMNTS
 (IN OTHER WORDS, WHAT THE QUESTIONS ANSWERED BY EXPERIEMNTS ARE.
\end_layout

\begin_layout Subsection
Experiments setup
\end_layout

\begin_layout Subsubsection
TALK ABOUT CHRONOS AND MODIFICATIONS BY R-STM, AND THE MODIFICATIONS TO
 R-STM ITSELF (UNTIL NOW ALL EXPERIEMNTS ARE WRITE OPERATIONS).
\end_layout

\begin_layout Standard
We used ChronOS real-time operating system 
\begin_inset CommandInset citation
LatexCommand cite
key "dellinger2011chronos"

\end_inset

 and Rochester STM implementation 
\begin_inset CommandInset citation
LatexCommand cite
key "marathe2006lowering"

\end_inset

, known as RSTM .
 We modified the RSTM to include the new contention managers ECM, RCM, LCM-EDF
 and LCM-RMA.
 For retry-loop lock-free implementation, we use a loop that reads the value
 of a varible, then tries to write a specified value in that variable using
 a CAS API provided by Rochester University; if the CAS does not succeed,
 task loops until it can modify the variable.
 We refer to this retry-loop lock-free operation as CAS-loop operation.
\end_layout

\begin_layout Subsubsection
DESCRIPTION OF USED SERVERS.
\end_layout

\begin_layout Standard
We use 8 core, 2GHz AMD Opeteron processor server.
 The average time taken by one 
\begin_inset Quotes eld
\end_inset

write
\begin_inset Quotes erd
\end_inset

 operation by RSTM implementation on any core is 0.0129653375 
\series bold

\begin_inset Formula $\mu s$
\end_inset


\series default
, and the average time taken by one 
\begin_inset Quotes eld
\end_inset

CAS-loop
\begin_inset Quotes erd
\end_inset

 operation on any core is 0.0292546250 
\begin_inset Formula $\mu s$
\end_inset

.
\end_layout

\begin_layout Subsubsection
DESCRIPTION OF TASK SETS.
\end_layout

\begin_layout Standard
Three periodic task sets are used with time properties shown in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

.
 Each task runs in its own thread and is modified to include a random number
 of atomic sections by specifying three parameters:- the maximum and minimum
 lengths of any atomic section within the task, and the total length of
 atomic sections within any task.
 Each parameter of the previous three ones takes a value of 0.2, 0.5 and 0.8
 of the total length of the task, but of course, the minimum length cannot
 exceed the maximum length, and both of them cannot exceed the total lenght
 of atomic sections per task.
 IN THE CURRENT SET OF EXPERIEMNTS, ALL TASKS MUST HAVE ATOMIC SECTIONS,
 AND ALL ATOMIC SECTION ACCESS THE SAME OBJECT.
 In the current set of experiments, all atomic sections try to make 
\begin_inset Quotes eld
\end_inset

write
\begin_inset Quotes erd
\end_inset

 operations, so contention is at its highest level.
 To compare STM against retry-loop lock-free method, the same length of
 each atomic section within any task is implemented with the CAS-loop operation.
 Due to the longer time taken by one CAS-loop, the number of CAS-loops within
 the same length of atomic sections is smaller than the number of 
\begin_inset Quotes eld
\end_inset

STM write
\begin_inset Quotes erd
\end_inset

 operations within the same length of atomic section, but using the same
 length of each atomic section in comparing STM against retry-loop lock-free
 allowes us to compare the effect of contention resolution between both
 methods, ignoring the overhead of their implementations.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-set-1"

\end_inset

Task sets (a) 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(a)"

\end_inset

Task set 1 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(b)"

\end_inset

(b) Task set 2 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(c)"

\end_inset

(c)Task set 3
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(a)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
150000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
227000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
410000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
299000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(b)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
75241
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
750000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69762
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1200000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
267122
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
69863
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
152014
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
286301
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
493150
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{8}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
794520
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{9}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1212328
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{10}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1775342
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(c)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
58195
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
750000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
53963
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
206330
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1200000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
53968
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
117449
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2400000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
221143
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
290428
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{8}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83420
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{9}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7500000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
380917
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{10}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
613700
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{11}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
936422
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\tau_{12}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20000000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1371302
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Results
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RC_results"

\end_inset

 represents retry cost (RC) for each task in the three task sets given in
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

 where each task has one atomic section of length equal to half of its correspon
ding task length.
 It can be seen that LCM-EDF and LCM-RMA acheive better or comparative retry
 cost to ECM and RCM.
 As all tasks are initially released at the same time, and due to time propereti
es of tasks as shown in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

, this makes tasks with lower ID somehow have higher priority when using
 G-EDF scheduler, meanwhile, these tasks with lower ID are definitly of
 higher priority when using G-RMA scheduling as tasks are ordered in non-decreas
ing periods.
 Thus, it is seen that LCM-EDF and LCM-RMA acheive comparative retry cost
 to ECM and RCM for some tasks with lower ID, but as task ID increases,
 LCM - for both schedulers- acheive much better results than ECM and RCM.
 This is because higher priority tasks in LCM suffers blocking by lower
 priority tasks, which is not the case for ECM and RCM, but as task priority
 decreases, LCM, by definition, pervents higher priority tasks from aborting
 lower priority ones if the higher priority task interfers with a lower
 priority one after a specified threshold, but for ECM and RCM, lower priority
 tasks must abort in favor of higher priority ones.
 LCM-EDF and LCM-RMA also acheive comparative or better results than retry-loop
 lock-free algorithm.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_5t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set1"

\end_inset

Task set 1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_10t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set2"

\end_inset

Task set 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Abr_Dur/Abr_dur_12t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set3"

\end_inset

Task set 3 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RC_results"

\end_inset

Retry Cost by nano_sec for each task in a)Task set 1 b)Task set 2 c)Task
 set 3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results-1"

\end_inset

 shows response time of each task in the three task sets given in Table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

 where each task has one atomic section of length equals to half of its
 corresponding task.
 It appears from Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results-1"

\end_inset

 that LCM-EDF and LCM-RMA acheive better response time than retry-loop lock-free
 algorithm, and comparative or better response time than ECM and RCM.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_5t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set1-1"

\end_inset

Task set 1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_10t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set2-1"

\end_inset

Task set 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /e/lectures/real-time/PhD-work/stm/Practical/results_uno/figures/Res_Time/Res_Time_12t_nl_g_30_0.5_0.5_0.5_1.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set3-1"

\end_inset

Task set 3 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:res_results-1"

\end_inset

Response time by nano_sec for each task in a)Task set 1 b)Task set 2 c)Task
 set 3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
A new real time contention manager (LCM), based on the length of the interfered
 and interfering atomic sections, has been presented.
 The main purpose of this contention manager is to reduce the worst case
 effect of abort and retry in ECM and RCM in that a task incurs 
\begin_inset Formula $2s_{max}$
\end_inset

 retry cost for each of its atomic section due to a confilct with another
 task's atomic section, but with LCM, a task incures 
\begin_inset Formula $(1+\alpha_{max})s_{max}$
\end_inset

 retry cost for each abort and retry to each one of its atomic sections.
 In ECM and RCM, there is no blocking to a higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 due to a lower priority one 
\begin_inset Formula $T_{i}$
\end_inset

 as an atomic section, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, in the higher priority task can abort an atomic section, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, in the lower priority task once 
\begin_inset Formula $s_{i}^{l}(\theta)$
\end_inset

 arrives, even if 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is at the end of its execution.
 But in LCM, 
\begin_inset Formula $T_{j}$
\end_inset

 can be blocked by 
\begin_inset Formula $T_{i}$
\end_inset

 if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 arrives after 
\begin_inset Formula $\alpha_{max}len(s_{i}^{k}(\theta))$
\end_inset

.
\end_layout

\begin_layout Standard
By comparing G-EDF/LCM with ECM, it was found that schedulability performance
 of G-EDF/LCM is better or equal to that of ECM because of the enhancement
 of retry cost and lower blocking time cost, as blocking is encountered
 only from the last instance of the a task 
\begin_inset Formula $T_{j}$
\end_inset

 during the whole period of 
\begin_inset Formula $T_{i}$
\end_inset

 (this last instance of 
\begin_inset Formula $T_{j}$
\end_inset

 did not have any effect on 
\begin_inset Formula $T_{i}$
\end_inset

 in ECM because it is of lower priority).
 But this should not be the case when G-RMA/LCM is compared against RCM
 because each higher priority task 
\begin_inset Formula $T_{j}$
\end_inset

 can be blocked by all lower priority tasks, thus effect of blocking is
 very hihg for higher priority tasks, and is reduced as we move to lower
 priority ones, but interference effect will be large for lower priority
 tasks in comparison to higher priority ones.
 So, for schedulability of G-RMA/LCM to be better or equal to that of RCM,
 inequality (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) should be applied.
\end_layout

\begin_layout Standard
By comparing LCM, with both G-EDF and G-RMA schedulers, it was found that
 by proper choice of 
\begin_inset Formula $\alpha_{max}$
\end_inset

, the minimum upper bound on length of 
\begin_inset Formula $s_{max}$
\end_inset

 could be more than half length of 
\begin_inset Formula $r_{max}$
\end_inset

, which is higher than that acheived in ECM and RCM, but the maximum length
 of 
\begin_inset Formula $s_{max}$
\end_inset

 cannot exceed that of 
\begin_inset Formula $r_{max}$
\end_inset

 except in some special cases for G-RMA/LCM where length of 
\begin_inset Formula $s_{max}$
\end_inset

 can be much greater than that of 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard
Finally, LCM (with G-EDF and G-RMA) is asymptotically comared against locking
 protocols.
 FMLP and OMLP locking protocols are chosen for their superiority in schedulabil
ity and optimality.
 But comparison revealed that both 
\begin_inset Formula $\frac{s_{max}}{|s\_\theta|}$
\end_inset

 for G-EDF/LCM, and 
\begin_inset Formula $\frac{s_{max}}{L_{max}}$
\end_inset

 for both G-EDF/LCM and G-RMA/LCM, are the same as that for ECM and RCM.
\end_layout

\begin_layout Standard
Our work is analytical in nature because it was desired to prove that STM
 can acheive higher schedulability against locking and lock free based on
 a new design of contention manager that tries to avoid one of the shortcomings
 of the previous ECM and RCM contention managers.
 That is why LCM is analytically compared to locking and lock free algorithms,
 in addition to analytical comparison to ECM and RCM.
 However, significant insights can be gained by experimental work on a broad
 range of embedded software, which is outside the scope of this work.
 For example, what are the typical range of values for the different parameters
 that affect the retry and blocking cost (and hence response time)? How
 tight is our dervied upper bounds in practice? Should the function used
 to represent different lengths of atomic sections be changed to give better
 results? What is the most practical suitable value for 
\begin_inset Formula $\psi$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

? Is it enough to designe a contention manager based on length of atomic
 sections, or other parameters should be included? And if yes, how is the
 best way to integrate these different parameters together? These are important
 directions for future work.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
DDA
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Ramadan:2009:CCT:1594835.1504201"

\end_inset

 considers data dependency awarness for transactional systems.
 It presents a formal model for dependence-aware transactions then proves
 its safety and its ability to accept any conflict-seriablizable interleavings,
 thus increasing concurrency than current transactional memory safety mechanisms.
\end_layout

\begin_layout Standard
In conventional STM systems, if two transactions access the same datum and
 at least one of the accesses is a write, then one transaction must either
 block or restart.
 But in DDA systems, active (in-progress) transactions are coordinated by
 two mechanisms: ordering and forwarding speculative data.
\end_layout

\begin_layout Standard
If transaction A reads a datum and then transaction B writes it (R→W), both
 transactions can continue so long as transaction A commits or aborts first.
 An implementation needs a mechanism to delay B’s commit.
 W→W dependences require the same mechanism.
 If transaction A writes a datum and then transaction B reads it (W→R),
 the system can forward the speculative data from A to B and make sure that
 A commits first.
 An implementation needs a mechanism to detect if A overwrites the data
 or restarts, in which case the runtime system restarts B.
 
\end_layout

\begin_layout Standard
Multiple dependences may arise if transactions conflict on more than one
 object.
 Dependences can form cycles in the dependence graph and these cycles must
 be broken by restarting at least one transaction to avoid deadlocks.
 Cycles means that transactions executed in a non conflict-serializable
 way.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Zhang:2010:BAE:1835698.1835715,zhangenhancing"

\end_inset

 considers applying DDA to distributed transactions.
 The example in Section 2.3 in 
\begin_inset CommandInset citation
LatexCommand cite
key "zhangenhancing"

\end_inset

 illustrates how distributed DDA works and the difference between DDA and
 GCCM model.
\end_layout

\begin_layout Standard
Each shared objects in the DDA model maintains a totally ordered sequence
 of versions in an object version list.
 At any given time, the versions of an object is numbered in increasing
 order.
 The numbering of the object version may change since the versions are inserted
 into or removed from the object list.
 The object version 
\begin_inset Formula $o.\nu_{n}$
\end_inset

 includes the data 
\begin_inset Formula $o.\nu_{n}.data$
\end_inset

, the writer transaction 
\begin_inset Formula $o.\nu_{n}.writer$
\end_inset

, the writer status 
\begin_inset Formula $o.\nu_{n}.writerstatus\in{committed,pending}$
\end_inset

, and a set of readers 
\begin_inset Formula $o.\nu_{n}.readers$
\end_inset

.
 A read operation of object 
\begin_inset Formula $o$
\end_inset

 returns the value of one of 
\begin_inset Formula $o$
\end_inset

’s version.
 A write operation of object 
\begin_inset Formula $o$
\end_inset

 adds a new version to 
\begin_inset Formula $o$
\end_inset

’s version list and sets its corresponding writer status to 
\begin_inset Formula $pending$
\end_inset

 which implies that the version 
\begin_inset Formula $o.\nu_{n}$
\end_inset

 is written by a live transaction.
 If this transaction aborts, the corresponding version is removed from the
 object list, but If transaction commits, the corresponding writer status
 is set to 
\begin_inset Formula $committed$
\end_inset

.
 Each transaction keeps a 
\begin_inset Formula $readList$
\end_inset

 and 
\begin_inset Formula $writeList$
\end_inset

.
 An entry in a 
\begin_inset Formula $readList$
\end_inset

 points to the version that has been read by the transaction.
 An entry in a writeList points to the version written by the transaction.
 Generally, the following principles are applied for read/write operations
 in the DDA model:
\end_layout

\begin_layout Enumerate
A read operation to object 
\begin_inset Formula $o$
\end_inset

 returns the value 
\begin_inset Formula $o.v_{m}$
\end_inset

 , where 
\begin_inset Formula $o.v_{m'}.writestatus=pending$
\end_inset

 for all 
\begin_inset Formula $m'>m$
\end_inset

.
\end_layout

\begin_layout Enumerate
A write operation to object 
\begin_inset Formula $o$
\end_inset

 adds the version 
\begin_inset Formula $o.v_{n+1}$
\end_inset

 to object 
\begin_inset Formula $o$
\end_inset

 if its latest version is 
\begin_inset Formula $o.v_{n}$
\end_inset

 .
 
\end_layout

\begin_layout Standard
Compared with the GCCM model, the DDA model allows the TM system to manage
 multiple versions of the object, while at the same time, keeping only one
 writable copy of each shared object.
 In the DDA model, the only possibility that a transaction is suspended
 occurs in the commit step, where the transaction may wait from other transactio
ns’ commit/abort responses due to established dependencies.
 
\end_layout

\begin_layout Standard
A transaction is aborted when the correctness criterion (which is the progressiv
e-opacity criterion) is violated.
 The progressive-opacity criterion is maintained by an acyclic precedence
 graph that follows an ideal edge update policy illustrated in Section 3.1.
\end_layout

\begin_layout Section
Problem Description
\end_layout

\begin_layout Standard
Form a real-time analysis perspective, what is the longest time any transaction
 can take to commit, noting that from a real-time point of view, each transactio
n should commit before the deadline, so each aborted transaction should
 retry, but the behavior of DDA and the progressive-opacity criterion does
 not tell the worst case response time of any transaction.
 Till now, it only tells the correctness of DDA and at least one of the
 transactions is going to commit, so it tries to ensure progress of transactions.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Title

\series bold
\size larger
\bar under
This part is collected from locking and lock free papers
\end_layout

\begin_layout Section

\series bold
\bar under
From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 not included yet
\end_layout

\begin_layout Standard
According to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, the lower bound on maximum blocking time (which they call pi-blocking)
 for any task due to s-oblivious locking protocols, for any gloabl or partitione
d JLSP (Job Level Static Priority) scheduler (i.
 e., G-EDF and P-EDF), is 
\begin_inset Formula $\Omega(m)$
\end_inset

 where 
\begin_inset Formula $m$
\end_inset

 is the number of processors.
 And the lower bound on the total blocking time for the whole task set is
 
\begin_inset Formula $\Omega(n.m)$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of tasks.
\end_layout

\begin_layout Standard
According to 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3,key-4,key-5"

\end_inset

, the FMLP protocol (which is used with P-EDF and G-EDF) uses both spin-based
 for short resources and suspension-based for long resources.
 A tighter bound is obtained for spin based protocols where jobs busy-wait
 non-preemptively in FIFO order, and they must wait for at most 
\begin_inset Formula $m-1$
\end_inset

 earlier requests, whereas for long resources, susbension protocol is used
 and jobs can incur 
\begin_inset Formula $\Theta(n)$
\end_inset

 s-oblivious pi-blocking.
 At the time of writing this paper, FMLP was the only prior locking protocol
 that supports G-EDF.
\end_layout

\begin_layout Standard
The global OMLP protocol is developed, which is suspension-based.
 Jobs incur at most 
\begin_inset Formula $O(m)$
\end_inset

 s-oblivious pi-blocking.
 This bound is calculated in lemma 4
\begin_inset Formula 
\begin{equation}
b_{i}\triangleq\sum_{k=1}^{q}N_{i,k}.2.(m-1).max_{1\le i\le n}\{L_{i,k}\}\label{eq29}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,k}$
\end_inset

 is the number of requests of resource 
\begin_inset Formula $k$
\end_inset

 by 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $k$
\end_inset

 is a resource identifier.
\end_layout

\begin_layout Itemize
\begin_inset Formula $q$
\end_inset

 is the number of resources.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{i,k}$
\end_inset

 is the maximum request length of resource 
\begin_inset Formula $k$
\end_inset

 by task 
\begin_inset Formula $T_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $N_{i,k}$
\end_inset

 and 
\begin_inset Formula $L_{i,k}$
\end_inset

 are assumed to be constants, so the s-oblivious pi-blocking is 
\begin_inset Formula $O(m)$
\end_inset

 and according to theorm 1, it is optimal.
 Theorm 4 checks schedulability of a set of tasks scheduled with G-EDF and
 OMLP using previous G-EDF tests that treat tasks as independent ones, so
 the 
\begin_inset Formula $p_{i}$
\end_inset

 cost calculated by lemma 4 for each task is added to its execution time
 
\begin_inset Formula $c_{i}$
\end_inset

 (because of the s-oblivious nature) and then used in the schedulability
 test.
 
\begin_inset Formula $p_{i}$
\end_inset

caculated by lemma 4 does not depend on the G-EDF, so it can be used for
 any JLSP scheduler.
\end_layout

\begin_layout Standard
For the case of partitioned scheduling, partitioned OMLP is used with P-EDF
 and the s-oblivious 
\begin_inset Formula $p_{i}$
\end_inset

 for each task is calculated by lemma 9 and it is independent on the EDF
 scheduler.
 Also, it was proved by theorem 3 that the s-oblivious 
\begin_inset Formula $p_{i}$
\end_inset

 under partitioned OMLP is optimal.
\end_layout

\begin_layout Standard
s-aware OMLP cannot acheive the 
\begin_inset Formula $O(m)$
\end_inset

 as 
\begin_inset Formula $p_{i}$
\end_inset

 cost, and it has a lower bound of 
\begin_inset Formula $\Omega(n)$
\end_inset

.
 Actually, for any locking protocol and JLSP scheduler, the s-aware analysis
 has a max 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(n)$
\end_inset

 and a total 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(n^{2})$
\end_inset

.
 Accordingly, s-aware pi-blocking under the global suspension based FMLP
 for any JLSP is asymptotically optimal, as proved in theorem 5, whereas
 in partitioned case, a simple partitioned FIFO protocol (SPFP) can be proved
 to be asymptotically optimal (by theorem 6) despite impractical.
 It should be noted that the use of FIFO queue helps in acheiving this asymptoti
c optimality as it was proved that ordering requests with EDF or static
 priority under any JLSP scheduler will have a maximum 
\begin_inset Formula $p_{i}$
\end_inset

 of 
\begin_inset Formula $\Omega(mn)$
\end_inset

 and a total one of 
\begin_inset Formula $\Omega(m(n-m)^{2})+m^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
The final results for different protocols optimality is shown in table 1.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

 not included yet
\end_layout

\begin_layout Standard
The motivation to the design of FMLP is the shortcomings of the previously
 multiprocessor locking protocols such as:-
\end_layout

\begin_layout Enumerate
Almost all previous schemes use parititioning schedulers, whereas FMLP support
 both paritioning and global scheduling.
\end_layout

\begin_layout Enumerate
Most previous schemes impose restrictive assumptions such as the proscription
 of nested access to global critical sections.
\end_layout

\begin_layout Enumerate
Most of them are inefficient when implementing non-nested locks, which is
 the common case.
\end_layout

\begin_layout Standard
The FMLP is optimized to execute non-nested resource access more efficiently;
 it is applied to G-EDF, P-EDF and PD2, besides, it supports nested resource
 access without constraining limitations.
\end_layout

\begin_layout Standard
Global FMLP uses a variant of G-EDF, named G-EDF algorithm for suspendable
 and non-preemptable jobs (GSN-EDF), which discriminates between linke job
 and scheduled one (the former means the job is assigned to a processor
 by G-EDF but it does not have to be scheduled on it right now because of
 non-preemptive blocking).
 GSN-EDF permits for non-preemptable jobs and bounds the time a job is non-preem
ptively blocked by a lower priority job to the maximum time of a non-preemptive
 section of a job that can be linked to the processor of the higher priority
 job, and this non-preemptive blocking can only happen when the higher priority
 job is released or resumed as proved by theorems 1, 2.
\end_layout

\begin_layout Standard
There are three types of blocking that can be incured by any task in global
 FMLP.
 These are busy-wait blocking, non-preemptive blocking and direct blocking.
 The final blocking term for a job is the sum of these three terms.
 Execution time of each task is inflated by this blocking amount (
\begin_inset Formula $e_{i}+b_{i}$
\end_inset

), then any G-EDF schedulability test can be used.
 It is not mentioned in the paper how to dereive values or upper bounds
 for the blocking terms, so we try to derive them here as follows:-
\end_layout

\begin_layout Enumerate
For the 
\begin_inset Formula $BW(T_{i})$
\end_inset

, a job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 busy-waits when it is scheduled on a processor and it cannot be removed
 by any other task, even higher priority ones, until its request is satisfied,
 and as busy-waiting tasks are organized in a FIFO and they are non-preemptable,
 then 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked by at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests, where each request can consist of sum of nested requests to some
 resources in the same group.
 This process proceeds for each short resource requested by 
\begin_inset Formula $T_{i}$
\end_inset


\begin_inset Formula 
\begin{equation}
BW(T_{i})\le\sum_{s\_\theta\in\theta_{i}}(max[\sum_{k=1,k\ne i}^{min(m,n)-1}|R_{k}(g(s\_\theta))|])\label{eq26}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $s\_\theta$
\end_inset

 is a short request for object 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $g(s\_\theta)$
\end_inset

 is the group containing short resource 
\begin_inset Formula $\theta$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $R_{k}(g(s\_\theta))$
\end_inset

 is a request made by 
\begin_inset Formula $T_{k}$
\end_inset

 to the 
\begin_inset Formula $g(s\_\theta)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $|R_{k}(g(s\_\theta))|$
\end_inset

 is the size of the request and it equals the sum of all nested accesses
 to resources in 
\begin_inset Formula $g(s\_\theta)$
\end_inset

 made by 
\begin_inset Formula $T_{k}$
\end_inset

.
\end_layout

\begin_layout Itemize
Of course, the max sum of the highest 
\begin_inset Formula $min(m,n)-1$
\end_inset

 requests equals the sum of the highest 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $min(m,n)-1$
\end_inset

 requests.
\end_layout

\begin_layout Enumerate
For the 
\begin_inset Formula $NPB(T_{i})$
\end_inset

, Job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be non-preemptively blocked, either at its release or when it resumes,
 by at most the maximum (nested) request to any short resource.
 So,
\begin_inset Formula 
\begin{equation}
NPB(T_{i})=(1+N_{i,l}).max_{k\ne i}|R_{k}(g(s\_\theta))|\label{eq27}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{i,l}$
\end_inset

 is the number of times 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 requests long resources.
\end_layout

\begin_deeper
\begin_layout Standard
1 is added to 
\begin_inset Formula $N_{i,l}$
\end_inset

 because 
\begin_inset Formula $T_{i}$
\end_inset

 can be non-preemptively blocked at its release in addition to suspension
 times.
\end_layout

\end_deeper
\begin_layout Enumerate
For the 
\begin_inset Formula $DB(T_{i})$
\end_inset

, 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked by all other 
\begin_inset Formula $n-1$
\end_inset

 tasks for any long resource.
 Any of these 
\begin_inset Formula $n-1$
\end_inset

 requests can be a nested request to long resources belonging to the same
 group, besides any of these requests can contain a request to a short resource
 and it can busy-wait on it.
 So, each request in the 
\begin_inset Formula $n-1$
\end_inset

 requests, requiring access to a short resource, can be delayed by at most
 the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests to the group containing that short resource.
 So, 
\begin_inset Formula 
\begin{equation}
DB(T_{i})\le\sum_{l\_\theta\in\theta_{i}}[max_{k=1,k\ne i}^{n-1}|R_{k}(g(l\_\theta))|]\label{eq28}
\end{equation}

\end_inset

where:-
\end_layout

\begin_layout Itemize
\begin_inset Formula $|R_{k}(g(l\_\theta))|$
\end_inset

 is the sum of nested requests by 
\begin_inset Formula $T_{k}$
\end_inset

 to the group containing 
\begin_inset Formula $l\_\theta$
\end_inset

, plus 
\begin_inset Formula $max_{s\_\theta\in\theta_{k}}[\sum_{h=1,h\ne k}^{min(m,n)-1}|R_{h}(g(s\_\theta))|]$
\end_inset

, if 
\begin_inset Formula $s\_\theta$
\end_inset

 can be called inside 
\begin_inset Formula $l\_\theta$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

, an upper bound was developed for 
\begin_inset Formula $DB(T_{i})$
\end_inset

 but without considering the effect of requesting a short resource within
 a long one, besides it did not develope bounds for the other two terms
 as its main concentration was on the suspension-based part of FMLP.
\end_layout

\end_deeper
\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The idea of bounding number of retries and preventing starvation is good,
 but as the paper is still work in progress, it may need some modifications
 in the underlying algorithms, or in the conditions used to bound number
 of retrials.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "shavit2011data"

\end_inset

 included in introduction
\end_layout

\begin_layout Standard
It generally descripes how the evolution of multicore systems affect concurrent
 data structures, in design and semantics, but says nothing about relation
 between lock-free or wait-free objects to real-time systems.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
For the lock-free implementation mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

, the blocking cost is added to the execution cost for each task in equation
 (11).
 So, the total response time for 
\begin_inset Formula $T_{i}$
\end_inset

 is as calculated by equation (11), in addition to interference from higher
 priority tasks.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "sarni2009real"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The paper descripes the design of real time contention manager based on
 absolute deadline of transactions (not the absolute deadline of job).
 It explores design ideas from real time database systems (as transaction
 memory is inspired from database transactions).
 It goes to a bit into lower level implementation of the design of the real
 time STM (i.
 e., it just does not concern about the CM policy idea, but also how to implement
 it based on previous real implemntations of CMs).
 The paper provides experimental (not analytical) evaluation of the performance
 of their CM against the best available CM (they choose the best available
 one based on experiments as they evaluated peroformance of different STM
 implementations on linux and LITMUS, with different real time schedulers
 in LITMUS).
 This experimental evaluation is based on absolute deadline gurantee ratio
 which measures number of transactions that could successfully commit before
 their deadlines.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm,schoeberl2010design,schoeberl:2009-19"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010design,schoeberl2010rttm"

\end_inset

 describe a method for implementing HTM.
 Their bound for transaction retries assumes that the worst case pattern
 of interference occurs when conflicting atomic sections are released at
 the same time, but this is not the case, as shown in the analysis here.
 This assumption is changed in theorom 1 in 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl:2009-19"

\end_inset

 for a set of 
\begin_inset Formula $n$
\end_inset

 threads (resemble jobs in this theorom), with each thread containing only
 one atomic region, which gives a closer number of retries for one atomic
 section to our analysis.
 But their analysis in theorom 2 for 
\begin_inset Formula $n$
\end_inset

 threads (resemble tasks in this theorom) still does not cover the worst
 case retry pattern of atomic sections.
 Experimental evaluation is done to show the performance of the proposed
 RTTM.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "fahmy2009response"

\end_inset

 included in related work
\end_layout

\begin_layout Standard
The paper assumes distributed systems, where each node is a uniprocessor
 system.
 Tasks on one processor scheduled by EDF, and atomic sections are local
 to nodes (the part of the atomic section on node A commits first before
 the part on node B starts).
 It should be noted that a higher priority job, 
\begin_inset Formula $T_{j}^{l}$
\end_inset

, causes only one retry in a lower priority one, 
\begin_inset Formula $T_{i}^{k}$
\end_inset

, because of the uniprocessor system (the lower priority job is preempted
 during the whole execution time of the higher priority one), thus the retry
 cost is considered by adding one 
\begin_inset Formula $s$
\end_inset

 for each interference of a higher priority job.
\end_layout

\begin_layout Section
From 
\begin_inset CommandInset citation
LatexCommand cite
key "ras2010response"

\end_inset

 not found
\end_layout

\begin_layout Standard
REVIEW THIS PAPER.
 IT INCLUDES RESPONSE TIME ANALYSIS OF A SIMILAR ARCHITECTURE TO STM.
\end_layout

\begin_layout Section
From [Book of Real-time database systems: architecture and design]
\end_layout

\begin_layout Subsection
Chapter 4
\end_layout

\begin_layout Standard
The following references introduce some information on CONSERVATIVE CONCURRENTCY
 CONTROL in real time database systems:- 1, 2, 3, 4, 5, 10, 24.
\end_layout

\begin_layout Standard
variations of RWPCP (Read/Write PCP) 7, 11, 15, 16, 17, 22, 26.
\end_layout

\begin_layout Standard

\series bold
\bar under
References for abort algorithms
\end_layout

\begin_layout Itemize
1 for high priority.
\end_layout

\begin_layout Itemize
2PL 6 for variation of 1.
\end_layout

\begin_layout Itemize
9, 10, 11, 21, 22,23, 24, 26 for integrating abortion in locking which maintain
 the followin idea:- 
\begin_inset Quotes eld
\end_inset

The main idea behind transaction aborting is that when a higher priority
 transaction is blocked by a lower priority transaction due to resource
 competition, the higher priority transaction aborts the lower priority
 transaction if the lower priority transaction is abortable, and the lower
 priority transaction may introduce excessive blocking time to any higher
 priority transaction.
 If not, the higher priority transaction is blocked by the lower priority
 transaction.
 Whether a transaction is abortable or may impose excessive blocking on
 any higher priority transaction can be determined by an on-line or off-line
 schedulability analysis.
 
\begin_inset Quotes eld
\end_inset


\end_layout

\begin_layout Itemize
[11, 9] proposed a framework in trading the aborting cost with the blocking
 cost of transactions.
 THEY MAY BE CLOSE TO YOUR WORK.
 READ THEM.
\end_layout

\begin_layout Standard
For OPTIMISTIC CONCURRENCY CONTROL, references include:-
\end_layout

\begin_layout Itemize
3, 4 wait-50 and wait-X.
\end_layout

\begin_layout Itemize
[13][14] dynamic adjustment of serializability order to avoid unnecessary
 restart.
\end_layout

\begin_layout Subsection
Chapter 5
\end_layout

\begin_layout Standard
May not be very usefull as it speaks about relaxed correctness criterion
 and its effect on concurrency control algorithms.
\end_layout

\begin_layout Standard
If you want, have a look at these references:-
\end_layout

\begin_layout Standard
8, 9, 12, 13, 3
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Points to research
\end_layout

\begin_layout Itemize
Job level dynamic priority for transactions.
\end_layout

\begin_layout Itemize
Multiple objects per transaction.
\end_layout

\begin_layout Itemize
Devide transaction to read and write operations.
\end_layout

\begin_layout Itemize
Integration of locking with transactions.
\end_layout

\begin_layout Itemize
Devide transaction to read phase, verify phase, commit phase.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Past and Related Work
\end_layout

\begin_layout Subsection
Real-Time Lock-free Synchronization
\end_layout

\begin_layout Standard
Transactional-like concurrency control and lock-free synchronization, for
 real-time systems, has been previously studied in (e.g.,
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "anderson95realtime,anderson1997lock,684918,1203552,896371,anderson96framework,811240"

\end_inset

).
 Despite their numerous advantages over locks (e.g., deadlock-freedom), their
 programmability has remained a challenge.
 Past studies show that they are best suited for simple data structures
 where their retry cost is competitive to the cost of lock-based synchronization
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "bc+08"

\end_inset

.
 In contrast, STM is semantically simpler
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Herlihy:2006:AMP:1146381.1146382"

\end_inset

, and is often the only viable lock-free solution for complex data structures
 (e.g., red/black tree)
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 and nested critical sections
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Saha:2006:MHP:1122971.1123001,Agrawal:2008:SOT:1378533.1378553,Peri:2011:CCE:1946143.1946152"

\end_inset

.
\end_layout

\begin_layout Standard
The past work that is closest to ours is
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, which upper bounds retries and response times for EDF CM with G-EDF, and
 identifies the tradeoffs against locking and lock-free protocols.
 Similar to
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

,
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 also assumes that the worst case conflict between atomic sections occurs
 when the sections are released simultaneously.
 In addition, we consider RMA CM, besides EDF CM.
 The ideas in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 are extended in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

, which presents three real-time CM designs.
 However, no retry bounds or schedulability analysis is presented in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "barrosmanaging"

\end_inset

.
\end_layout

\begin_layout Subsection
Transactional Memory: Overview 
\end_layout

\begin_layout Standard
TM is motivated by database transactions — unit of work of a database system,
 with ACID properties 
\begin_inset CommandInset citation
LatexCommand cite
key "Gray:1981:TCV:1286831.1286846"

\end_inset

.
 In TM, concurrent threads synchronize via transactions when they access
 shared memory.
 A TM transaction is an explicitly delimited sequence of steps executed
 atomically by a thread 
\begin_inset CommandInset citation
LatexCommand cite
key "tm-book10"

\end_inset

.
 Atomicity implies all-or-nothing: the sequence of steps (i.e., reads and
 writes) logically occur at a single instant in time; intermediate states
 are invisible to other transactions.
 The semantic difficulty of locks and the resulting high development and
 maintenance costs have been the driving motivation for seeking alternate
 concurrency control abstractions.
 The design of lock-free and wait-free data structures are one such alternative.
 These approaches are highly performant, but significantly complex to write
 and reason about, and therefore, have largely been limited to a small set
 of basic data structures — e.g., linked lists, queues, stacks 
\begin_inset CommandInset citation
LatexCommand cite
key "1508449,4079519,1656921,Cho:2006:UAP:1141277.1141490"

\end_inset

.
\end_layout

\begin_layout Standard
The term “transactional memory” was proposed by Herlihy and Moss [5], where
 they presented hardware support for lock-free data structures.
 TM has been provided in hardware (HTM) 
\begin_inset CommandInset citation
LatexCommand cite
key "698569,Martinez:2002:SSA:605397.605400,Oplinger:2002:ESR:605397.605417,Rajwar:2002:TLE:605397.605399,ham04"

\end_inset

, software (STM) 
\begin_inset CommandInset citation
LatexCommand cite
key "4145102,Dolev:2008:CSC:1400751.1400769,Harris:2003:LSL:949305.949340,Harris:2005:CMT:1065944.1065952,Cho:2006:UAP:1141277.1141490,Marathe:2004:DTM:1066650.1066660,Yoo:2008:ATS:1378533.1378564,Saha:2006:ASS:1194816.1194838,Shpeisman:2007:EIO:1250734.1250744"

\end_inset

 and hybrid TM 
\begin_inset CommandInset citation
LatexCommand cite
key "dam06,Kumar:2006:HTM:1122971.1123003,Minh:2007:EHT:1250662.1250673,Shriraman:2007:IHA:1250662.1250676"

\end_inset

.
 Hybrid TM allows STM to exploit any available HTM support to improve performanc
e.
 One basic problem in STM is how to correctly and efficiently resolve conflicts
 when multiple threads access one shared objects simultaneously and at least
 one writes inot it.
 Generally, a contention manager (CM) is responsible to ensure that all
 transactions eventually commit by choosing which transaction to delay or
 abort and when to restart the aborted transaction in case of conflicts
 [
\series bold
REFERNCE FROM NEW PAPERS
\series default
].
\end_layout

\begin_layout Subsection
Real-Time STM
\end_layout

\begin_layout Standard
STM concurrency control for real-time systems has been previously studied
 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "manson2006preemptible,fahmy2009bounding,sarni2009real,schoeberl2010rttm,barrosmanaging,6045438"

\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "manson2006preemptible"

\end_inset

 proposes a restricted version of STM for uniprocessors.
 
\begin_inset CommandInset citation
LatexCommand cite
key "fahmy2009bounding"

\end_inset

 bounds response times in distributed multiprocessor systems with STM synchroniz
ation.
 They consider Pfair scheduling, limit to small atomic regions with fixed
 size, and limit transaction execution to span at most two quanta.
 
\begin_inset CommandInset citation
LatexCommand cite
key "sarni2009real"

\end_inset

 presents real-time scheduling of transactions and serializes transactions
 based on deadlines.
 However, the work does not bound retries and response times, nor establishes
 tradeoffs against lock-free synchronization.
 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

 proposes real-time HTM.
 The retry bound developed in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

 assumes that the worst case conflict between atomic sections of different
 tasks occurs when the sections are released at the same time.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 presents earliest-deadline CM or ECM.
 ECM resolves conflicts by aborting the transaction with longer absoluted
 deadline.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 derives a number of properties for ECM, upper bounds transactional retrys,
 and compares schedulability of ECM to retry-loop lock-free synchronization
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

, like 
\begin_inset CommandInset citation
LatexCommand cite
key "schoeberl2010rttm"

\end_inset

, assumes that the worst case conflict between atomic sections occurs when
 the sections are released simultaneously.
 Besides, 
\begin_inset CommandInset citation
LatexCommand cite
key "6045438"

\end_inset

 assumes all transactions have equal lengths.
\end_layout

\begin_layout Subsection
Contribution
\end_layout

\begin_layout Standard
We consider STM for real-time multiprocessor systems under G-EDF and G-RMA
 schedulers.
 Atomic sections can be of arbitrary size.
 Earliest deadline CM (ECM) is re-presented, and another priority-based
 CM (RCM) is developed.
 Length-based CM (LCM) is provided to reduce retry cost of aborted transactions.
 LCM depends not only on priority, but also on relative length of the interferin
g transaction to the remaining length of the interfered transaction.
\end_layout

\begin_layout Standard
Priority-based with Negative values and First access (PNF) CM is developed
 to solve two issues in ECM and RCM: 1) To handle multiple objects per transacti
on efficiently (i.
 e., avoid transitive retry).
 2) To reduce wasted time of processors on retrying transctions.
 We establish upper bounds on retry cost and response time under ECM, RCM,
 LCM and PNF.
 We theorticially and experimentally compare schedulability of developed
 contention managers and retry-loop lock-free synchronization for real-time
 mulitprocessor systems.
 We develope conditions under which each contention manager is prefered.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Some synchronization protocols 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="4cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="middle" width="1.5cm">
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none" width="1.5cm">
\begin_inset Text

\begin_layout Plain Layout

\size small
Multiprocessor
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Protocol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Uniprocessor
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Global
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none" width="1.5cm">
\begin_inset Text

\begin_layout Plain Layout

\size small
Partitioned
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
G-EDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PFair
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Others
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
P-EDF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Static Priority
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Others
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PCP
\begin_inset CommandInset citation
LatexCommand cite
key "chen1990dynamic"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP
\begin_inset CommandInset citation
LatexCommand cite
key "baker1991stack"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PCP variant
\begin_inset CommandInset citation
LatexCommand cite
key "Rajkumar:1991:SRS:532621"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PCP variant
\begin_inset CommandInset citation
LatexCommand cite
key "sha1990priority"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
MPCP
\begin_inset CommandInset citation
LatexCommand cite
key "lakshmanan2009coordinated,rajkumar2002real"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
DPCP
\begin_inset CommandInset citation
LatexCommand cite
key "rajkumar2002real-2"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "chen1998multiprocessor"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP implementation
\begin_inset CommandInset citation
LatexCommand cite
key "lopez2004utilization"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
SRP implementation
\begin_inset CommandInset citation
LatexCommand cite
key "gai2003comparison"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "holman2006locking"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PPCP
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
PIP
\begin_inset CommandInset citation
LatexCommand cite
key "easwaran2009resource"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
FMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-4,brandenburg2008implementation"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

(GSN-EDF)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

(PSN-EDF)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
OMLP
\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset

JLSP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula $\checkmark$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center

\size small
\begin_inset Formula $\checkmark$
\end_inset

JLSP
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "global_bibliography/global_bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
