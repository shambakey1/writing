#LyX file created by tex2lyx 2.0.0
\lyxformat 345
\begin_document
\begin_header
\textclass report
\begin_preamble
%
% PROJECT: <ETD> Electronic Thesis and Dissertation Initiative
%   TITLE: LaTeX report template for ETDs in LaTeX
%  AUTHOR: Neill Kipp, nkipp@vt.edu
%     URL: http://etd.vt.edu/latex/
% SAVE AS: etd.tex
% REVISED: September 6, 1997 [GMc 8/30/10]
% 

% Instructions: Remove the data from this document and replace it with your own,
% keeping the style and formatting information intact.  More instructions
% appear on the Web site listed above.




\newif\if@restonecol

\let\algorithm\relax
\let\endalgorithm\relax
%\usepackage[tight,footnotesize]{subfigure}
\usepackage{subfigure}\usepackage{paralist}\usepackage{comment}\usepackage{array}\usepackage{cite}\usepackage[ruled]{algorithm2e}\usepackage{babel}

\providecommand{\tabularnewline}{\\}


\newtheorem{clm}{Claim}
\newtheorem{proof}{Proof}
\newtheorem{mydef}{Definition}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
\pdfpageheight\paperheight
\pdfpagewidth\paperwidth

%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}
%% A simple dot to overcome graphicx limitations
\newcommand{\lyxdot}{.}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.







\setlength{\textwidth}{6.5in}
\setlength{\textheight}{8.5in}
\setlength{\evensidemargin}{0in}
\setlength{\oddsidemargin}{0in}
\setlength{\topmargin}{0in}




% Uncomment for double-spaced document.
% \renewcommand{\baselinestretch}{2}

% \usepackage{epsf}


\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize 12
\spacing single
\use_hyperref 0
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip 0.1in
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pagenumbering{roman}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center


\begin_inset ERT
status collapsed

\begin_layout Standard

% TITLE
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\size larger
On the Design of Contention Managers for Real-Time Software Transactional Memory 
\size default

\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Mohammed Elshambakey
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Preliminary Examination Proposal submitted to the Faculty of the 
\begin_inset Newline newline
\end_inset

 Virginia Polytechnic Institute and State University 
\begin_inset Newline newline
\end_inset

 in partial fulfilment of the requirements for the degree of
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Doctor of Philosophy 
\begin_inset Newline newline
\end_inset

 in 
\begin_inset Newline newline
\end_inset

 Literature and Technology
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Binoy Ravindran, Chair 
\begin_inset Newline newline
\end_inset

 Robert P. Broadwater 
\begin_inset Newline newline
\end_inset

 Cameron D. Patterson 
\begin_inset Newline newline
\end_inset

 Mohamed Rizk Mohamed. Rizk
\begin_inset Newline newline
\end_inset

 Anil Kumar S. Vullikanti
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

March 16, 2012(
\series bold
MODIFY
\series default
) 
\begin_inset Newline newline
\end_inset

 Blacksburg, Virginia
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Keywords: Software Transactional Memory, Embedded Systems, Contention Managers 
\begin_inset Newline newline
\end_inset

 Copyright 2012(
\series bold
MODIFY
\series default
), Mohammed Elshambakey
\end_layout

\begin_layout Standard


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center


\size large
On the Design of Contention Managers for Real-Time Software Transactional Memory
\size default

\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

Mohammed Elshambakey
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

(ABSTRACT)
\end_layout

\begin_layout Standard
\align center


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard


\series bold
NEEDS TO BE WRITTEN
\series default

\end_layout

\begin_layout Standard


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% GRANT INFORMATION
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\series bold
NEEDS TO BE WRITTEN
\series default

\end_layout

\begin_layout Standard


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% Dedication and Acknowledgments are both optional
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
chapter*{Dedication}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
chapter*{Acknowledgments}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard


\begin_inset FloatList figure

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard


\begin_inset FloatList table

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pagenumbering{arabic}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pagestyle
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

myheadings
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter

Introduction
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 1. Introduction 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\series bold
NEEDS TO BE WRITTEN
\series default

\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% Include an EPS figure with this command:
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%   
\backslash
epsffile{filename.eps}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% Do tables like this:
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float table
wide false
sideways false
status open


\begin_layout Standard


\begin_inset Caption


\begin_layout Standard

The Graduate School wants captions above the tables.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center


\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

x 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

2 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

2 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

4 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

Past and Related Work
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 2. Past and Related Work 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

ECM and RCM
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 3. ECM and RCM 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

We consider software transactional memory (STM) for concurrency control in multicore embedded real-time software. We investigate real-time contention managers (CMs) for resolving transactional conflicts, including those based on dynamic and fixed priorities, and establish upper bounds on transactional retries and task response times. We identify the conditions under which STM (with the proposed CMs) is superior to lock-free synchronization.
\end_layout

\begin_layout Section

G-EDF/EDF CM Response Time
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:g-edf-edf-cm"

\end_inset


\end_layout

\begin_layout Standard

Since only one atomic section among many that share the same object can commit at any time under STM, those atomic sections execute in sequential order. A task 
\begin_inset Formula $\tau_{i}$
\end_inset

's atomic sections are interfered by other tasks that share the same objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

. The EDF CM will abort and retry an atomic section of 
\begin_inset Formula $\tau_i$
\end_inset

, 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 due to a conflicting atomic section of 
\begin_inset Formula $\tau_j$
\end_inset

, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

, if the absolute deadline of 
\begin_inset Formula $\tau_j$
\end_inset

 is less than or equal to the absolute deadline of 
\begin_inset Formula $\tau_i$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: I reworded. Check for accuracy. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Hereafter, we will use 
\emph on
ECM
\emph default
 to refer to a multiprocessor system scheduled by G-EDF and resolves STM conflicts using the EDF CM.
\end_layout

\begin_layout Standard

The maximum number of times a task 
\begin_inset Formula $\tau_{j}$
\end_inset

 interferes with 
\begin_inset Formula $\tau_{i}$
\end_inset

 is given in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

 and is illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

. Here, the deadline of an instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

 coincides with that of 
\begin_inset Formula $\tau_{i}$
\end_inset

, and 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 is delayed by its maximum jitter 
\begin_inset Formula $J_{j}$
\end_inset

, which causes all or part of 
\begin_inset Formula $\tau_{j}^1$
\end_inset

's execution to overlap within 
\begin_inset Formula $T_i$
\end_inset

. From Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig1"

\end_inset

, it is seen that 
\begin_inset Formula $\tau_{j}$
\end_inset

's maximum workload that interferes with 
\begin_inset Formula $\tau_{i}$
\end_inset

 (when there are no atomic sections) in 
\begin_inset Formula $T_{i}$
\end_inset

 is: 
\begin_inset Formula \begin{eqnarray}
W_{ij}\left(T_{i}\right) & \le & \left\lfloor\frac{T_{i}}{T_{j}}\right\rfloor c_{j}+min\left(c_{j},T_{i}-\left\lfloor\frac{T_{i}}{T_{j}}\right\rfloor T_{j}\right)\nonumber \\
 & \le & \left\lceil\frac{T_{i}}{T_{j}}\right\rceil c_{j}\label{eq11}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

For an interval 
\begin_inset Formula $L<T_{i}$
\end_inset

, the worst case pattern of interference is shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig2"

\end_inset

. Here, 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 contributes by all its 
\begin_inset Formula $c_j$
\end_inset

, and 
\begin_inset Formula $d_j^{k-1}$
\end_inset

 does not have to coincide with 
\begin_inset Formula $L$
\end_inset

, as 
\begin_inset Formula $\tau_j^{k-1}$
\end_inset

 has a higher priority than that of 
\begin_inset Formula $\tau_{i}$
\end_inset

. The workload of 
\begin_inset Formula $\tau_{j}$
\end_inset

 is: 
\begin_inset Formula \begin{equation}
W_{ij}\left(L\right)\le \left(\left\lceil\frac{L-c_{j}}{T_{j}}\right\rceil +1\right)c_{j}
\label{eq12}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

Thus, the overall workload, over an interval 
\begin_inset Formula $R$
\end_inset

 is: 
\begin_inset Formula \begin{equation}
W_{ij}\left(R\right)=min\left(W_{ij}\left(R\right),W_{ij}\left(T_{i}\right)\right)\label{eq13}\end{equation}
\end_inset

 where 
\begin_inset Formula $W_{ij}(R)$
\end_inset

 is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

) if 
\begin_inset Formula $R<T_i$
\end_inset

, otherwise, it is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq11"

\end_inset

).
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%[htbp]
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure9-a.eps
	scale 50
	BoundingBox 0bp 0bp 542bp 162bp

\end_inset

 
\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig1"

\end_inset

 Maximum interference between two tasks, running on different processors, under G-EDF
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure9-b.eps
	scale 50
	BoundingBox 0bp 0bp 542bp 162bp

\end_inset

 
\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig2"

\end_inset

Maximum interference during an interval 
\begin_inset Formula $L$
\end_inset

 of 
\begin_inset Formula $T_{i}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Retry Cost of Atomic Sections
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide true
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Early validation]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure5-a.eps
	scale 45

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig5-a"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 1.2cm
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Lazy validation with $len(s_{i}^{k}(
\backslash
theta))
\backslash
le len(s_{j}^{l}(
\backslash
theta))$]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure5-b-1.eps
	scale 65

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig5-b"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 1.5cm
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Lazy validation with $len(s_{i}^{k}(
\backslash
theta))>len(s_{j}^{l}(
\backslash
theta))$]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure5-c-1.eps
	scale 65

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig5-c"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Retry of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 due to 
\begin_inset Formula $s_j^l(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig5"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "gedf-edf"

\end_inset

 Under ECM, a task 
\begin_inset Formula $T_i$
\end_inset

's maximum retry cost during 
\begin_inset Formula $T_i$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{eqnarray}
RC\left(T_{i}\right) & \le & \sum_{\theta\in\theta_{i}}\Bigg(\Big(\sum_{\tau_{j}\in\gamma_i(\theta)}\Big(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\sum_{\forall s_{j}^{l}(\theta)}len\big(s_{j}^{l}(\theta)\nonumber \\
 & + & s_{max}(\theta)\big)\Big)\Big)-s_{max}(\theta)+s_{i_{max}}(\theta)\Bigg)\label{eq3}\end{eqnarray}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Consider two instances 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 and 
\begin_inset Formula $\tau_{j}^b$
\end_inset

, where 
\begin_inset Formula $d_j^b \le d_i^a$
\end_inset

. When a shared object conflict occurs, the EDF CM will commit the atomic section of 
\begin_inset Formula $\tau_j^b$
\end_inset

 while aborting and retrying that of 
\begin_inset Formula $\tau_i^a$
\end_inset

. Thus, an atomic section of 
\begin_inset Formula $\tau_i^a$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

, will experience its maximum delay when it is at the end of its atomic section, and the conflicting atomic section of 
\begin_inset Formula $\tau_j^b$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, starts, because the whole 
\begin_inset Formula $s_i^k (\theta)$
\end_inset

 will be repeated after 
\begin_inset Formula $s_j^l (\theta)$
\end_inset

.
\end_layout

\begin_layout Standard

Validation (i.e., conflict detection) in STM is usually done in two ways
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "austenmc:tcc:dissertation:2009"

\end_inset

: a) eager (pessimistic), in which conflicts are detected at access time, and b) lazy (optimistic), in which conflicts are detected at commit time. Despite the validation time incurred (either eager or lazy), 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will retry for the same time duration, which is 
\begin_inset Formula $len(s_{j}^{l}(\theta)+s_i^k(\theta))$
\end_inset

. Then, 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 can commit successfully unless it is interferred by another conflicting atomic section, as shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig5"

\end_inset

.
\end_layout

\begin_layout Standard

In Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-a"

\end_inset

, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 validates at its beginning, due to early validation, and a conflict is detected. So 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 retries multiple times (because at the start of each retry, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 validates) during the execution of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

. When 
\begin_inset Formula $\tau_{j}^b$
\end_inset

 finishes its atomic section, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 executes its atomic section.
\end_layout

\begin_layout Standard

In Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-b"

\end_inset

, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 validates at its end (due to lazy validation), and detects a conflict with 
\begin_inset Formula $\tau_{j}^b$
\end_inset

. Thus, it retries, and because its atomic section length is shorter than that of 
\begin_inset Formula $\tau_{j}^b$
\end_inset

, it validates again within the execution interval of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

. However, the EDF CM retries it again. This process continues until 
\begin_inset Formula $\tau_{j}^b$
\end_inset

 finishes its atomic section. If 
\begin_inset Formula $\tau_{i}^a$
\end_inset

's atomic section length is longer than that of 
\begin_inset Formula $\tau_{j}^b$
\end_inset

, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 would have incurred the same retry time, because 
\begin_inset Formula $\tau_{j}^b$
\end_inset

 will validate when 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 is retrying, and 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 will retry again, as shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig5-c"

\end_inset

. Thus, the retry cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is 
\begin_inset Formula $len(s_{i}^{k}(\theta)+s_{j}^{l}(\theta))$
\end_inset

.
\end_layout

\begin_layout Standard

If multiple tasks interfere with 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 or interfere with each other and 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 (see the two interference examples in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig6"

\end_inset

), then, in each case, each atomic section of the shorter deadline tasks contributes to the delay of 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

 by its total length, plus a retry of some atomic section in the longer deadline tasks. For example, 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 contributes by 
\begin_inset Formula $len(s_{j}^{l}(\theta)+s_{i}^{p}(\theta))$
\end_inset

 in both Figures
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-a"

\end_inset

 and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: YOu should say "..in both Figures~
\backslash
ref{fig6-a} and~
\backslash
ref{fig6-b}." (That is, "F" must be capital case).
\end_layout

\begin_layout Standard


\end_layout

\end_inset

In Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig6-b"

\end_inset

, 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

 causes a retry to 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, and 
\begin_inset Formula $s_{h}^{w}(\theta)$
\end_inset

 causes a retry to 
\begin_inset Formula $s_{k}^{y}(\theta)$
\end_inset

.
\end_layout

\begin_layout Standard

Since we do not know in advance which atomic section will be retried due to another, we can safely assume that, each atomic section (that shares the same object with 
\begin_inset Formula $\tau_i^a$
\end_inset

) in a shorter deadline task contributes by its total length, in addition to the maximum length between all atomic sections that share the same object, 
\begin_inset Formula $len(s_{max}(\theta))$
\end_inset

. Thus, 
\begin_inset Formula \begin{equation}
\mbox{\ensuremath{W_{i}^{p}\left(s_{j}^{k}\left(\theta\right)\right)\le len\left(s_{j}^{k}\left(\theta\right)+s_{max}\left(\theta\right)\right)}}\label{eq2}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

Thus, the total contribution of all atomic sections of all other tasks that share objects with a task 
\begin_inset Formula $\tau_i$
\end_inset

 to the retry cost of 
\begin_inset Formula $\tau_i$
\end_inset

 during 
\begin_inset Formula $T_i$
\end_inset

 is: 
\begin_inset Formula \begin{eqnarray}
RC\left(T_{i}\right) & \le & \sum_{\theta\in\theta_{i}}\sum_{\tau_{j}\in\gamma_i(\theta)}\Big(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\sum_{\forall s_{j}^{l}(\theta)}len\big(s_{j}^{l}(\theta)\nonumber \\
 & + & s_{max}(\theta)\big)\Big)\label{eq3-1}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

Here, 
\begin_inset Formula $\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\sum_{\forall s_{j}^{l}\left(\theta\right)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}\left(\theta\right)\right)$
\end_inset

 is the contribution of all instances of 
\begin_inset Formula $\tau_{j}$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

. This contribution is added to all tasks. The last atomic section to execute is 
\begin_inset Formula $s_{i}^{p}(\theta)$
\end_inset

 (
\begin_inset Formula $\tau_i$
\end_inset

's atomic section that was delayed by conflicting atomic sections of other tasks). One of the other atomic sections (e.g., 
\begin_inset Formula $s_{m}^{n}(\theta)$
\end_inset

) should have a contribution 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{i_{max}}(\theta))$
\end_inset

, instead of 
\begin_inset Formula $len(s_{m}^{n}(\theta)+s_{max}(\theta))$
\end_inset

. That is why one 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 should be subtracted, and 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset

 should be added (i.e., 
\begin_inset Formula $s_{i_{max}}(\theta)-s_{max}(\theta)$
\end_inset

). Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%[htbp]%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Float figure
wide true
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Other atomic sections interfere only with $s_i^p(
\backslash
theta)$]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure6-a-1.eps
	scale 65

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig6-a"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 1cm
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[All atomic sections interfere with each other and $s_i^p(
\backslash
theta)$]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure6-b.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig6-b"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="1cm">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Graphics 
	filename figures/circle.eps
	scale 45

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

Replaced in calculations by 
\begin_inset Formula $s_{max}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Graphics 
	filename figures/dotted_circle.eps
	scale 45

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

Replaced in calculations by 
\begin_inset Formula $s_{i_{max}}(\theta)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption


\begin_layout Standard

Retry of 
\begin_inset Formula $s_i^p(\theta)$
\end_inset

 due to other atomic sections
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig6"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "gedf-edf"

\end_inset

's retry bound can be minimized as: 
\begin_inset Formula \begin{equation}
RC(T_{i})\le \sum_{\theta\in\theta_{i}}min(\Phi_1 , \Phi_2)\label{eq5}\end{equation}
\end_inset

 where 
\begin_inset Formula $\Phi_1$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

) for one object 
\begin_inset Formula $\theta$
\end_inset

 (not the sum of objects in 
\begin_inset Formula $\theta_i$
\end_inset

), and 
\begin_inset Formula \begin{eqnarray}
\Phi_2 & = & \Bigg(\sum_{\tau_{j}\in\gamma_i(\theta)} \Big(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\sum_{\forall s_{j}^{l}(\theta)}len \big(s_{j}^{l}(\theta)\nonumber \\
 &  & +s_{max}^{*}(\theta) \big) \Big) \Bigg)-\bar{s}_{max}(\theta)+s_{i_{max}}(\theta)\label{eq4}\end{eqnarray}
\end_inset

 where 
\begin_inset Formula $s^*_{max}$
\end_inset

 is the maximum atomic section between all tasks, except 
\begin_inset Formula $\tau_j$
\end_inset

, accessing 
\begin_inset Formula $\theta$
\end_inset

. 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 is the second maximum atomic section between all tasks accessing 
\begin_inset Formula $\theta$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

) can be modified by noting that a task 
\begin_inset Formula $\tau_j$
\end_inset

's atomic section may conflict with those of other tasks, but not with 
\begin_inset Formula $\tau_j$
\end_inset

. This is because, tasks are assumed to arrive sporadically, and each instance finishes before the next begins. Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq2"

\end_inset

) becomes: 
\begin_inset Formula \begin{equation}
W_i^p \left(s_j^k (\theta)\right)\le len\left(s_j^k (\theta)+s^*_{max}(\theta)\right)
\label{eq4-1}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

To see why 
\begin_inset Formula $\bar{s}{}_{max}(\theta)$
\end_inset

 is used instead of 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, the maximum-length atomic section of each task that accesses 
\begin_inset Formula $\theta$
\end_inset

 is grouped into an array, in non-increasing order of their lengths. 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 will be the first element of this array, and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 will be the next element, as illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig7"

\end_inset

, where the maximum atomic section of each task that accesses 
\begin_inset Formula $\theta$
\end_inset

 is associated with its corresponding task. According to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq4-1"

\end_inset

), all tasks but 
\begin_inset Formula $\tau_{j}$
\end_inset

 will choose 
\begin_inset Formula $s_{j_{max}}(\theta)$
\end_inset

 as the value of 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset

. But when 
\begin_inset Formula $\tau_{j}$
\end_inset

 is the one whose contribution is studied, it will choose 
\begin_inset Formula $s_{k_{max}}(\theta)$
\end_inset

, as it is the maximum one not associated with 
\begin_inset Formula $\tau_{j}$
\end_inset

. This way, it can be seen that the maximum value always lies between the two values 
\begin_inset Formula $s_{jmax}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{kmax}(\theta)$
\end_inset

. Of course, these two values can be equal, or the maximum value can be associated with 
\begin_inset Formula $\tau_i$
\end_inset

 itself, and not with any one of the interfering tasks. In the latter case, the chosen value will always be the one associated with 
\begin_inset Formula $\tau_i$
\end_inset

, which still lies between the two largest values.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure7.eps
	scale 70

\end_inset

 
\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig7"

\end_inset

Values associated with 
\begin_inset Formula $s_{max}^{*}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

This means that the subtracted 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq3"

\end_inset

) must be replaced with one of these two values (
\begin_inset Formula $s_{max}(\theta)$
\end_inset

 or 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

). However, since we do not know which task will interfere with 
\begin_inset Formula $\tau_i$
\end_inset

, the minimum is chosen, as we are determining the worst case retry cost (as this value is going to be subtracted), and this minimum is the second maximum.
\end_layout

\begin_layout Standard

Since it is not known a-priori whether 
\begin_inset Formula $\Phi_1$
\end_inset

 will be smaller than 
\begin_inset Formula $\Phi_2$
\end_inset

 for a specific 
\begin_inset Formula $\theta$
\end_inset

, the minimum of 
\begin_inset Formula $\Phi_1$
\end_inset

 and 
\begin_inset Formula $\Phi_2$
\end_inset

 is taken as the worst-case contribution for 
\begin_inset Formula $\theta$
\end_inset

 in 
\begin_inset Formula $RC(T_i)$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%Claim follows.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Upper Bound on Response Time
\end_layout

\begin_layout Standard

To obtain an upper bound on the response time of a task 
\begin_inset Formula $\tau_{i}$
\end_inset

, the term 
\begin_inset Formula $RC(T_{i})$
\end_inset

 must be added to the workload of other tasks during the non-atomic execution of 
\begin_inset Formula $\tau_{i}$
\end_inset

. But this requires modification of the WCET of each task as follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%starthere
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Formula $c_{j}$
\end_inset

 of each interfering task 
\begin_inset Formula $\tau_{j}$
\end_inset

 should be inflated to accommodate the interference of each task 
\begin_inset Formula $\tau_{k},$
\end_inset

 
\begin_inset Formula $k\ne j,i$
\end_inset

. Meanwhile, atomic regions that access shared objects between 
\begin_inset Formula $\tau_{j}$
\end_inset

 and 
\begin_inset Formula $\tau_{i}$
\end_inset

 should not be considered in the inflation cost, because they have already been calculated in 
\begin_inset Formula $\tau_{i}$
\end_inset

's retry cost. Thus, 
\begin_inset Formula $\tau_{j}$
\end_inset

's inflated WCET becomes: 
\begin_inset Formula \begin{equation}
c_{ji}=c_{j}-\left(\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len \left(s_{j}(\theta) \right) \right)+RC(T_{ji})\label{eq9}\end{equation}
\end_inset

 where, 
\begin_inset Formula $c_{ji}$
\end_inset

 is the new WCET of 
\begin_inset Formula $\tau_{j}$
\end_inset

 relative to 
\begin_inset Formula $\tau_{i}$
\end_inset

; the sum of lengths of all atomic sections in 
\begin_inset Formula $\tau_{j}$
\end_inset

 that access object 
\begin_inset Formula $\theta$
\end_inset

 is 
\begin_inset Formula $\sum_{\theta \in (\theta_j \wedge \theta_i)} {len(s_{j}(\theta))}$
\end_inset

; and 
\begin_inset Formula $RC(T_{ji})$
\end_inset

 is the 
\begin_inset Formula $RC(T_j)$
\end_inset

 without including the shared objects between 
\begin_inset Formula $\tau_{i}$
\end_inset

 and 
\begin_inset Formula $\tau_{j}$
\end_inset

. The calculated WCET is relative to task 
\begin_inset Formula $\tau_{i}$
\end_inset

, as it changes from task to task. The upper bound on the response time of 
\begin_inset Formula $\tau_{i}$
\end_inset

, denoted 
\begin_inset Formula $R_{i}^{up}$
\end_inset

, can be calculated iteratively, using a modification of Theorem 6 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

, as follows: 
\begin_inset Formula \begin{equation}
R_{i}^{up}=c_{i}+RC(T_{i})+\left\lfloor\frac{1}{m}\sum_{j\ne i}W_{ij}(R_{i}^{up})\right\rfloor
\label{eq10}
\end{equation}
\end_inset

 where 
\begin_inset Formula $R_{i}^{up}$
\end_inset

's initial value is 
\begin_inset Formula $c_{i}+RC(T_{i})$
\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq13"

\end_inset

), and 
\begin_inset Formula $W_{ij}(T_{i})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq11"

\end_inset

), with 
\begin_inset Formula $c_{j}$
\end_inset

 replaced by 
\begin_inset Formula $c_{ji}$
\end_inset

, and changing
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq12"

\end_inset

) as: 
\begin_inset Formula \begin{equation}
W_{ij}(L)=max\begin{cases}
\left(\left\lceil\frac{L-\left(c_{ji}+\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))\right)}{T_{j}}\right\rceil+1 \right)c_{ji}\\
\left\lceil\frac{L-c_{j}}{T_{j}}\right\rceil.c_{ji}+c_{j}-\sum_{\theta\in(\theta_{j}\wedge\theta_{i})}len(s_{j}(\theta))\end{cases}\label{eq14}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

) compares two terms, as we have two cases:
\end_layout

\begin_layout Standard


\shape italic
Case 1
\shape default
. 
\begin_inset Formula $\tau_j^1$
\end_inset

 (shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig2"

\end_inset

) contributes by 
\begin_inset Formula $c_{ji}$
\end_inset

. Thus, other instances of 
\begin_inset Formula $\tau_j$
\end_inset

 will begin after this modified WCET, but the sum of the shared objects' atomic section lengths is removed from 
\begin_inset Formula $c_{ji}$
\end_inset

, causing other instances to start earlier. Thus, the term 
\begin_inset Formula $\sum_{\theta\in(\theta_i\wedge\theta_j)} {len(s_{j}(\theta))}$
\end_inset

 is added to 
\begin_inset Formula $c_{ji}$
\end_inset

 to obtain the correct start time.
\end_layout

\begin_layout Standard


\shape italic
Case 2
\shape default
. 
\begin_inset Formula $\tau_j^1$
\end_inset

 contributes by its 
\begin_inset Formula $c_j$
\end_inset

, but the sum of the shared atomic section lengths between 
\begin_inset Formula $\tau_i$
\end_inset

 and 
\begin_inset Formula $\tau_j$
\end_inset

 should be subtracted from the contribution of 
\begin_inset Formula $\tau_j^1$
\end_inset

, as they are already included in the retry cost.
\end_layout

\begin_layout Standard

It should be noted that subtraction of the sum of the shared objects' atomic section lengths is done in the first case to obtain the correct start time of other instances, while in the second case, this is done to get the correct contribution of 
\begin_inset Formula $\tau_j^1$
\end_inset

. The maximum is chosen from the two terms in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

), because they differ in the contribution of their 
\begin_inset Formula $\tau_j^1$
\end_inset

s, and the number of instances after that.
\end_layout

\begin_layout Subsubsection

Tighter Upper Bound
\end_layout

\begin_layout Standard

To tighten 
\begin_inset Formula $\tau_{i}$
\end_inset

's response time upper bound, 
\begin_inset Formula $RC(\tau_i)$
\end_inset

 needs to be calculated recursively over duration 
\begin_inset Formula $R_i^{up}$
\end_inset

, and not directly over 
\begin_inset Formula $T_i$
\end_inset

, as done in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

). So, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq5"

\end_inset

) must be changed to include the modified number of interfering instances. And if 
\begin_inset Formula $R_i^{up}$
\end_inset

 still extends to 
\begin_inset Formula $T_i$
\end_inset

, a situation like that shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

 can happen. 
\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename figures/figure10.eps
	scale 50

\end_inset


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig10"

\end_inset

 Atomic sections of job 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 contributing to period 
\begin_inset Formula $T_i$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

To counter the situation in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

, atomic sections of 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 that are contained in the interval 
\begin_inset Formula $\delta$
\end_inset

 are the only ones that can contribute to 
\begin_inset Formula $RC(T_{i})$
\end_inset

. Of course, they can be lower, but cannot be greater, because 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 has been delayed by its maximum jitter. Hence, no more atomic sections can interfere during the duration 
\begin_inset Formula $[d_j^1 -\delta,d_j^1]$
\end_inset

.
\end_layout

\begin_layout Standard

For simplicity, we use the following notations: 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{compactitem}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\lambda_{1}\left(j,\theta\right)=\sum_{\forall s_{j}^{l}\left(\theta\right)\in\left[d_j^1-\delta,d_j^1\right]}len\left(s_{j}^{l^{*}}\left(\theta\right)+s_{max}\left(\theta\right)\right)$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\chi_{1}\left(i,j,\theta\right)=\left\lfloor\frac{T_{i}}{T_{j}}\right\rfloor\sum_{\forall s_{j}^{l}\left(\theta\right)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}\left(\theta\right)\right)$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\lambda_{2}\left(j,\theta\right)=\sum_{\forall s_{j}^{l}\left(\theta\right)\in\left[d_{j}^{1}-\delta,d_{j}^{1}\right]}len\left(s_{j}^{l^{*}}\left(\theta\right)+s_{max}^{*}\left(\theta\right)\right)$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\chi_{2}\left(i,j,\theta\right)=\left\lfloor\frac{T_{i}}{T_{j}}\right\rfloor\sum_{\forall s_{j}^{l}\left(\theta\right)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}^{*}\left(\theta\right)\right)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{compactitem}
\end_layout

\end_inset

 Here, 
\begin_inset Formula $s_{j}^{l^{*}}\left(\theta\right)$
\end_inset

 is the part of 
\begin_inset Formula $s_{j}^{l}\left(\theta\right)$
\end_inset

 that is included in the interval 
\begin_inset Formula $\delta$
\end_inset

. Thus, if 
\begin_inset Formula $s_j^l (\theta)$
\end_inset

 is partially included in 
\begin_inset Formula $\delta$
\end_inset

, it contributes by its included length 
\begin_inset Formula $\mu$
\end_inset

.
\end_layout

\begin_layout Standard

Now, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq5"

\end_inset

) can be modified as: 
\begin_inset Formula \begin{equation}
RC\left(T_{i}\right)\le \sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
\Bigl(\left(\sum_{\tau_{j}\in\gamma_i\left(\theta\right)}\lambda_{1}\left(j,\theta\right)+\chi_{1}\left(i,j,\theta\right)\right)\\
-s_{max}\left(\theta\right)+s_{i_{max}}\left(\theta\right)\Bigr)\end{cases}\\
\begin{cases}
\Bigl(\left(\sum_{\tau_{j}\in\gamma_i\left(\theta\right)}\lambda_{2}\left(j,\theta\right)+\chi_{2}\left(i,j,\theta\right)\right)\\
-\bar{s}_{max}\left(\theta\right)+s_{i_{max}}\left(\theta\right)\Bigr)\end{cases}\end{cases}\label{eq15}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

Now, we compute 
\begin_inset Formula $RC(L)$
\end_inset

, where 
\begin_inset Formula $L$
\end_inset

 does not extend to the last instance of 
\begin_inset Formula $\tau_{j}$
\end_inset

. Let: 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{compactitem}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\upsilon\left(L,j\right)=\left\lceil\frac{L-c_{j}}{T_{j}}\right\rceil+1$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\lambda_{3}\left(j,\theta\right)=\sum_{\forall s_{j}^{l}\left(\theta\right)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}\left(\theta\right)\right)$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\lambda_{4}\left(j,\theta\right)=\sum_{\forall s_{j}^{l}\left(\theta\right)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}^{*}\left(\theta\right)\right)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{compactitem}
\end_layout

\end_inset

 Now, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq5"

\end_inset

) becomes: 
\begin_inset Formula \begin{equation}
RC\left(L\right)\le \sum_{\theta\in\theta_{i}}min\begin{cases}
\begin{cases}
\left(\sum_{\tau_{j}\in\gamma_i\left(\theta\right)}\left(\upsilon\left(L,j\right)\lambda_{3}\left(j,\theta\right)\right)\right)\\
-s_{max}\left(\theta\right)+s_{i_{max}}\left(\theta\right)\end{cases}\\
\begin{cases}
\left(\sum_{\tau_{j}\in\gamma_i\left(\theta\right)}\left(\upsilon\left(L,j\right)\lambda_{4}\left(j,\theta\right)\right)\right)\\
-\bar{s}_{max}\left(\theta\right)+s_{i_{max}}\left(\theta\right)\end{cases}\end{cases}\label{eq16}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

Thus, an upper bound on 
\begin_inset Formula $RC(\tau_i)$
\end_inset

 is given by: 
\begin_inset Formula \begin{equation}
RC(R_{i}^{up})\le min\begin{cases}
RC(R_{i}^{up})\\
RC(T_{i})\end{cases}
\label{eq17}
\end{equation}
\end_inset

 where 
\begin_inset Formula $RC(R_i^{up})$
\end_inset

 is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) if 
\begin_inset Formula $R_i^{up}$
\end_inset

 does not extend to the last interfering instance of 
\begin_inset Formula $\tau_j$
\end_inset

; otherwise, it is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq15"

\end_inset

). The final upper bound on 
\begin_inset Formula $\tau_{i}$
\end_inset

's response time can be calculated as in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq10"

\end_inset

) by replacing 
\begin_inset Formula $RC(T_{i})$
\end_inset

 with 
\begin_inset Formula $RC(R_{i}^{up})$
\end_inset

.
\end_layout

\begin_layout Section

G-RMA/RMA CM Response Time
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:g-rma-rma-cm"

\end_inset


\end_layout

\begin_layout Standard

As G-RMA is a fixed priority scheduler, a task 
\begin_inset Formula $\tau_{i}$
\end_inset

 will be interfered by those tasks with priorities higher than 
\begin_inset Formula $\tau_{i}$
\end_inset

 (i.e., 
\begin_inset Formula $p_{j}>p_{i}$
\end_inset

). Upon a conflict, the RMA CM will commit the transaction that belongs to the higher priority task. Hereafter, we use 
\emph on
RCM
\emph default
 to refer to a multiprocessor system scheduled by G-RMA and resolves STM conflicts by the RMA CM.
\end_layout

\begin_layout Subsection

Maximum Task Interference
\end_layout

\begin_layout Standard

Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 illustrates the maximum interference caused by a task 
\begin_inset Formula $\tau_{j}$
\end_inset

 to a task 
\begin_inset Formula $\tau_{i}$
\end_inset

 under G-RMA. As 
\begin_inset Formula $\tau_{j}$
\end_inset

 is of higher priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\tau_{j}^{k}$
\end_inset

 will interfere with 
\begin_inset Formula $\tau_{i}$
\end_inset

 even if it is not totally included in 
\begin_inset Formula $T_{i}$
\end_inset

. Unlike the G-EDF case shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig10"

\end_inset

, where only the 
\begin_inset Formula $\delta$
\end_inset

 part of 
\begin_inset Formula $\tau_{j}^{1}$
\end_inset

 is considered, in G-RMA, 
\begin_inset Formula $\tau_{j}^{k}$
\end_inset

 can contribute by the whole 
\begin_inset Formula $c_{j}$
\end_inset

, and all atomic sections contained in 
\begin_inset Formula $\tau_{j}^{k}$
\end_inset

 must be considered. This is because, in G-EDF, the worst-case pattern releases 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 before 
\begin_inset Formula $d_{j}^{1}$
\end_inset

 by 
\begin_inset Formula $\delta$
\end_inset

 time units, and 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 cannot be interfered before it is released. But in G-RMA, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 is already released, and can be interfered by the whole 
\begin_inset Formula $\tau_{j}^{k}$
\end_inset

, even if this makes it infeasible.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure11.eps
	scale 50

\end_inset


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig11"

\end_inset

Max interference of 
\begin_inset Formula $\tau_{j}$
\end_inset

 to 
\begin_inset Formula $\tau_{i}$
\end_inset

 in G-RMA
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: $T_{j}$ and $T_{i}$ are task periods. Is that what you meant here?
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Thus, the maximum contribution of 
\begin_inset Formula $\tau_{j}^b$
\end_inset

 to 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 for any duration 
\begin_inset Formula $L$
\end_inset

 can be deduced from Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig11"

\end_inset

 as 
\begin_inset Formula $W_{ij}(L)=\left(\left\lceil\frac{L-c_{j}}{T_{j}}\right\rceil+1 \right)c_{j}$
\end_inset

, where 
\begin_inset Formula $L$
\end_inset

 can extend to 
\begin_inset Formula $T_{i}$
\end_inset

. Note the contrast with ECM, where 
\begin_inset Formula $L$
\end_inset

 cannot be extended directly to 
\begin_inset Formula $T_i$
\end_inset

, as this will have a different pattern of worst case interference from other tasks.
\end_layout

\begin_layout Subsection

Retry Cost of Atomic Sections
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 Under RCM, a task 
\begin_inset Formula $\tau_i$
\end_inset

's retry cost over duration 
\begin_inset Formula $L$
\end_inset

, which can extend to 
\begin_inset Formula $T_i$
\end_inset

, is upper bounded by: 
\begin_inset Formula \begin{eqnarray}
RC\left(L\right) & \le & \sum_{\theta\in\theta_{i}}\Bigg(\left(\sum_{\tau_{j}^{*}}\left(\left(\left\lceil\frac{L-c_{j}}{T_{j}}\right\rceil+1\right)\pi\left(j,\theta\right)\right)\right)\nonumber \\
 & - & s_{max}^{min}\left(\theta\right)+s_{i_{max}}\left(\theta\right)\Bigg)\label{eq20}\end{eqnarray}
\end_inset

 where: 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{compactitem}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\tau_{j}^{*}=\{\tau_{j}|(\tau_{j}\in\gamma_i(\theta))\wedge(p_{j}> p_{i})\}$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $\pi(j,\theta)=\sum_{\forall s_{j}^{l}(\theta)}len\left(s_{j}^{l}\left(\theta\right)+s_{max}^{j}\left(\theta\right)\right)$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
item 
\end_layout

\end_inset


\begin_inset Formula $s_{max}^{min}(\theta)=min_{\forall \tau_j^*} \{s_{max}^j(\theta)\}$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{compactitem}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The worst case interference pattern for RCM is the same as that for ECM for an interval 
\begin_inset Formula $L$
\end_inset

, except that, in RCM, 
\begin_inset Formula $L$
\end_inset

 can extend to the entire 
\begin_inset Formula $T_i$
\end_inset

, but in ECM, it cannot, as the interference pattern of 
\begin_inset Formula $\tau_j$
\end_inset

 to 
\begin_inset Formula $\tau_i$
\end_inset

 changes. Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

) can be used to calculate 
\begin_inset Formula $\tau_i$
\end_inset

's retry cost, with some modifications, as we do not have to obtain the minimum of the two terms in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq16"

\end_inset

), because 
\begin_inset Formula $\tau_j$
\end_inset

's atomic sections will abort and retry only atomic sections of tasks with lower priority than 
\begin_inset Formula $\tau_j$
\end_inset

. Thus, 
\begin_inset Formula $s_{max}(\theta)$
\end_inset

, 
\begin_inset Formula $s_{max}^*(\theta)$
\end_inset

, and 
\begin_inset Formula $\bar{s}_{max}(\theta)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}^{min}(\theta)$
\end_inset

, which is the minimum of the set of maximum-length atomic sections of tasks with priority lower than 
\begin_inset Formula $\tau_j$
\end_inset

 and share object 
\begin_inset Formula $\theta$
\end_inset

 with 
\begin_inset Formula $\tau_i$
\end_inset

. This is because, the maximum length atomic section of tasks other than 
\begin_inset Formula $\tau_j$
\end_inset

 differs according to 
\begin_inset Formula $j$
\end_inset

. Besides, as 
\begin_inset Formula $\tau_i$
\end_inset

's atomic sections can be aborted only by atomic sections of higher priority tasks, not all 
\begin_inset Formula $\tau_j \in \gamma (\theta)$
\end_inset

 are considered, but only the subset of tasks in 
\begin_inset Formula $\gamma (\theta)$
\end_inset

 with priority higher than 
\begin_inset Formula $\tau_i$
\end_inset

 (i.e., 
\begin_inset Formula $\tau_j^*$
\end_inset

). Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Upper Bound on Response Time
\end_layout

\begin_layout Standard

The response time upper bound can be computed using Theorem 7 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

 with a modification to include the effect of retry cost. The upper bound is given by: 
\begin_inset Formula \begin{equation}
R_{i}^{up}=c_{i}+RC(R_{i}^{up})+\left\lfloor\frac{1}{m}\sum_{j\ne i}W_{ij}(R_{i}^{up})\right\rfloor\label{eq22}\end{equation}
\end_inset

 where 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated as in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq14"

\end_inset

), 
\begin_inset Formula $c_{ji}$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq9"

\end_inset

), and 
\begin_inset Formula $RC$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

).
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Skipped reviewing the following %%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Note Comment
status open

\begin_layout Section

FMLP and OMLP Blocking Times
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:blocking-bound-fmlp-omlp"

\end_inset


\end_layout

\begin_layout Standard

The FMLP protocol
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "brandenburg2008comparison"

\end_inset

 has been shown to be superior to other multiprocessor real-time locking protocols in terms of schedulability, and the global OMLP protocol
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

 has been shown to be asymptotically optimal. To formally compare STM against FMLP and global OMLP, we first upper bound their blocking times. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%(those were not presented in~
\backslash
cite{brandenburg2008comparison,key-4,key-3}). 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Subsection


\begin_inset CommandInset label
LatexCommand label
name "global-fmlp"

\end_inset

Global FMLP
\end_layout

\begin_layout Standard

FMLP can be used with global and partitioned scheduling. Since we only consider global scheduling, 
\begin_inset Quotes eld
\end_inset

FMLP" and 
\begin_inset Quotes eld
\end_inset

global FMLP" mean the same, for the paper's purpose.
\end_layout

\begin_layout Standard

FMLP divides shared objects into short resources, 
\begin_inset Formula $s\_\theta$
\end_inset

, and long ones, 
\begin_inset Formula $l\_\theta$
\end_inset

. Nested resources are grouped together into two groups: 
\begin_inset Formula $g(s\_\theta)$
\end_inset

 that contains only short resources, and 
\begin_inset Formula $g(l\_\theta)$
\end_inset

 that contains only long resources. A request 
\begin_inset Formula $R_i (g(s\_\theta))$
\end_inset

 is made by a task 
\begin_inset Formula $T_i$
\end_inset

 to access one or more resources in 
\begin_inset Formula $g(s\_\theta)$
\end_inset

. This request's length is denoted 
\begin_inset Formula $|R_i (g(s\_\theta))|$
\end_inset

, and the number of times 
\begin_inset Formula $T_i$
\end_inset

 requests short resources is denoted 
\begin_inset Formula $N_{i,s}$
\end_inset

. Similarly, 
\begin_inset Formula $R_i (g(l\_\theta))$
\end_inset

 is 
\begin_inset Formula $T_i$
\end_inset

's request to a group containing long resources for a duration 
\begin_inset Formula $|R_i (g(l\_\theta))|$
\end_inset

, and 
\begin_inset Formula $N_{i,l}$
\end_inset

 is the number of times 
\begin_inset Formula $T_i$
\end_inset

 requests long resources.
\end_layout

\begin_layout Standard

Global FMLP uses a variant of G-EDF (called GSN-EDF which discriminates between linked jobs and scheduled ones) to account for non-preemptive jobs while still using G-EDF for scheduling, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "jobs"?? (can there be multiple linked jobs)?
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "ones"?? (can there be multiple scheduled ones)?
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Tasks busy-wait on short resources, and suspend on long ones. In both cases, requests for resources are arranged in FIFO queues, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "FIFO queue" or "FIFO queues"???? (since there are two resource types)
\end_layout

\begin_layout Standard


\end_layout

\end_inset

and for requesting long resources, the task holding the resource inherits the highest priority of the suspended tasks on that resource. For short resources, there is no need to inherit priorities, as tasks become non-preemptable when acquiring short resources.
\end_layout

\begin_layout Standard

Requests for long resources can contain requests for the short resource group, but the reverse is not true. The protocol allows non-preemptable jobs and bounds the time a job is non-preemptively blocked by a lower priority job as the maximum time a non-preemptive section of the job can be linked to the processor of the higher priority job. This non-preemptive blocking can only happen when the higher priority job is released or resumed.
\end_layout

\begin_layout Standard

Three types of blocking can be incurred by any task under global FMLP. These include busy-wait blocking, non-preemptive blocking, and direct blocking. The total blocking time of a job, 
\begin_inset Formula $b_{i}$
\end_inset

, is the sum of these three blocking durations. Execution time of each task, 
\begin_inset Formula $e_{i}$
\end_inset

, is inflated by this blocking amount (
\begin_inset Formula $e_{i}+b_{i}$
\end_inset

), and is used in any of the G-EDF schedulability tests (e.g.,
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "Goossens:2003:PSP:876600.876615,srinivasan2002deadline"

\end_inset

) for verifying schedulability.
\end_layout

\begin_layout Standard

We upper bound a task's blocking durations due to busy-wait blocking, non-preemptive blocking, and direct blocking, denoted as 
\begin_inset Formula $BW(T_{i})$
\end_inset

, 
\begin_inset Formula $NPB(T_{i})$
\end_inset

, and 
\begin_inset Formula $DB(T_{i})$
\end_inset

, respectively, as follows. (Note that, in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

, no upper bounds are presented for these terms, except for 
\begin_inset Formula $DB(T_{i})$
\end_inset

, as
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

's main focus is on FMLP's suspension-based part. Also, the upper bound for 
\begin_inset Formula $DB(T_{i})$
\end_inset

 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

 does not consider the effect of requesting a short resource within a long one.)
\end_layout

\begin_layout Standard

A job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 busy-waits in a FIFO queue when it is scheduled on a processor and it cannot be removed by any other task until its request is satisfied. As busy-waiting tasks are non-preemptable, job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked for at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests, where each request consists of the sum of the nested requests to some resources in the same group. This process proceeds for each short resource requested by 
\begin_inset Formula $T_{i}$
\end_inset

. The busy-wait blocking time, 
\begin_inset Formula $BW(T_{i})$
\end_inset

, is therefore: 
\begin_inset Formula \begin{equation}
BW(T_{i})\le\sum_{s\_\theta\in\theta_{i}} \left(max \left[\sum_{k=1,k\ne i}^{min(m,n)-1} \left| R_{k} \left(g \left(s\_\theta \right) \right) \right| \right] \right)\label{eq26}
\end{equation}
\end_inset


\end_layout

\begin_layout Standard

A job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be non-preemptively blocked, either at its release or when it resumes, by at most the maximum (nested) request to any short resource. The non-preemptive blocking time, 
\begin_inset Formula $NPB(T_{i})$
\end_inset

, is therefore: 
\begin_inset Formula \begin{equation}
NPB(T_{i})=(1+N_{i,l}).max_{k\ne i} \left| R_{k}(g(s\_\theta)) \right|\label{eq27}
\end{equation}
\end_inset

 Here, 
\begin_inset Formula $1$
\end_inset

 is added to 
\begin_inset Formula $N_{i,l}$
\end_inset

, because 
\begin_inset Formula $T_{i}$
\end_inset

 can be non-preemptively blocked at its release, in addition to suspension times.
\end_layout

\begin_layout Standard

A job 
\begin_inset Formula $T_{i}^{j}$
\end_inset

 can be blocked by all other 
\begin_inset Formula $n-1$
\end_inset

 tasks for any long resource. Any of these 
\begin_inset Formula $n-1$
\end_inset

 requests can be a nested request to long resources belonging to the same group. In addition, any of those requests can contain a request to a short resource, and so it can busy-wait on it. Thus, each request in the 
\begin_inset Formula $n-1$
\end_inset

 requests, requiring access to a short resource, can be delayed by at most the maximum 
\begin_inset Formula $m-1$
\end_inset

 requests to the group containing that short resource. The direct blocking time, 
\begin_inset Formula $DB(T_{i})$
\end_inset

, is therefore: 
\begin_inset Formula \begin{equation}
DB(T_{i})\le\sum_{l\_\theta\in\theta_{i}} \left[max_{k=1,k\ne i}^{n-1} \left|R_{k} \left(g \left(l\_\theta \right) \right) \right| \right]
\label{eq28}
\end{equation}
\end_inset


\end_layout

\begin_layout Subsection

Global OMLP
\end_layout

\begin_layout Standard

In
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

, global FMLP has a maximum s-oblivious pi-blocking cost of 
\begin_inset Formula $\Theta(n)$
\end_inset

, whereas global OMLP
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-3"

\end_inset

, which is a suspension-based protocol that supports G-EDF, as well as any global job-level static priority (JLSP) scheduler, has a 
\begin_inset Formula $\Theta(m)$
\end_inset

 s-oblivious pi-blocking cost, as seen by equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq29"

\end_inset

): 
\begin_inset Formula \begin{equation}
b_{i}\triangleq\sum_{k=1}^{q}N_{i,k}.2.(m-1).max_{1\le i\le n}\{L_{i,k}\}\label{eq29}\end{equation}
\end_inset

 where 
\begin_inset Formula $N_{i,k}$
\end_inset

 is the maximum number of times 
\begin_inset Formula $T_i$
\end_inset

 requests resource 
\begin_inset Formula $k$
\end_inset

, and 
\begin_inset Formula $L_{i,k}$
\end_inset

 is the maximum execution time of such a request. 
\begin_inset Formula $N_{i,k}$
\end_inset

 and 
\begin_inset Formula $L_{i,k}$
\end_inset

 are assumed to be constants, so the s-oblivious pi-blocking is 
\begin_inset Formula $\Theta(m)$
\end_inset

, and thus it is optimal. 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Resumed editing from here
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Section

STM versus Lock-Free
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:comparison"

\end_inset


\end_layout

\begin_layout Standard

We now would like to understand when STM will be beneficial compared to lock-free synchronization. The retry-loop lock-free approach in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

 is the most relevant to our work.
\end_layout

\begin_layout Subsection


\begin_inset CommandInset label
LatexCommand label
name "sub:G-EDF-scheduler-with"

\end_inset

 ECM versus Lock-Free
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 For ECM's schedulability to be better or equal to that of
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

's retry-loop lock-free approach, the size of 
\begin_inset Formula $s_{max}$
\end_inset

 must not exceed one half of that of 
\begin_inset Formula $r_{max}$
\end_inset

, where 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any lock-free retry loop of any task. With low number of conflicting tasks, the size of 
\begin_inset Formula $s_{max}$
\end_inset

 can be at most the size of 
\begin_inset Formula $r_{max}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq17"

\end_inset

) can be upper bounded as: 
\begin_inset Formula \begin{equation}
RC\left(T_{i}\right) \le \sum_{\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\sum_{\forall s_{j}^{l}\left(\theta\right)}\left(2.s_{max}\right)\right)\right)
\label{eq30}
\end{equation}
\end_inset

 where 
\begin_inset Formula $s_{j}^{l}\left(\theta\right)$
\end_inset

, 
\begin_inset Formula $s_{i_{max}}\left(\theta\right)$
\end_inset

, 
\begin_inset Formula $s_{max}^{*}\left(\theta\right)$
\end_inset

, and 
\begin_inset Formula $\bar{s}_{max}\left(\theta\right)$
\end_inset

 are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

, and the order of the first two summations are reversed by each other, with 
\begin_inset Formula $\gamma_{i}$
\end_inset

 being the set of tasks that share objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

. These changes are done to simplify the comparison.
\end_layout

\begin_layout Standard

Let 
\begin_inset Formula $\sum_{\theta\in\theta_{i}}\sum_{\forall s_{j}^{l}\left(\theta\right)}=\beta_{i,j}^{*}$
\end_inset

, and 
\begin_inset Formula $\alpha_{edf}=\sum_{\tau_{j}\in\gamma_{i}}\left\lceil\frac{T_{i}}{T_{j}}\right\rceil.2\beta_{i,j}^*$
\end_inset

. Now, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq30"

\end_inset

) can be modified as: 
\begin_inset Formula \begin{equation}
RC\left(T_{i}\right)=\alpha_{edf}.s_{max}
\label{eq31}
\end{equation}
\end_inset


\end_layout

\begin_layout Standard

The loop retry cost is given by: 
\begin_inset Formula \begin{eqnarray}
LRC\left(T_i\right)&=&\sum_{\tau_{j}\in\gamma_{i}}\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil+1\right).\beta_{i,j}.r_{max}\nonumber \\
&=& \alpha_{free} . r_{max} \label{eq32}
\end{eqnarray}
\end_inset

 where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is the number of retry loops of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that accesses the same object as that accessed by some retry loop of 
\begin_inset Formula $\tau_{i}$
\end_inset

, and 
\begin_inset Formula $\alpha_{free} = \sum_{\tau_{j}\in\gamma_{i}}\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil + 1 \right).\beta_{i,j}$
\end_inset

. Since the shared objects are the same in both STM and lock free, 
\begin_inset Formula $\beta_{i,j}=\beta_{i,j}^{*}$
\end_inset

. Thus, STM achieves equal or better schedulability than lock-free if the total utilization of the STM system is less than or equal to that of the lock-free system: 
\begin_inset Formula \begin{eqnarray}
\sum_{\tau_{i}}\frac{c_{i}+\alpha_{edf}.s_{max}} {T_{i}} & \le & \sum_{\tau_{i}}\frac{c_{i}+\alpha_{free}.r_{max}}{T_{i}} \nonumber \\
\therefore\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\tau_{i}}\alpha_{free}/T_{i}}{\sum_{\tau_{i}}\alpha_{edf}/T_{i}}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

Let 
\begin_inset Formula $\bar{\alpha}_{free}=\sum_{\tau_{j}\in\gamma_{i}}\left\lceil\frac{T_{i}}{T_{j}}\right\rceil.\beta_{i,j}$
\end_inset

, 
\begin_inset Formula $\hat{\alpha}_{free}=\sum_{T_{j}\in\gamma_{i}}\beta_{i,j}$
\end_inset

, and 
\begin_inset Formula $\alpha_{free}=\bar{\alpha}_{free}+\hat{\alpha}_{free}.$
\end_inset

 Therefore: 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\tau_{i}}(\bar{\alpha}_{free} +\hat{\alpha}_{free})/T_{i}}{\sum_{\tau_{i}}\alpha_{edf}/T_{i}}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{\tau_{i}}\hat{\alpha}_{free} /T_{i}}{\sum_{\tau_{i}}\alpha_{edf}/T_{i}}
 \label{eq33}
 \end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

Let 
\begin_inset Formula $\zeta_{1}=\sum_{\tau_{i}}\hat{\alpha}_{free}/T_{i}$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}=\sum_{\tau_{i}}\left(\frac{\alpha_{edf}}{2}\right)/T_{i}$
\end_inset

. The maximum value of 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}=\frac{1}{2}$
\end_inset

, which can happen if 
\begin_inset Formula $T_{j}\ge T_{i}\,\therefore\left\lceil\frac{T_{i}}{T_{j}}\right\rceil=1$
\end_inset

. Then 
\begin_inset Formula $(\ref{eq33})=1$
\end_inset

, which is its maximum value. 
\begin_inset Formula $T_{j}\ge T_{i}$
\end_inset

 means that there is a small number of interferences from other tasks to 
\begin_inset Formula $\tau_{i}$
\end_inset

, and thus low number of conflicts. Therefore, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be as large as 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard

The theoretical minimum value for 
\begin_inset Formula $\frac{\zeta_{1}}{2.\zeta_{2}}$
\end_inset

 is 
\begin_inset Formula $0$
\end_inset

, which can be asymptotically reached if 
\begin_inset Formula $T_{j}\ll T_{i}$
\end_inset

, 
\begin_inset Formula $\therefore\,\left\lceil\frac{T_{i}}{T_{j}}\right\rceil\rightarrow\infty$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}\rightarrow\infty$
\end_inset

. Thus, 
\begin_inset Formula $(\ref{eq33})\rightarrow1/2$
\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset Formula $\beta_{i,j}$
\end_inset

 has little effect on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, as it is contained in both the numerator and denominator. Irrespective of whether 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is going to reach its maximum or minimum value, both can be considered constants, and thus removed from (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq33"

\end_inset

)'s numerator and denominator. However, the number of interferences of other tasks to 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\left\lceil\frac{T_{i}}{T_{j}}\right\rceil$
\end_inset

, has the main effect on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

. This is illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig14"

\end_inset

. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard
\align center


\begin_inset Graphics 
	filename figures/figure14.eps
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig14"

\end_inset

Effect of 
\begin_inset Formula $\left\lceil\frac{T_{i}}{T_{j}}\right\rceil$
\end_inset

 on 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Stopped here. 3:32PM, 10/18/11.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

RCM versus Lock-Free
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 For RCM's schedulability to be better or equal to that of
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

's retry-loop lock-free approach, the size of 
\begin_inset Formula $s_{max}$
\end_inset

 must not exceed one half of that of 
\begin_inset Formula $r_{max}$
\end_inset

 for all cases. However, the size of 
\begin_inset Formula $s_{max}$
\end_inset

 can be larger than that of 
\begin_inset Formula $r_{max}$
\end_inset

, depending on the number of accesses to a task 
\begin_inset Formula $T_i$
\end_inset

's shared objects from other tasks. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq20"

\end_inset

) is upper bounded by: 
\begin_inset Formula \begin{equation}
\sum_{\left(\tau_{j}\in\gamma_{i}\right)\wedge\left(p_{j}> p_{i}\right)}\left(\left\lceil\frac{T_{i}-c_{j}}{T_{j}}\right\rceil+1\right).2.\beta_{i,j}.s_{max}
\label{eq34}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

Consider the same assumptions as in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:G-EDF-scheduler-with"

\end_inset

. Let 
\begin_inset Formula $\alpha_{rma}=\sum_{\left(\tau_{j}\in\gamma_{i}\right)\wedge\left(p_{j}> p_{i}\right)}\left(\left\lceil\frac{T_{i}-c_{j}}{T_{j}}\right\rceil+1\right).2.\beta_{i,j}$
\end_inset

. Now, the ratio 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{\sum_{T_{i}}\alpha_{free}/t\left(T_{i}\right)}{\sum_{T_{i}}\alpha_{rma}/t\left(T_{i}\right)}
\label{eq35}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

The main difference between RCM and lock-free is that RCM is affected only by the higher priority tasks, while lock-free is affected by all tasks (just as in ECM). Besides, RCM is still affected by 
\begin_inset Formula $2.\beta_{i,j}$
\end_inset

 (just as in ECM). The subtraction of 
\begin_inset Formula $c_{j}$
\end_inset

 in the numerator of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq34"

\end_inset

) may not have a significant effect on the ratio of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

), as the loop retry cost can also be modified to account for the effect of the first interfering instance of task 
\begin_inset Formula $T_{j}$
\end_inset

. Therefore, 
\begin_inset Formula $\alpha_{free} = \sum_{\tau_{j}\in\gamma_{i}}\left(\left\lceil\frac{T_{i}-c_j}{T_{j}}\right\rceil + 1 \right)\beta_{i,j}$
\end_inset

.
\end_layout

\begin_layout Standard

Let tasks in the denominator of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) be given indexes 
\begin_inset Formula $k$
\end_inset

 instead of 
\begin_inset Formula $i$
\end_inset

, and 
\begin_inset Formula $l$
\end_inset

 instead of 
\begin_inset Formula $j$
\end_inset

. Let tasks in both the numerator and denominator of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) be arranged in the non-increasing priority order, so that 
\begin_inset Formula $i=k$
\end_inset

 and 
\begin_inset Formula $j=l$
\end_inset

. Let 
\begin_inset Formula $\alpha_{free}$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) be divided into two parts: 
\begin_inset Formula $\bar{\alpha}_{free}$
\end_inset

 that contains only tasks with priority higher than 
\begin_inset Formula $\tau_i$
\end_inset

, and 
\begin_inset Formula $\hat{\alpha}_{free}$
\end_inset

 that contains only tasks with priority lower than 
\begin_inset Formula $\tau_i$
\end_inset

. Now, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq35"

\end_inset

) becomes: 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\tau_{i}}(\bar{\alpha}_{free}+\hat{\alpha}_{free})/T_{i}}{\sum_{\tau_{k}}\alpha_{rma}/T_{k}}\nonumber \\
 & = & \frac{1}{2}+\frac{\sum_{\tau_{i}}\hat{\alpha}_{free}/T_{i}}{\sum_{\tau_{k}}\alpha_{rma}/T_{k}}\label{eq36}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

For convenience, we introduce the following notations: 
\begin_inset Formula \begin{eqnarray}
\zeta_{1}& = & \sum_{\tau_{i}}\frac{\sum_{\left(\tau_{j}\in\gamma_{i}\right)\wedge\left(p_{j}<p_{i}\right)}\left(\left\lceil\frac{T_{i}-c_{j}}{T_{j}}\right\rceil+1\right)\beta_{i,j}}{T_{i}}\nonumber\\
& = & \sum_{T_i} \hat{\alpha}_{free}/T_i
\nonumber\\
\zeta_{2} 
& = & \sum_{\tau_{k}}\frac{\sum_{\left(\tau_{l}\in\gamma_{k}\right)\wedge\left(p_{l}>p_{k}\right)}\left(\left\lceil\frac{T_{k}-c_{l}}{T_{l}}\right\rceil+1\right)\beta_{k,l}}{T_{k}}\nonumber\\
& = & \frac{1}{2}\sum_{\tau_k} \alpha_{rma}/T_k\nonumber
\end{eqnarray}
\end_inset

 
\begin_inset Formula $\tau_{j}$
\end_inset

 is of lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

, which means 
\begin_inset Formula $D_{j}>D_{i}$
\end_inset

. Under G-RMA, this means, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

. Thus, 
\begin_inset Formula $\left\lceil\frac{T_{i}-c_{j}}{T_{j}}\right\rceil=1$
\end_inset

 for all 
\begin_inset Formula $\tau_{j}$
\end_inset

 and 
\begin_inset Formula $\zeta_{1}=\sum_{\tau_{i}}(\sum_{(\tau_{j}\in\gamma_{i})\wedge(p_{j}<p_{i})}(2.\beta_{i,j}))/T_{i}$
\end_inset

. Since 
\begin_inset Formula $\zeta_{1}$
\end_inset

 contains all 
\begin_inset Formula $\tau_{j}$
\end_inset

 of lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 and 
\begin_inset Formula $\zeta_{2}$
\end_inset

 contains all 
\begin_inset Formula $\tau_{l}$
\end_inset

 of higher priority than 
\begin_inset Formula $\tau_{k}$
\end_inset

, and tasks are arranged in the non-increasing priority order, then for each 
\begin_inset Formula $\tau_{i,j}$
\end_inset

, there exists 
\begin_inset Formula $\tau_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

. Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:matrix-example"

\end_inset

 illustrates this, where 0 means that the pair 
\begin_inset Formula $i,j$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{1}$
\end_inset

, and the pair 
\begin_inset Formula $k,l$
\end_inset

 does not exist in 
\begin_inset Formula $\zeta_{2}$
\end_inset

' (i.e., there is no task 
\begin_inset Formula $\tau_l$
\end_inset

 that will interfere with 
\begin_inset Formula $\tau_k$
\end_inset

 in 
\begin_inset Formula $\zeta_2$
\end_inset

), and 1 means the opposite.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="3">
<features>
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\begin{array}{cccccc}
 & j & 1 & 2 & \cdots & n\\
i\\
1 &  & 0 & 1 & \cdots & 1\\
2 &  & 0 & 0 & \ddots & \vdots\\
\vdots &  & \vdots & \vdots & \ddots & 1\\
n &  & 0 & 0 & \cdots & 0\end{array}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\begin{array}{cccccc}
 & l & 1 & 2 & \cdots & n\\
k\\
1 &  & 0 & 0 & \cdots & 0\\
2 &  & 1 & 0 &  & \vdots\\
\vdots &  & \vdots & \ddots & \ddots & 0\\
n &  & 1 & \cdots & 1 & 0\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:matrix-example"

\end_inset

 Task association for lower priority tasks than 
\begin_inset Formula $T_i$
\end_inset

 and higher priority tasks than 
\begin_inset Formula $T_k$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

Thus, it can be seen that both the matrices are transposes of each other. Consequently, for each 
\begin_inset Formula $\beta_{i,j}$
\end_inset

, there exists 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 such that 
\begin_inset Formula $i=l$
\end_inset

 and 
\begin_inset Formula $j=k$
\end_inset

. But the number of times 
\begin_inset Formula $\tau_{j}$
\end_inset

 accesses a shared object with 
\begin_inset Formula $\tau_{i}$
\end_inset

 may not be the same as the number of times 
\begin_inset Formula $\tau_{i}$
\end_inset

 accesses that same object. Thus, 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not have to be the same as 
\begin_inset Formula $\beta_{k,l}$
\end_inset

, even if 
\begin_inset Formula $i,j$
\end_inset

 and 
\begin_inset Formula $k,l$
\end_inset

 are transposes of each other. Therefore, we can analyze the behavior of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 based on the three parameters 
\begin_inset Formula $\beta_{i,j}$
\end_inset

, 
\begin_inset Formula $\beta_{k,l}$
\end_inset

, and 
\begin_inset Formula $\left\lceil\frac{T_{k}-c_{l}}{T_{l}}\right\rceil$
\end_inset

. If 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is increased so that 
\begin_inset Formula $\beta_{i,j}\rightarrow\infty$
\end_inset

, 
\begin_inset Formula $\therefore\,(\ref{eq36})\rightarrow\infty$
\end_inset

. This is because, 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 represents the number of times a lower priority task 
\begin_inset Formula $\tau_{j}$
\end_inset

 accesses shared objects with a higher priority task 
\begin_inset Formula $\tau_{i}$
\end_inset

. While this number has a greater effect in lock-free, it does not have any effect under RCM, because lower priority tasks do not affect higher priority ones. Hence, 
\begin_inset Formula $s_{max}$
\end_inset

 is allowed to be much greater than 
\begin_inset Formula $r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard

Although the minimum value for 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is 1, mathematically, if 
\begin_inset Formula $\beta_{i,j}\rightarrow0$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

) 
\begin_inset Formula $\rightarrow1/2$
\end_inset

. Here, changing 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 does not affect the retry cost of RCM, but it does affect the retry cost of lock-free, because the contention between tasks is reduced. Thus, 
\begin_inset Formula $s_{max}$
\end_inset

 is reduced in this case to a little more than half of 
\begin_inset Formula $r_{max}$
\end_inset

 (
\begin_inset Quotes eld
\end_inset

a little more
\begin_inset Quotes erd
\end_inset

 because the minimum value of 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is actually 1, not 0).
\end_layout

\begin_layout Standard

The change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 with respect to 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

. If 
\begin_inset Formula $\beta_{k,l}\rightarrow\infty$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

) 
\begin_inset Formula $\rightarrow1/2$
\end_inset

. This is because, 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 represents the number of times a higher priority task 
\begin_inset Formula $\tau_{l}$
\end_inset

 accesses shared objects with a lower priority task 
\begin_inset Formula $\tau_{k}$
\end_inset

. Under RCM, this will increase the retry cost, thus reducing 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

. But if 
\begin_inset Formula $\beta_{k,l}\rightarrow0$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

)
\begin_inset Formula $\rightarrow\infty$
\end_inset

. This is due to the lower contention from a higher priority task 
\begin_inset Formula $\tau_{l}$
\end_inset

 to a lower priority task 
\begin_inset Formula $\tau_{k}$
\end_inset

, which reduces the retry cost under RCM and allows 
\begin_inset Formula $s_{max}$
\end_inset

 to be very large compared with 
\begin_inset Formula $r_{max}$
\end_inset

. Of course, the actual minimum value for 
\begin_inset Formula $\beta_{k,l}$
\end_inset

 is 1, and is illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

The third parameter that affects 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $T_{k}/T_{l}$
\end_inset

. If 
\begin_inset Formula $T_{l}\ll T_{k}$
\end_inset

, then 
\begin_inset Formula $\left\lceil\frac{T_{k}-c_{l}}{T_{l}}\right\rceil\rightarrow\infty$
\end_inset

, and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq36"

\end_inset

) 
\begin_inset Formula $\rightarrow1/2$
\end_inset

. This is due to a high number of interferences from a higher priority task 
\begin_inset Formula $\tau_{l}$
\end_inset

 to a lower priority task 
\begin_inset Formula $\tau_{k}$
\end_inset

, which increases the retry cost under RCM, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: WHy don't you say "RCM"? Fix it. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

and consequently reduces 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

.
\end_layout

\begin_layout Standard

If 
\begin_inset Formula $T_{l}=T_{k}$
\end_inset

 (which is the maximum value for 
\begin_inset Formula $T_{l}$
\end_inset

 as 
\begin_inset Formula $D_{l}\le D_{k}$
\end_inset

, because 
\begin_inset Formula $\tau_{l}$
\end_inset

 has a higher priority than 
\begin_inset Formula $\tau_{k}$
\end_inset

), then 
\begin_inset Formula $\left\lceil\frac{T_{k}-c_{l}}{T_{l}}\right\rceil\rightarrow1$
\end_inset

 and 
\begin_inset Formula $\zeta_2=\sum_{\tau_{k}}\frac{\sum_{\left(\tau_{l}\in\gamma_{k}\right)\wedge\left(p_{l}>p_{k}\right)}2\beta_{k,l}}{t_{k}}$
\end_inset

. This means that the system will be controlled by only two parameters, 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 and 
\begin_inset Formula $\beta_{k,l}$
\end_inset

, as in the previous two cases, illustrated in Figures
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-a"

\end_inset

 and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig15-b"

\end_inset

. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard
\align center


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[
\backslash
label{fig15-a}]{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center


\begin_inset Graphics 
	filename figures/figure15-a.eps
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[
\backslash
label{fig15-b}]{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center


\begin_inset Graphics 
	filename figures/figure15-b.eps
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{}
\end_layout

\end_inset


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig15"

\end_inset

 Change of 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

: a) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 versus 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 and b) 
\begin_inset Formula $\frac{s_{max}}{r_{max}}$
\end_inset

 versus 
\begin_inset Formula $\beta_{k,l}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Skipped editing from here......
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Note Comment
status open

\begin_layout Subsection

FMLP & OMLP versus ECM and RCM 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 For ECM's schedulability to be better or equal to that of FMLP or OMLP, 
\begin_inset Formula $s_{max}/|s\_\theta|_{max}$
\end_inset

 (in case of FMLP), where 
\begin_inset Formula $|s\_\theta|_{max}$
\end_inset

 be the maximum short request by any task, and 
\begin_inset Formula $s_{max}/L_{max}$
\end_inset

 (in case of OMLP) must not exceed 
\begin_inset Formula $O(\frac{m}{n})$
\end_inset

, where 
\begin_inset Formula $L_{max}=max_{\forall i,\forall k}L_{i,k}$
\end_inset

. For RCM's schedulability to be better or equal to that of OMLP, 
\begin_inset Formula $s_{max}/L_{max}$
\end_inset

 must not exceed 
\begin_inset Formula $O(\frac{m}{n})$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 As FMLP is used with G-EDF (GSN-EDF), we compare only ECM against it. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "...we compare only ECM against it."??? 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

First, we derive upper bounds for the blocking parameters of FMLP. When requests are non-nested, each resource (short or long) will be contained in its own group. Let 
\begin_inset Formula $N_{i,s}$
\end_inset

 be the number of times a task 
\begin_inset Formula $T_{i}$
\end_inset

 requests a short resource, 
\begin_inset Formula $|s\_\theta|_{i,max}$
\end_inset

 be the maximum request for a short resource by 
\begin_inset Formula $T_{i}$
\end_inset

, 
\begin_inset Formula $\alpha_{bw}=N_{i,s}.(m-1)$
\end_inset

. Now, FMLP's three blocking terms, described in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "global-fmlp"

\end_inset

, are upper bounded as follows: 
\begin_inset Formula \begin{eqnarray*}
BW(T_{i}) & \le & \sum_{s\_\theta\in\theta_{i}}(m-1).|s\_\theta|_{i,max}\\
 & = & N_{i,s}.(m-1).|s\_\theta|_{i,max}\\
 & \le & N_{i,s}.(m-1).|s\_\theta|_{max}\\
& = & \alpha_{bw}.|s\_\theta|_{max}
 \end{eqnarray*}
\end_inset

 
\begin_inset Formula \begin{eqnarray*}
NPB\left(T_{i}\right) & \le & \left(1+N_{i,l}\right).max\left(BW_{k\ne i}\left(T_{k}\right)+|s\_\theta|_{k,max}\right)\\
 & \le & \left(1+N_{i,l}\right).max\left(BW_{k\ne i}\left(T_{k}\right)+|s\_\theta|_{max}\right)\\
 & = & \left(1+N_{i,l}\right).|s\_\theta|_{max}.max_{k\ne i}\left(N_{k,s}.\left(m-1\right)+1\right)\\
 & = & \alpha_{npb}.|s\_\theta|_{max}
 \end{eqnarray*}
\end_inset

 where 
\begin_inset Formula $\alpha_{npb}=\left(1+N_{i,l}\right).max_{k\ne i}\left(N_{k,s}.\left(m-1\right)+1\right)$
\end_inset

. 
\begin_inset Formula \begin{eqnarray*}
DB\left(T_{i}\right) & \le & N_{i,l}.\left(n-1\right).|l\_\theta|_{i,max}\\
 & \le & N_{i,l}.\left(n-1\right).|l\_\theta|_{max}\\
 \end{eqnarray*}
\end_inset

 If 
\begin_inset Formula $|l\_\theta|_{max}\le c1.|s\_\theta|_{max}$
\end_inset

, where 
\begin_inset Formula $c1$
\end_inset

 is the minimum constant that satisfies this relation, then 
\begin_inset Formula \begin{eqnarray*}
DB\left(T_{i}\right)& \le & N_{i,l}.\left(n-1\right).c1.|s\_\theta|_{max}\\
& = & \alpha_{db}.|s\_\theta|_{max}
\end{eqnarray*}
\end_inset

 where 
\begin_inset Formula $\alpha_{db}=N_{i,l}.\left(n-1\right).c1$
\end_inset

.
\end_layout

\begin_layout Standard

The total blocking time of each task is added to the task execution time, and as before, we compare the total utilization of the G-EDF system (with both contention managers) against that under FMLP.
\end_layout

\begin_layout Standard

Now, for ECM's schedulability to be better than FMLP, 
\begin_inset Formula \begin{equation}
 \frac{s_{max}}{|s\_\theta|_{max}}\le
 \frac{\sum_{T_{i}}\left(\alpha_{bw}+\alpha_{npb}+\alpha_{db}\right) \Big/t(T_{i})}{\sum_{T_{i}}\alpha_{edf} \Big/t(T_{i})}
 \label{eq38} \end{equation}
\end_inset


\end_layout

\begin_layout Standard

From (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

), it can be seen that 
\begin_inset Formula $T_{i}$
\end_inset

's blocking time, under FMLP, depends on 
\begin_inset Formula $m,\, n$
\end_inset

 and the number of times it requests resources (in contrast to ECM, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "...contrast to ECM,..."???  
\end_layout

\begin_layout Standard


\end_layout

\end_inset

under which, 
\begin_inset Formula $T_i$
\end_inset

's retry cost depends on the number of times a conflicting task 
\begin_inset Formula $T_{j}$
\end_inset

 requests resources). Thus, if 
\begin_inset Formula $N_{i,s},\, N_{i,l}$
\end_inset

, and 
\begin_inset Formula $N_{k,s}$
\end_inset

 can all be upper bounded by some constant 
\begin_inset Formula $C_{2}$
\end_inset

, which is the maximum number of times any task 
\begin_inset Formula $T_{i}$
\end_inset

 can request a short or long resource, then the numerator in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq38"

\end_inset

) is 
\begin_inset Formula $O(n(n+m))$
\end_inset

, while the denominator is 
\begin_inset Formula $O(n^{2})$
\end_inset

. Therefore: 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{|s\_\theta|_{max}}=O\left(\frac{m}{n} \right)
\label{eq45}
\end{equation}
\end_inset

 This means that, for 
\begin_inset Formula $n<m$
\end_inset

, the contention between tasks under both STM and FMLP is low (even for short resources under FMLP), but FMLP is more affected by 
\begin_inset Formula $NTB$
\end_inset

. When 
\begin_inset Formula $n>m$
\end_inset

, contention increases, but FMLP arranges requests in a FIFO queue, so it is less affected than ECM, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "..than ECM,...???
\end_layout

\begin_layout Standard


\end_layout

\end_inset

which suffers from conflicting tasks and instances of each conflicting one. FMLP is not affected by the number of instances of each conflicting task.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Since OMLP's blocking time is bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq29"

\end_inset

) 
\begin_inset Formula \[ \therefore 
bi\le2.\left(m-1\right).L_{max}\sum_{k=1}^{q}N_{i,k}\]
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: THis sentence is awkward. Why don't you say "Let  
\backslash
[L_{max}=..... Since OMLP's blocking time is ..., 
\backslash
therefore.."
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

For ECM's schedulability to be better than global OMLP: 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}\left(2.\left(m-1\right)\sum_{k=1}^{q}N_{i,k}\right) \Big/t\left(T_{i}\right)}{\sum_{T_{i}}\alpha_{edf} \Big/t\left(T_{i}\right)}\label{eq40}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

For RCM, the ratio is: 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{L_{max}}\le\frac{\sum_{T_{i}}\left(2.\left(m-1\right)\sum_{k=1}^{q}N_{i,k}\right) \Big/t\left(T_{i}\right)}{\sum_{T_{i}}\alpha_{rma} \big/t\left(T_{i}\right)}\label{eq41}\end{equation}
\end_inset


\end_layout

\begin_layout Standard

If 
\begin_inset Formula $\sum_{k=1}^{q}N_{i,k}$
\end_inset

 is upper bounded by 
\begin_inset Formula $C_{3}$
\end_inset

, which is a constant representing the maximum total number of requests for resources by any task 
\begin_inset Formula $T_{i}$
\end_inset

, then: 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{L_{max}}=O\left(\frac{nm}{n^{2}}\right)=O\left(\frac{m}{n}\right)
\label{eq46}
\end{equation}
\end_inset

 for each of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq40"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq41"

\end_inset

). Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Re-started editing from here:
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Section

Conclusions
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:conclusions"

\end_inset


\end_layout

\begin_layout Standard

Under both ECM and RCM, a task incurs 
\begin_inset Formula $2.s_{max}$
\end_inset

 retry cost for each of its atomic sections due to a conflict with another task's atomic section. Retries under RCM and lock-free are affected by a larger number of conflicting task instances than under ECM. While task retries under ECM and lock-free are affected by all other tasks, retries under RCM are affected only by higher priority tasks.
\end_layout

\begin_layout Standard

STM and lock-free have similar parameters that affect their retry costs---i.e., the number of conflicting jobs and how many times they access shared objects. The 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 ratio determines whether STM is better or as good as lock-free. For ECM, this ratio cannot exceed 1, and it can be 1/2 for higher number of conflicting tasks. For RCM, for the common case, 
\begin_inset Formula $s_{max}$
\end_inset

 must be 1/2 of 
\begin_inset Formula $r_{max}$
\end_inset

, and in some cases, 
\begin_inset Formula $s_{max}$
\end_inset

 can be larger than 
\begin_inset Formula $r_{max}$
\end_inset

 by many orders of magnitude.
\end_layout

\begin_layout Standard

Our work raises several questions. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%The questions that we ask (see Section~
\backslash
ref{sec:intro}) are fundamentally analytical in nature, and hence, our results are analytical. However, significant insights can be gained by experimental work on a broad range of embedded software, which is outside our work's scope. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

For example, what are the typical range of values for the different parameters that affect the retry cost (and hence the response time)? How tight is our retry and response time bounds in practice? Can real-time CMs be designed for other multiprocessor real-time schedulers (e.g., partitioned, semi-partitioned), and those that dynamically improve application timeliness behavior? These are important directions for further work.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

LCM
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 4. LCM 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

We consider software transactional memory (STM) concurrency control for multicore real-time software. We present a novel contention manager (CM) for resolving transactional conflicts, called length-based CM (or LCM). We upper bound transactional retries and response times under LCM, when used with G-EDF and G-RMA schedulers. We identify the conditions under which LCM outperforms previous real-time STM CMs and lock-free synchronization. Our implementation and experimental studies reveal that G-EDF/LCM and G-RMA/LCM have shorter or comparable retry costs and response times than other synchronization techniques.
\end_layout

\begin_layout Section

Length-based CM
\end_layout

\begin_layout Standard

LCM resolves conflicts based on the priority of conflicting jobs, besides the length of the interfering atomic section, and the length of the interfered atomic section. This is in contrast to ECM and RCM
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

, where conflicts are resolved using the priority of the conflicting jobs. This strategy allows lower priority jobs, under LCM, to retry for lesser time than that under ECM and RCM, but higher priority jobs, sometimes, wait for lower priority ones with bounded priority-inversion.
\end_layout

\begin_layout Subsection


\begin_inset CommandInset label
LatexCommand label
name "sec 9.1"

\end_inset

 Design and Rationale
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%Begin algorithm here
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Float algorithm
wide false
sideways false
status open


\begin_layout Standard


\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
LinesNumbered
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
KwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_i^k(\theta)\rightarrow$
\end_inset

 interfered atomic section.
\begin_inset Newline newline
\end_inset


\begin_inset Formula $s_j^l(\theta)\rightarrow$
\end_inset

 interfering atomic section.
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\psi\rightarrow$
\end_inset

 predefined threshold 
\begin_inset Formula $\in [0,1]$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\delta_i^k(\theta)\rightarrow$
\end_inset

 remaining execution length of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
KwResult
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

which atomic section of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 or 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 aborts
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $p_i^k > p_j^l$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_j^l(\theta)$
\end_inset

 aborts
\begin_inset CommandInset label
LatexCommand label
name "step_sicommits"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $c_{ij}^{kl}=len(s_j^l(\theta))/len(s_i^k(\theta))$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "step_cijkl"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\alpha_{ij}^{kl}=ln(\psi)/(ln(\psi)-c_{ij}^{kl})$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "step_alphaijkl"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $\alpha=\left(len(s_i^k(\theta))-\delta_i^k(\theta)\right)/len(s_i^k(\theta))$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $\alpha \le \alpha_{ij}^{kl}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_i^k(\theta)$
\end_inset

 aborts
\begin_inset CommandInset label
LatexCommand label
name "step_siaborts"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_j^l(\theta)$
\end_inset

 aborts
\begin_inset CommandInset label
LatexCommand label
name "step_sjaborts"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

\size footnotesize

LCM
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize


\begin_inset CommandInset label
LatexCommand label
name "alg_lcm"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%End algorithm here
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

For both ECM and RCM, 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 can be totally repeated if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 --- which belongs to a higher priority job 
\begin_inset Formula $\tau_{j}^b$
\end_inset

 than 
\begin_inset Formula $\tau_{i}^a$
\end_inset

 --- conflicts with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at the end of its execution, while 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is just about to commit. Thus, LCM, shown in Algorithm
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg_lcm"

\end_inset

, uses the remaining length of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 when it is interfered, as well as 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

, to decide which transaction must be aborted. If 
\begin_inset Formula $p_i^k$
\end_inset

 was greater than 
\begin_inset Formula $p_j^l$
\end_inset

, then 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 would be the one that commits, because it belongs to a higher priority job, and it started before 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 (step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "step_sicommits"

\end_inset

). Otherwise, 
\begin_inset Formula $c_{ij}^{kl}$
\end_inset

 is calculated (step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "step_cijkl"

\end_inset

) to determine whether it is worth aborting 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 in favor of 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

, because 
\begin_inset Formula $len(s_j^l(\theta))$
\end_inset

 is relatively small compared to the remaining execution length of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 (explained further).
\end_layout

\begin_layout Standard

We assume that: 
\begin_inset Formula \begin{equation}
c_{ij}^{kl}=len(s_{j}^{l}(\theta))/len(s_{i}^{k}(\theta))
\label{cm_eq}\end{equation}
\end_inset

 where 
\begin_inset Formula $c_{ij}^{kl}\in]0,\infty[$
\end_inset

, to cover all possible lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

. Our idea is to reduce the opportunity for the abort of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 if it is close to committing when interfered and 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is large. This abort opportunity is increasingly reduced as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to the end of its execution, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 gets larger.
\end_layout

\begin_layout Standard

On the other hand, as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is interfered early, or 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 is small compared to 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

's remaining length, the abort opportunity is increased even if 
\begin_inset Formula $s_i^k (\theta)$
\end_inset

 is close to the end of its execution. To decide whether 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 must be aborted or not, we use a threshold value 
\begin_inset Formula $\psi\in[0,1]$
\end_inset

 that determines 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 (step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "step_alphaijkl"

\end_inset

), where 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 is the maximum percentage of 
\begin_inset Formula $len(s_i^k(\theta))$
\end_inset

 below which 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 is allowed to abort 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

. Thus, if the already executed part of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 --- when 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 --- does not exceed 
\begin_inset Formula $\alpha_{ij}^{kl}len(s_i^k(\theta))$
\end_inset

, then 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 is aborted (step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "step_siaborts"

\end_inset

). Otherwise, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 is aborted (step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "step_sjaborts"

\end_inset

).
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/figure16.eps
	scale 40

\end_inset

 
\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig16"

\end_inset

Interference of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 by various lengths of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

The behavior of LCM is illustrated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

. In this figure, the horizontal axis corresponds to different values of 
\begin_inset Formula $\alpha$
\end_inset

 ranging from 
\begin_inset Formula $0$
\end_inset

 to 
\begin_inset Formula $1$
\end_inset

, and the vertical axis corresponds to different values of abort opportunities, 
\begin_inset Formula $f(c_{ij}^{kl},\alpha)$
\end_inset

, ranging from 
\begin_inset Formula $0$
\end_inset

 to 
\begin_inset Formula $1$
\end_inset

 and calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq49"

\end_inset

): 
\begin_inset Formula \begin{equation}
f(c_{ij}^{kl},\alpha)=e^{\frac{-c_{ij}^{kl}\alpha}{1-\alpha}}
\label{eq49}\end{equation}
\end_inset

 where 
\begin_inset Formula $c_{ij}^{kl}$
\end_inset

 is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "cm_eq"

\end_inset

).
\end_layout

\begin_layout Standard

Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

 shows one atomic section 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 (whose 
\begin_inset Formula $\alpha$
\end_inset

 changes along the horizontal axis) interfered by five different lengths of 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

. For a predefined value of 
\begin_inset Formula $f(c_{ij}^{kl},\alpha)$
\end_inset

 (denoted as 
\begin_inset Formula $\psi$
\end_inset

 in Algorithm
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg_lcm"

\end_inset

), there corresponds a specific value of 
\begin_inset Formula $\alpha$
\end_inset

 (which is 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 in Algorithm
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg_lcm"

\end_inset

) for each curve. For example, when 
\begin_inset Formula $len(s_j^l(\theta))=0.1 \times len(s_i^k(\theta))$
\end_inset

, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 aborts 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 if the latter has not executed more than 
\begin_inset Formula $\alpha3$
\end_inset

 percentage (shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

) of its execution length. As 
\begin_inset Formula $len(s_{j}^{l}(\theta))$
\end_inset

 decreases, the corresponding 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 increases (as shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig16"

\end_inset

, 
\begin_inset Formula $\alpha3>\alpha2>\alpha1$
\end_inset

).
\end_layout

\begin_layout Standard

Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq49"

\end_inset

) achieves the desired requirement that the abort opportunity is reduced as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 gets closer to the end of its execution (as 
\begin_inset Formula $\alpha\rightarrow1,\, f(c_{ij}^{kl},1)\rightarrow0$
\end_inset

), or as the length of the conflicting transaction increases (as 
\begin_inset Formula $c_{ij}^{kl}\rightarrow\infty,\, f(\infty,\alpha)\rightarrow0$
\end_inset

). Meanwhile, this abort opportunity is increased as 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is interfered closer to its release (as 
\begin_inset Formula $\alpha\rightarrow0,\, f(c_{ij}^{kl},0)\rightarrow1$
\end_inset

), or as the length of the conflicting transaction decreases (as 
\begin_inset Formula $c_{ij}^{kl}\rightarrow0,\, f(0,\alpha)\rightarrow1$
\end_inset

).
\end_layout

\begin_layout Standard

LCM is not a centralized CM, which means that, upon a conflict, each transactions has to decide whether it must commit or abort.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "LCM_higher_rc"

\end_inset

 Let 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interfere once with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

. Then, the maximum contribution of 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 to 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

's retry cost is: 
\begin_inset Formula \begin{equation}
W_i^k(s_j^l(\theta))\le \alpha_{ij}^{kl}len\Big(s_{i}^{k}(\theta)\Big)+len\Big(s_{j}^{l}(\theta)\Big)\label{eq47}\end{equation}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 If 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 at a 
\begin_inset Formula $\Upsilon$
\end_inset

 percentage, where 
\begin_inset Formula $\Upsilon<\alpha_{ij}^{kl}$
\end_inset

, then the retry cost of 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 is 
\begin_inset Formula $\Upsilon len(s_{i}^{k}(\theta))+len(s_{j}^{l}(\theta))$
\end_inset

, which is lower than that calculated in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq47"

\end_inset

). Besides, if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 percentage, then 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 will not abort. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "LCM_lower_rc"

\end_inset

 An atomic section of a higher priority job, 
\begin_inset Formula $\tau_{j}^b$
\end_inset

, may have to abort and retry due to a lower priority job, 
\begin_inset Formula $\tau_{i}^a$
\end_inset

, if 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 after the 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

 percentage. 
\begin_inset Formula $\tau_{j}$
\end_inset

's retry time, due to 
\begin_inset Formula $s_{i}^{k}(\theta)$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

, is upper bounded by: 
\begin_inset Formula \begin{equation}
W_j^l(s_i^k(\theta))\le \Big(1-\alpha_{ij}^{kl}\Big)len\Big(s_{i}^{k}(\theta)\Big)\label{eq48}\end{equation}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 It is derived directly from Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "LCM_higher_rc"

\end_inset

, as 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 will have to retry for the remaining length of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%sh-start
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "no priority inversion in lcm"

\end_inset

 Under LCM, there is no priority inversion. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Assume three atomic sections, 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

, and 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

, where 
\begin_inset Formula $p_j > p_i$
\end_inset

 and 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 after 
\begin_inset Formula $\alpha_{ij}^{kl}$
\end_inset

. Then, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 will have to abort and retry. At this time, if 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 interferes with the other two atomic sections, then LCM decides which transaction to commit by comparing the two transactions. So, we have the following cases: 
\end_layout

\begin_layout Itemize


\begin_inset Formula $p_a < p_i < p_j$
\end_inset

. Now, 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 will not abort any one because it is still in its beginning and it is of the lowest priority. Thus, 
\begin_inset Formula $\tau_j$
\end_inset

 is not indirectly blocked by 
\begin_inset Formula $\tau_a$
\end_inset

. 
\end_layout

\begin_layout Itemize


\begin_inset Formula $p_i<p_a<p_j$
\end_inset

. Now, even if 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 interferes with 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 before 
\begin_inset Formula $\alpha_{ia}^{kb}$
\end_inset

, and 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 is allowed to abort 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, after comparing 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 and 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

, LCM will select 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 to commit and abort 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

, because the latter is still at its beginning, and 
\begin_inset Formula $\tau_j$
\end_inset

 is of higher priority. If 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 is not allowed to abort 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, the situation is still the same, because 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 was already retrying until 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 finishes. So, the medium priority instance of 
\begin_inset Formula $\tau_a$
\end_inset

 does not increase the delay time of the higher priority instance of 
\begin_inset Formula $\tau_j$
\end_inset

. 
\end_layout

\begin_layout Itemize


\begin_inset Formula $p_a>p_j>p_i$
\end_inset

. Now, if 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 is chosen to commit, this will not cause a priority inversion for 
\begin_inset Formula $\tau_j$
\end_inset

 because 
\begin_inset Formula $\tau_a$
\end_inset

 is of higher priority. 
\end_layout

\begin_layout Itemize

if 
\begin_inset Formula $\tau_a$
\end_inset

 preempts 
\begin_inset Formula $\tau_i$
\end_inset

, then LCM will compare only between 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 and 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

. If 
\begin_inset Formula $p_a<p_j$
\end_inset

, then 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 will commit because of its task's higher priority and 
\begin_inset Formula $s_a^b(\theta)$
\end_inset

 is still at its beginning. Otherwise, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 will retry, but this will not be priority inversion, because 
\begin_inset Formula $\tau_a$
\end_inset

 is already of higher priority than 
\begin_inset Formula $\tau_j$
\end_inset

. If 
\begin_inset Formula $\tau_a$
\end_inset

 does not access any object but it preempts 
\begin_inset Formula $\tau_i$
\end_inset

, then LCM will choose 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 to commit, since only already running transactions are competing together. 
\end_layout

\begin_layout Standard

From the previous cases, it appears that priority inversion can never happen under LCM. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "priority_inversion"

\end_inset

 A higher priority job, 
\begin_inset Formula $\tau_j^v$
\end_inset

, can be delayed by lower priority jobs for at most number of atomic sections in 
\begin_inset Formula $\tau_j^v$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 By generalizing the cases mentioned in the proof of Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "no priority inversion in lcm"

\end_inset

 to any number of conflicting jobs, it can be seen that when an atomic section, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

, of a higher priority job conflicts with a number of atomic sections belonging to lower priority jobs, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 can be delayed only one of them, 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, for the remaining length of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, then 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 can run. Thus, the worst case scenario happens when each atomic section in the higher priority job is delayed by one of the atomic sections belonging to lower priority jobs. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

%sh-end
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "max_pri_inv"

\end_inset

 The maximum delay suffered by 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 due to lower priority jobs is caused by the maximum length atomic section accessing object 
\begin_inset Formula $\theta$
\end_inset

, which belongs to a lower priority job than 
\begin_inset Formula $\tau_j^b$
\end_inset

 that owns 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Assume three atomic sections, 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

, 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

, and 
\begin_inset Formula $s_h^z(\theta)$
\end_inset

, where 
\begin_inset Formula $p_j>p_i$
\end_inset

, 
\begin_inset Formula $p_j>p_h$
\end_inset

, and 
\begin_inset Formula $len(s_i^k(\theta))>len(s_h^z(\theta))$
\end_inset

. Now, 
\begin_inset Formula $\alpha_{ij}^{kl}>\alpha_{hj}^{zl}$
\end_inset

 and 
\begin_inset Formula $c_{ij}^{kl}<c_{hj}^{zl}$
\end_inset

. By applying
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq48"

\end_inset

) to obtain the contribution of 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 and 
\begin_inset Formula $s_h^z(\theta)$
\end_inset

 to the priority inversion of 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

 and dividing them, we get: 
\begin_inset Formula \begin{eqnarray*}
\frac{W_{j}^{l}(s_{i}^{k}(\theta))}{W_{j}^{l}(s_{h}^{z}(\theta))} & = & \frac{\left(1-\alpha_{ij}^{kl}\right)len(s_{i}^{k}(\theta))}{\left(1-\alpha_{hj}^{zl}\right)len(s_{h}^{z}(\theta))}
\end{eqnarray*}
\end_inset

 By substitution for 
\begin_inset Formula $\alpha$
\end_inset

s from
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq49"

\end_inset

): 
\begin_inset Formula \begin{eqnarray*}
 & = & \frac{(1-\frac{ln\psi}{ln\psi-c_{ij}^{kl}})len(s_{i}^{k}(\theta))}{(1-\frac{ln\psi}{ln\psi-c_{hj}^{zl}})len(s_{h}^{z}(\theta))}
  =  \frac{(\frac{-c_{ij}^{kl}}{ln\psi-c_{ij}^{kl}})len(s_{i}^{k}(\theta))}{(\frac{-c_{hj}^{zl}}{ln\psi-c_{hj}^{zl}})len(s_{h}^{z}(\theta))}\end{eqnarray*}
\end_inset

 
\begin_inset Formula $\because ln\psi \le 0$
\end_inset

 and 
\begin_inset Formula $c_{ij}^{kl},c_{hj}^{kl} > 0, \therefore$
\end_inset

 by substitution from
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "cm_eq"

\end_inset

) 
\begin_inset Formula \begin{eqnarray*}
 & = & \frac{len(s_{j}^{l}(\theta))/(ln\psi-c_{ij}^{kl})}{len(s_{j}^{l}(\theta))/(ln\psi-c_{hj}^{zl})}
  =  \frac{ln\psi-c_{hj}^{zl}}{ln\psi-c_{ij}^{kl}}>1\end{eqnarray*}
\end_inset

 Thus, as the length of the interfered atomic section increases, the delay suffered by the interfering atomic section increases. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection


\begin_inset CommandInset label
LatexCommand label
name "response g-edf/lcm"

\end_inset

 Response Time of G-EDF/LCM
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%Toward establishing the response time under G-EDF/LCM, we introduce a set of Claims.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "GEDF/LCM response time"

\end_inset

 
\begin_inset Formula $RC(T_i)$
\end_inset

 for a task 
\begin_inset Formula $\tau_i$
\end_inset

 under G-EDF/LCM is upper bounded by: 
\begin_inset Formula \begin{eqnarray}
RC(T_i) & = & \Bigg(\sum_{\forall \tau_h \in \gamma_i}\sum_{\forall\theta \in \theta_i \wedge \theta_h}\Bigg(\left\lceil\frac{T_{i}}{T_{h}}\right\rceil\sum_{\forall s_{h}^{l}(\theta)}len\Big(s_{h}^{l}(\theta)\Big)\nonumber\\
& + & \alpha_{max}^{hl}len\Big(s_{max}^{h}(\theta)\Big)\Bigg)\Bigg)\nonumber\\
& + & \sum_{\forall s_{i}^{y}(\theta)}\Big(1-\alpha_{max}^{iy}\Big)len\Big(s_{max}^i(\theta)\Big)  
\label{eq78}\end{eqnarray}
\end_inset

 where 
\begin_inset Formula $\alpha_{max}^{hl}$
\end_inset

 is the 
\begin_inset Formula $\alpha$
\end_inset

 value that corresponds to 
\begin_inset Formula $\psi$
\end_inset

 due to the interference of 
\begin_inset Formula $s_{max}^h(\theta)$
\end_inset

 by 
\begin_inset Formula $s_h^l(\theta)$
\end_inset

. 
\begin_inset Formula $\alpha_{max}^{iy}$
\end_inset

 is the 
\begin_inset Formula $\alpha$
\end_inset

 value that corresponds to 
\begin_inset Formula $\psi$
\end_inset

 due to the interference of 
\begin_inset Formula $s_{max}^i(\theta)$
\end_inset

 by 
\begin_inset Formula $s_i^y(\theta)$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The maximum number of higher priority instances of 
\begin_inset Formula $\tau_h$
\end_inset

 that can interfere with 
\begin_inset Formula $\tau_i^x$
\end_inset

 is 
\begin_inset Formula $\left\lceil\frac{T_i}{T_h}\right\rceil$
\end_inset

, as shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig17"

\end_inset

, where one instance of 
\begin_inset Formula $\tau_h$
\end_inset

 and 
\begin_inset Formula $\tau_h^p$
\end_inset

 coincides with the absolute deadline of 
\begin_inset Formula $\tau_i^x$
\end_inset

.
\end_layout

\begin_layout Standard

By using Claims
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "LCM_higher_rc"

\end_inset

,
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "LCM_lower_rc"

\end_inset

,
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "priority_inversion"

\end_inset

, and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "max_pri_inv"

\end_inset

, and Claim 1 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 to determine the effect of atomic sections belonging to higher and lower priority instances of interfering tasks to 
\begin_inset Formula $\tau_i^x$
\end_inset

, Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Response time of 
\begin_inset Formula $\tau_{i}$
\end_inset

 is calculated by (11) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

. 
\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard
\align center


\begin_inset Graphics 
	filename figures/figure18.eps
	scale 60

\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig17"

\end_inset


\begin_inset Formula $\tau_h^p$
\end_inset

 has a higher priority than 
\begin_inset Formula $\tau_i^x$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Schedulability of G-EDF/LCM and ECM
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "performance g-edf-lcm"

\end_inset

 We now compare the schedulability of G-EDF/LCM with ECM
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

%(FMLP and OMLPprotocols~
\backslash
cite{key-4,brandenburg2008comparison,key-3}), 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

to understand when G-EDF/LCM will perform better. Toward this, we compare the total utilization of ECM with that of G-EDF/LCM. For each method, we inflate the 
\begin_inset Formula $c_i$
\end_inset

 of each task 
\begin_inset Formula $\tau_i$
\end_inset

 by adding the retry cost suffered by 
\begin_inset Formula $\tau_i$
\end_inset

. Thus, if method 
\begin_inset Formula $A$
\end_inset

 adds retry cost 
\begin_inset Formula $RC_A(T_i)$
\end_inset

 to 
\begin_inset Formula $c_i$
\end_inset

, and method 
\begin_inset Formula $B$
\end_inset

 adds retry cost 
\begin_inset Formula $RC_B(T_i)$
\end_inset

 to 
\begin_inset Formula $c_i$
\end_inset

, then the schedulability of 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are compared as: 
\begin_inset Formula \begin{eqnarray}
\sum_{\forall \tau_{i}}\frac{c_{i}+RC_A(T_{i})}{T_{i}} & \le & \sum_{\forall \tau_{i}}\frac{c_{i}+RC_B(T_{i})}{T_{i}}\nonumber\\
\sum_{\forall \tau_{i}}\frac{RC_A(T_{i})}{T_{i}} & \le & \sum_{\forall \tau_{i}}\frac{RC_B(T_{i})}{T_{i}}
\label{eqa}\end{eqnarray}
\end_inset

 Thus, schedulability is compared by substituting the retry cost added by the synchronization methods in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eqa"

\end_inset

).
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lcm versus ecm"

\end_inset

 Let 
\begin_inset Formula $s_{max}$
\end_inset

 be the maximum length atomic section accessing any object 
\begin_inset Formula $\theta$
\end_inset

. Let 
\begin_inset Formula $\alpha_{max}$
\end_inset

 and 
\begin_inset Formula $\alpha_{min}$
\end_inset

 be the maximum and minimum values of 
\begin_inset Formula $\alpha$
\end_inset

 for any two atomic sections 
\begin_inset Formula $s_i^k(\theta)$
\end_inset

 and 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

. Given a threshold 
\begin_inset Formula $\psi$
\end_inset

, schedulability of G-EDF/LCM is equal or better than ECM if for any task 
\begin_inset Formula $\tau_i$
\end_inset

: 
\begin_inset Formula \begin{equation}
\frac{1-\alpha_{min}}{1-\alpha_{max}} \le \sum_{\forall \tau_h \in \gamma_i}\left\lceil\frac{T_i}{T_h}\right\rceil
\label{edf-lcm-ecm}\end{equation}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Under ECM, 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
RC(T_{i})\le\sum_{\forall \tau_{h}\in\gamma_{i}}\sum_{\forall \theta\in\ (\theta_{i}\wedge\theta_{h})}\left(\left\lceil\frac{T_{i}}{T_{h}}\right\rceil\sum_{\forall s_{h}^{z}(\theta)}2len(s_{max})\right)\label{eq61}\end{equation}
\end_inset

 with the assumption that all lengths of atomic sections of (4) and (8) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 and
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq78"

\end_inset

) are replaced by 
\begin_inset Formula $s_{max}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%~
\backslash
cite{stmconcurrencycontrol:emsoft11}. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Let 
\begin_inset Formula $\alpha_{max}^{hl}$
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq78"

\end_inset

) be replaced with 
\begin_inset Formula $\alpha_{max}$
\end_inset

, and 
\begin_inset Formula $\alpha_{max}^{iy}$
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq78"

\end_inset

) be replaced with 
\begin_inset Formula $\alpha_{min}$
\end_inset

. As 
\begin_inset Formula $\alpha_{max}$
\end_inset

, 
\begin_inset Formula $\alpha_{min}$
\end_inset

, and 
\begin_inset Formula $len(s_{max})$
\end_inset

 are all constants, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq78"

\end_inset

) is upper bounded by: 
\begin_inset Formula \begin{eqnarray}
RC(T_i) & \le & \Bigg(\sum_{\forall \tau_h \in \gamma_i}\sum_{\forall\theta \in \theta_i \wedge \theta_h}\Bigg(\left\lceil\frac{T_{i}}{T_{h}}\right\rceil\sum_{\forall s_{h}^{l}(\theta)}\left(1+\alpha_{max}\right)\nonumber\\
& & len\Big(s_{max}\Big)\Bigg)\Bigg)
 +  \sum_{\forall s_{i}^{y}(\theta)}\Big(1-\alpha_{min}\Big)len\Big(s_{max}\Big)\nonumber\\ 
\label{eq101}\end{eqnarray}
\end_inset

 If 
\begin_inset Formula $\beta_1^{ih}$
\end_inset

 is the total number of times any instance of 
\begin_inset Formula $\tau_h$
\end_inset

 accesses shared objects with 
\begin_inset Formula $\tau_i$
\end_inset

, then 
\begin_inset Formula $\beta_1^{ih}=\sum_{\forall \theta\in(\theta_{i}\wedge\theta_{h})}\sum_{\forall s_{h}^{z}(\theta)}$
\end_inset

. Furthermore, if 
\begin_inset Formula $\beta_2^i$
\end_inset

 is the total number of times any instance of 
\begin_inset Formula $\tau_i$
\end_inset

 accesses shared objects with any other instance, 
\begin_inset Formula $\beta_2^i=\sum_{\forall s_{i}^{y}(\theta)}$
\end_inset


\shape italic
, where 
\begin_inset Formula $\theta$
\end_inset

 is shared with another task
\shape default
. Then, 
\begin_inset Formula $\beta_{i}=max\{max_{\forall \tau_h \in \gamma_i}\{\beta_1^{ih}\},\beta_2^i\}$
\end_inset

 is the maximum number of accesses to all shared objects by any instance of 
\begin_inset Formula $\tau_{i}$
\end_inset

 or 
\begin_inset Formula $\tau_{h}$
\end_inset

. Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq61"

\end_inset

) becomes: 
\begin_inset Formula \begin{equation}
RC(T_{i})\le\sum_{\tau_{h}\in\gamma_{i}}2\left\lceil\frac{T_{i}}{T_{h}}\right\rceil\beta_{i}len(s_{max})
\label{eq63}\end{equation}
\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq101"

\end_inset

) becomes: 
\begin_inset Formula \begin{eqnarray}
RC(T_{i}) & \le & \beta_{i}len(s_{max}) \Bigg((1-\alpha_{min})\nonumber\\
& + & \sum_{\forall \tau_h \in \gamma_i}\left\lceil\frac{T_{i}}{T_{h}}\right\rceil(1+\alpha_{max})\Bigg)
\label{eq102}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

We can now compare the total utilization of G-EDF/LCM with that of ECM by comparing
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq101"

\end_inset

) and
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq102"

\end_inset

) for all 
\begin_inset Formula $\tau_i$
\end_inset

: 
\begin_inset Formula \begin{eqnarray}
& & \sum_{\forall \tau_{i}}\frac{(1-\alpha_{min})+\sum_{\forall \tau_{h}\in\gamma_{i}}\left(\left\lceil\frac{T_{i}}{T_{h}}\right\rceil(1+\alpha_{max})\right)}{T_{i}} \nonumber\\
& \le &   \sum_{\forall \tau_{i}}\frac{\sum_{\forall \tau_{h}\in\gamma_{i}}2\left\lceil\frac{T_{i}}{T_{h}}\right\rceil}{T_{i}}\label{eqc}\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eqc"

\end_inset

) is satisfied if for each 
\begin_inset Formula $\tau_{i}$
\end_inset

, the following condition is satisfied: 
\begin_inset Formula \begin{equation*}
(1-\alpha_{min})+\sum_{\forall \tau_h \in \gamma_i}\left(\left\lceil\frac{T_{i}}{T_{h}}\right\rceil(1+\alpha_{max})\right)  \le  2\sum_{\forall \tau_h \in \gamma_i}\left\lceil\frac{T_{i}}{T_{h}}\right\rceil
\end{equation*}
\end_inset

 
\begin_inset Formula \begin{equation*}
\therefore\frac{1-\alpha_{min}}{1-\alpha_{max}}  \le  \sum_{\forall \tau_h \in \gamma_i}\left\lceil\frac{T_{i}}{T_{h}}\right\rceil
\end{equation*}
\end_inset

 Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

G-EDF/LCM versus Lock-free
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "gedf-lcm-lock-free"

\end_inset

 We consider the retry-loop lock-free synchronization for G-EDF given in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. This lock-free approach is the most relevant to our work.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "gedf-lcm-lock-free_clm"

\end_inset

 Let 
\begin_inset Formula $s_{max}$
\end_inset

 denote 
\begin_inset Formula $len(s_{max})$
\end_inset

 and 
\begin_inset Formula $r_{max}$
\end_inset

 denote the maximum execution cost of a single iteration of any retry loop of any task in the retry-loop lock-free algorithm in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. Now, G-EDF/LCM achieves higher schedulability than the retry-loop lock-free approach if the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 under G-EDF/LCM ranges between 0.5 and 2 (which is higher than that under ECM). 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 From
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

, the retry-loop lock-free algorithm is upper bounded by: 
\begin_inset Formula \begin{equation}
RL(T_{i})=\sum_{\tau_{h}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{h}}\right\rceil +1\right)\beta_{i}r_{max}\label{eq32-1}
\end{equation}
\end_inset

 where 
\begin_inset Formula $\beta_{i}$
\end_inset

 is as defined in Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lcm versus ecm"

\end_inset

. The retry cost of 
\begin_inset Formula $\tau_{i}$
\end_inset

 in G-EDF/LCM is upper bounded by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq102"

\end_inset

). By comparing G-EDF/LCM's total utilization with that of the retry-loop lock-free algorithm, we get: 
\begin_inset Formula \begin{eqnarray*}
 & \sum_{\forall\tau_{i}}\frac{\left((1-\alpha_{min})+\sum_{\forall\tau_{h}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{h}}\right\rceil (1+\alpha_{max})\right)\right)\beta_{i}s_{max}}{T_{i}}\\
\le & \sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{h}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{h}}\right\rceil +1\right)\beta_{i}r_{max}}{T_{i}}
\end{eqnarray*}
\end_inset

 
\begin_inset Formula \begin{eqnarray}
\therefore\frac{s_{max}}{r_{max}}\le\frac{\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{h}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{h}}\right\rceil +1\right)\beta_{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\left((1-\alpha_{min})+\sum_{\forall\tau_{h}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{h}}\right\rceil (1+\alpha_{max})\right)\right)\beta_{i}}{T_{i}}}\label{u-gedf-lcm-ecm}
\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

Let the number of tasks that have shared objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

 be 
\begin_inset Formula $\omega$
\end_inset

 (i.e., 
\begin_inset Formula $\sum_{\tau_{h}\in\gamma_{i}}=\omega\ge1$
\end_inset

 since at least one task has a shared object with 
\begin_inset Formula $\tau_{i}$
\end_inset

; otherwise, there is no conflict between tasks). Let the total number of tasks be 
\begin_inset Formula $n$
\end_inset

, so 
\begin_inset Formula $1\le\omega\le n-1$
\end_inset

, and 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{h}}\right\rceil \in[1,\infty[$
\end_inset

. To find the minimum and maximum values for the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, we consider the following cases: 
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow0,\alpha_{max}\rightarrow0$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset Formula $\therefore$
\end_inset


\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "u-gedf-lcm-ecm"

\end_inset

) will be: 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & 1+\frac{\sum_{\forall\tau_{i}}\frac{\omega-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\forall\tau_{h}\in\gamma_{i}}\left\lceil \frac{T_{i}}{T_{h}}\right\rceil }{T_{i}}}\nonumber \\
\label{s-r-1}
\end{eqnarray}
\end_inset

 By substituting the edge values for 
\begin_inset Formula $\omega$
\end_inset

 and 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{h}}\right\rceil $
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "s-r-1"

\end_inset

), we derive that the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 lies between 1 and 2. 
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow0,\alpha_{max}\rightarrow1$
\end_inset

 
\end_layout

\begin_layout Standard

(
\begin_inset CommandInset ref
LatexCommand ref
reference "u-gedf-lcm-ecm"

\end_inset

) becomes 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & 0.5+\frac{\sum_{\forall\tau_{i}}\frac{\omega-0.5}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+2\sum_{\forall\tau_{h}\in\gamma_{i}}\left\lceil \frac{T_{i}}{T_{h}}\right\rceil }{T_{i}}}\label{s-r-2}
\end{eqnarray}
\end_inset

 By applying the edge values for 
\begin_inset Formula $\omega$
\end_inset

 and 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{h}}\right\rceil $
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "s-r-2"

\end_inset

), we derive that the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 lies between 0.5 and 1. 
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow1,\alpha_{max}\rightarrow0$
\end_inset

 
\end_layout

\begin_layout Standard

This case is rejected since 
\begin_inset Formula $\alpha_{min}\le\alpha_{max}$
\end_inset

. 
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow1,\alpha_{max}\rightarrow1$
\end_inset

 
\end_layout

\begin_layout Standard


\begin_inset Formula $\therefore$
\end_inset


\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "u-gedf-lcm-ecm"

\end_inset

) becomes: 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & 0.5+\frac{\sum_{\tau_{i}}\frac{\omega}{T_{i}}}{2\sum_{\tau_{i}}\frac{\sum_{\forall\tau_{h}\in\gamma_{i}}\left\lceil \frac{T_{i}}{T_{h}}\right\rceil }{T_{i}}}\label{s-r-4}
\end{eqnarray}
\end_inset

 By applying the edge values for 
\begin_inset Formula $\omega$
\end_inset

 and 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{h}}\right\rceil $
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "s-r-4"

\end_inset

), we derive that the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 lies between 0.5 and 1, which is similar to that achieved by ECM.
\end_layout

\begin_layout Standard

Summarizing from the previous cases, the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 lies between 0.5 and 2, whereas for ECM
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

, it lies between 0.5 and 1. Claim follows.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Response Time of G-RMA/LCM
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "rma"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response g-rma/lcm"

\end_inset

 Let 
\begin_inset Formula $\lambda_{2}(j,\theta)=\sum_{\forall s_{j}^{l}(\theta)}len(s_{j}^{l}(\theta))+\alpha_{max}^{jl}len(s_{max}^{j}(\theta))$
\end_inset

, where 
\begin_inset Formula $\alpha_{max}^{jl}$
\end_inset

 is the 
\begin_inset Formula $\alpha$
\end_inset

 value corresponding to 
\begin_inset Formula $\psi$
\end_inset

 due to the interference of 
\begin_inset Formula $s_{max}^j(\theta)$
\end_inset

 by 
\begin_inset Formula $s_j^l(\theta)$
\end_inset

. The retry cost of any task 
\begin_inset Formula $\tau_i$
\end_inset

 under G-RMA/LCM during 
\begin_inset Formula $T_i$
\end_inset

 is given by: 
\begin_inset Formula \begin{eqnarray}
RC\left(T_i\right) & = &
  \sum_{\forall \tau_{j}^{*}}\left(\sum_{\theta\in(\theta_{i}\wedge\theta_{j})}\left(\left(\left\lceil\frac{T_i}{T_{j}}\right\rceil +1\right)\lambda_{2}(j,\theta)\right)\right)\nonumber\\
& + & \sum_{\forall s_{i}^{y}(\theta)}\Big(1-\alpha_{max}^{iy}\Big)len\Big(s_{max}^i(\theta)\Big)
\label{eq60}
\end{eqnarray}
\end_inset

 where 
\begin_inset Formula $\tau_{j}^{*}=\{\tau_{j}|(\tau_{j}\in\gamma_{i})\wedge(p_{j}>p_{i})\}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Under G-RMA, all instances of a higher priority task, 
\begin_inset Formula $\tau_{j}$
\end_inset

, can conflict with a lower priority task, 
\begin_inset Formula $\tau_{i}$
\end_inset

, during 
\begin_inset Formula $T_{i}$
\end_inset

. (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq47"

\end_inset

) can be used to determine the contribution of each conflicting atomic section in 
\begin_inset Formula $\tau_j$
\end_inset

 to 
\begin_inset Formula $\tau_i$
\end_inset

. Meanwhile, all instances of any task with lower priority than 
\begin_inset Formula $\tau_{i}$
\end_inset

 can conflict with 
\begin_inset Formula $\tau_i$
\end_inset

 during 
\begin_inset Formula $T_{i}$
\end_inset

. Claims
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "LCM_lower_rc"

\end_inset

 and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "priority_inversion"

\end_inset

 can be used to determine the contribution of conflicting atomic sections in lower priority tasks to 
\begin_inset Formula $\tau_i$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%over the whole $t(T_i)$ (unlike the case of G-EDF/LCM, where (
\backslash
ref{eq59}) chooses which equation to use depending on whether or not $L$ is less than $
\backslash
left
\backslash
lfloor
\backslash
frac{t(T_{i})-c_{h}}{t(T_{h})}
\backslash
right
\backslash
rfloor t(T_{h})+c_{h}$).
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Using the previous notations and Claim 3 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

, the Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

The response time is calculated by (17) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 with replacing 
\begin_inset Formula $RC(R_i^{up})$
\end_inset

 with 
\begin_inset Formula $RC(T_i)$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%BR: You should say "..with $RC(T_i)$ replacing $RC(R_i^{up})$."
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Schedulability of G-RMA/LCM and RCM
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "rma eval"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "rma_eval_clm"

\end_inset

 Under the same assumptions of Claims
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lcm versus ecm"

\end_inset

 and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "response g-rma/lcm"

\end_inset

, G-RMA/LCM's schedulability is equal or better than RCM if: 
\begin_inset Formula \begin{equation}
\frac{1-\alpha_{min}}{1-\alpha_{max}}\le \sum_{\forall \tau_j^*}\left( \left\lceil\frac{T_i}{T_j}\right\rceil +1 \right)
\label{eq70}\end{equation}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Under the same assumptions as that of Claims
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lcm versus ecm"

\end_inset

 and
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "response g-rma/lcm"

\end_inset

, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

) can be upper bounded as: 
\begin_inset Formula \begin{eqnarray}
RC(T_i) & \le & \sum_{\forall \tau_{j}^{*}}\bigg(\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil +1\right)(1+\alpha_{max})
 len(s_{max})\beta_{i}\bigg)\nonumber\\
 & + & (1-\alpha_{min})len(s_{max})\beta_{i}\label{eq68}\end{eqnarray}
\end_inset

 For RCM, (16) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 for 
\begin_inset Formula $RC(T_{i})$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation*}
RC(T_{i})\le\sum_{\forall \tau_{j}^{*}}\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil +1\right)2\beta_{i}len(s_{max})\label{eq69}\end{equation*}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash

\end_layout

\begin_layout Standard


\end_layout

\end_inset

By comparing the total utilization of G-RMA/LCM with that of RCM, we get: 
\begin_inset Formula \begin{eqnarray}
 & \sum_{\forall\tau_{i}}\frac{len\left(s_{max}\right)\beta_{i}\left(\left(1-\alpha_{min}\right)+\sum_{\forall\tau_{j}^{*}}\left(\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil+1\right)\left(1+\alpha_{max}\right)\right)\right)}{T_{i}}\nonumber\\
\le & \sum_{\forall\tau_{i}}\frac{2len\left(s_{max}\right)\beta_{i}\sum_{\forall\tau_{j}^{*}}\left(\left\lceil\frac{T_{i}}{T_{j}}\right\rceil+1\right)}{T_{i}}\label{grma-lcm-rcm}\end{eqnarray}
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "grma-lcm-rcm"

\end_inset

) is satisfied if 
\begin_inset Formula $\forall \tau_i$
\end_inset


\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq70"

\end_inset

) is satisfied. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

G-RMA/LCM versus Lock-free
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "g-rma lcm vs lock-free"

\end_inset


\end_layout

\begin_layout Standard

Although
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

 considers retry-loop lock-free synchronization for G-EDF systems,
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

 also applies for G-RMA systems.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lcm rma lock-free comparison clm"

\end_inset


\end_layout

\begin_layout Standard

Let 
\begin_inset Formula $s_{max}$
\end_inset

 denote 
\begin_inset Formula $len(s_{max})$
\end_inset

 and 
\begin_inset Formula $r_{max}$
\end_inset

 denote the maximum execution cost of a single iteration of any retry loop of any task in the retry-loop lock-free algorithm in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. G-RMA/LCM achieves higher schedulability than the retry-loop lock-free approach if the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 under G-RMA/LCM is no less than 0.5. Upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 can extend to large values when 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

 are very large.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

The retry cost for G-RMA/LCM is upper bounded by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq60"

\end_inset

). Let 
\begin_inset Formula $\gamma_{i}=\tau_{j}^{*}\cup\bar{\tau_{j}}$
\end_inset

, where 
\begin_inset Formula $\tau_{j}^{*}$
\end_inset

 is the set of higher priority tasks than 
\begin_inset Formula $\tau_{i}$
\end_inset

 sharing objects with 
\begin_inset Formula $\tau_{i}$
\end_inset

. 
\begin_inset Formula $\bar{\tau_{j}}$
\end_inset

 is the set of lower priority tasks than 
\begin_inset Formula $\tau_{i}$
\end_inset

 sharing objects with it. We follow the same definitions of 
\begin_inset Formula $\beta_{i},\, r_{max}$
\end_inset

, and 
\begin_inset Formula $RL(T_{i})$
\end_inset

 given in the proof of Claim (
\begin_inset CommandInset ref
LatexCommand ref
reference "gedf-lcm-lock-free_clm"

\end_inset

). Schedulability of G-RMA/LCM equals or exceeds the schedulability of retry-loop lock-free algorithm if: 
\begin_inset Formula \begin{eqnarray}
\frac{s_{max}}{r_{max}} & \le & \frac{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}\nonumber\\
 & + & \frac{2\sum_{\forall\tau_{i}}\frac{\sum_{\forall\bar{\tau_{j}}}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\Big(1-\alpha_{min}\Big)+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\left(1+\alpha_{max}\right)}{T_{i}}}\nonumber\\
 & & \label{eq:lcm rma lock-free comparison 1} 
\end{eqnarray}
\end_inset

 If 
\begin_inset Formula $p_{j}<p_{i},\,\therefore\,\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

, because the system assumes implicit deadline tasks and uses the G-RMA scheduler. Let 
\begin_inset Formula $\omega_{1}$
\end_inset

 be the size of 
\begin_inset Formula $\tau_i^*$
\end_inset

 and 
\begin_inset Formula $\omega_{2}$
\end_inset

 be the size of 
\begin_inset Formula $\bar{\tau_i}$
\end_inset

. 
\begin_inset Formula $\therefore$
\end_inset

 
\begin_inset Formula $\omega_{1}^{i}\ge 1$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

. Otherwise, there is no conflict with 
\begin_inset Formula $\tau_{i}$
\end_inset

. To find the maximum and minimum upper bounds for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, the following cases are considered: 
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow0$
\end_inset

 
\begin_inset Formula \begin{equation}
\therefore\frac{s_{max}}{r_{max}}\le1+\frac{\sum_{\forall\tau_{i}}\frac{2\omega_{2}^{i}-1}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{1+\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 3}
\end{equation}
\end_inset

 As the second term in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lcm rma lock-free comparison 3"

\end_inset

) is always positive (because 
\begin_inset Formula $\omega_{2}^{i}\ge1$
\end_inset

), the minimum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $1$
\end_inset

. To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approach its minimum value of 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $\omega_{1}^{i}\rightarrow0$
\end_inset

, and 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1$
\end_inset

 (the maximum and minimum values for 
\begin_inset Formula $\omega_{1}^{i}$
\end_inset

 and 
\begin_inset Formula $\omega_{2}^{i}$
\end_inset

, respectively. 
\begin_inset Formula $n$
\end_inset

 is number of tasks). Now: 
\begin_inset Formula \[
\therefore\frac{s_{max}}{r_{max}}\le\left(2n-2\right)
\]
\end_inset

 Of course, 
\begin_inset Formula $n$
\end_inset

 cannot be lower than 
\begin_inset Formula $2$
\end_inset

. Otherwise, there will be no conflicting tasks.
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow0,\,\alpha_{max}\rightarrow1$
\end_inset

 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{4\omega_{2}^{i}-1}{T_{i}}}{2\sum_{\forall\tau_{i}}\frac{1+2\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 4}
\end{equation}
\end_inset

 The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

. This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

. To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approach its minimum value 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1$
\end_inset

, and 
\begin_inset Formula $\omega_{1}^{i}\rightarrow0$
\end_inset

. Now: 
\begin_inset Formula \[
\frac{s_{max}}{r_{max}}\le2n-2
\]
\end_inset


\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow0$
\end_inset

 This case is rejected because 
\begin_inset Formula $\alpha_{max}$
\end_inset

 must be greater or equal to 
\begin_inset Formula $\alpha_{min}$
\end_inset

.
\end_layout

\begin_layout Itemize


\begin_inset Formula $\alpha_{min}\rightarrow1,\,\alpha_{max}\rightarrow1$
\end_inset

 
\begin_inset Formula \begin{equation}
\frac{s_{max}}{r_{max}}\le\frac{1}{2}+\frac{\sum_{\forall\tau_{i}}\frac{\omega_{2}^{i}}{T_{i}}}{\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)}{T_{i}}}\label{eq:lcm rma lock-free comparison 5}
\end{equation}
\end_inset

 The minimum upper bound for 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is 
\begin_inset Formula $0.5$
\end_inset

. This can happen when 
\begin_inset Formula $T_{i}\gg T_{j}$
\end_inset

. To get the maximum upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

, let 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil $
\end_inset

 approach its minimum value 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $\omega_{2}^{i}\rightarrow n-1,\,\omega_{1}^{i}\rightarrow0$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%BR: Again, you may need an "and". 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Now: 
\begin_inset Formula \[
\frac{s_{max}}{r_{max}}\rightarrow\infty
\]
\end_inset


\end_layout

\begin_layout Standard

From the previous cases, we can derive that the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 extends from 
\begin_inset Formula $0.5$
\end_inset

 to large values. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Section

Conclusions
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:conclusions_lcm"

\end_inset


\end_layout

\begin_layout Standard

In ECM and RCM, a task incurs at most 
\begin_inset Formula $2s_{max}$
\end_inset

 retry cost for each of its atomic section due to conflict with another task's atomic section. With LCM, this retry cost is reduced to 
\begin_inset Formula $(1+\alpha_{max})s_{max}$
\end_inset

 for each aborted atomic section. In ECM and RCM, tasks do not retry due to lower priority tasks, whereas in LCM, they do so. In G-EDF/LCM, retry due to a lower priority job is encountered only from a task 
\begin_inset Formula $\tau_{j}$
\end_inset

's last job instance during 
\begin_inset Formula $\tau_{i}$
\end_inset

's period. This is not the case with G-RMA/LCM, because, each higher priority task can be aborted and retried by any job instance of lower priority tasks. Schedulability of G-EDF/LCM and G-RMA/LCM is better or equal to ECM and RCM, respectively, by proper choices for 
\begin_inset Formula $\alpha_{min}$
\end_inset

 and 
\begin_inset Formula $\alpha_{max}$
\end_inset

. Schedulability of G-EDF/LCM is better than retry-loop lock-free synchronization for G-EDF if the upper bound on 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is between 0.5 and 2, which is higher than that achieved by ECM. G-RMA/LCM achieves higher schedulability than retry-loop lock-free synchronization if 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 is not less than 0.5. For high values of 
\begin_inset Formula $\alpha$
\end_inset

 in G-RMA/LCM, 
\begin_inset Formula $s_{max}/r_{max}$
\end_inset

 can extend to large values.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

PNF
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 5. PNF 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

We consider software transactional memory (STM) concurrency control for multicore real-time software, and present a novel contention manager (CM) for resolving transactional conflicts, called Priority contention manager with Negative values and First access (PNF). We upper bound transactional retries and response times under PNF, when used with G-EDF and G-RMA schedulers. We identify the conditions under which PNF outperforms previous real-time STM CMs and lock-free synchronization. Our work reveals that G-EDF/PNF and G-RMA/PNF have shorter or comparable retry costs and response times than other synchronization techniques.
\end_layout

\begin_layout Section

ECM and RCM: Overview and Limitations
\begin_inset CommandInset label
LatexCommand label
name "probelm description"

\end_inset


\end_layout

\begin_layout Standard

ECM and RCM
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 use dynamic and fixed priorities, respectively, to resolve transactional conflicts. ECM is used with the G-EDF scheduler, and allows the transaction whose job has the earliest absolute deadline to commit first
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "6045438"

\end_inset

. RCM is used with the G-RMA scheduler, and allows the transaction whose job has the shortest relative deadline to commit first.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: I wonder whether it would be useful for Systor reviewers to know about the retry upper bounds of ECM and RCM. You can simply state those theorems here: "Retry costs under ECM is bounded in~
\backslash
cite{stmconcurrencycontrol:emsoft11} as follows:"
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Now state the theorem with a citation: "Theorem 1 (from [])..."
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: (no need to provide the proof). Also, your notations also carry over and have been defined in this paper.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Now repeat for RCM's bound. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

As mentioned before, 
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 assumes that each transaction accesses only one object. This assumption simplifies the retry cost (Claims 2 and 3 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

) and response time analysis (Sections 4 and 5 in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

). Besides, it enables a one-to-one comparison with retry-loop lock-free synchronization in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. With multiple objects per transaction, 
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 will introduce transitive retry, which we illustrate with an example.
\end_layout

\begin_layout Standard


\series bold
Example 1.
\series default
 Consider three atomic sections 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

, and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 belonging to jobs 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

,
\begin_inset Formula $\tau_{2}^{y}$
\end_inset

, and 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

, with priorities 
\begin_inset Formula $p_{3}^{z}>p_{2}^{y}>p_{1}^{x}$
\end_inset

, respectively. Assume that 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 share objects, 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 share objects. 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 and 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 do not share objects. 
\begin_inset Formula $s_{3}^{z}$
\end_inset

 can cause 
\begin_inset Formula $s_{2}^{y}$
\end_inset

 to retry, which in turn will cause 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 to retry. This means that 
\begin_inset Formula $s_{1}^{x}$
\end_inset

 may retry transitively because of 
\begin_inset Formula $s_{3}^{z}$
\end_inset

, which will increase the retry cost of 
\begin_inset Formula $s_{1}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard

Assume another atomic section 
\begin_inset Formula $s_4^f$
\end_inset

 is introduced. Priority of 
\begin_inset Formula $s_4^f$
\end_inset

 is higher than priority of 
\begin_inset Formula $s_3^z$
\end_inset

. 
\begin_inset Formula $s_4^f$
\end_inset

 shares objects only with 
\begin_inset Formula $s_3^z$
\end_inset

. Thus, 
\begin_inset Formula $s_4^f$
\end_inset

 can make 
\begin_inset Formula $s_3^z$
\end_inset

 to retry, which in turn will make 
\begin_inset Formula $s_2^y$
\end_inset

 to retry, and finally, 
\begin_inset Formula $s_1^x$
\end_inset

 to retry. Thus, transitive retry will move from 
\begin_inset Formula $s_{4}^{f}$
\end_inset

 to 
\begin_inset Formula $s_{1}^{x}$
\end_inset

, increasing the retry cost of 
\begin_inset Formula $s_{1}^{x}$
\end_inset

. The situation gets worse as more tasks of higher priorities are added, where each task shares objects with its immediate lower priority task. 
\begin_inset Formula $\tau_{3}^{z}$
\end_inset

 may have atomic sections that share objects with 
\begin_inset Formula $\tau_{1}^{x}$
\end_inset

, but this will not prevent the effect of transitive retry due to 
\begin_inset Formula $s_{1}^{x}$
\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{mydef}
\end_layout

\end_inset

 
\series bold
Transitive Retry:
\series default
 A transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 suffers from transitive retry when it conflicts with a higher priority transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn conflicts with a higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, but 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Still, when 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 retries due to 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 also retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

. Thus, the effect of the higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is transitively moved to the lower priority transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, even when they do not conflict on common objects. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{mydef}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "ecm-rcm-transitive-retry"

\end_inset

 ECM and RCM suffer from transitive retry for multi-object transactions. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 ECM and RCM depend on priorities to resolve conflicts between transactions. Thus, lower priority transaction must always be aborted for a conflicting higher priority transaction. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Therefore, the analysis in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 must extend the set of objects that can cause an atomic section of a lower priority job to retry. This can be done by initializing the set of conflicting objects, 
\begin_inset Formula $\gamma_i$
\end_inset

, to all objects accessed by all transactions of 
\begin_inset Formula $\tau_i$
\end_inset

. We then cycle through all transactions belonging to all other higher priority tasks. Each transaction 
\begin_inset Formula $s_j^l$
\end_inset

 that accesses at least one of the objects in 
\begin_inset Formula $\gamma_i$
\end_inset

 adds all other objects accessed by 
\begin_inset Formula $s_j^l$
\end_inset

 to 
\begin_inset Formula $\gamma_i$
\end_inset

. The loop over all higher priority tasks is repeated, each time with the new 
\begin_inset Formula $\gamma_i$
\end_inset

, until there are no more transactions accessing any object in 
\begin_inset Formula $\gamma_i$
\end_inset


\begin_inset Foot
status collapsed


\begin_layout Standard

However, note that, this solution may over-extend the set of conflicting objects, and may even contain all objects accessed by all tasks.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

In addition to the 
\emph on
transitive retry
\emph default
 problem, retrying higher priority transactions can prevent lower priority tasks from running. This happens when all processors are busy with higher priority jobs. When a transaction retries, the processor time is wasted. Thus, it would be better to give the processor to some other task.
\end_layout

\begin_layout Standard

Essentially, what we present is a new contention manager that avoids the effect of transitive retry. We call it, Priority contention manager with Negative values and First access (or P-N-F). P-N-F also tries to enhance processor utilization. This is done by allocating processors to jobs with non-retrying transactions. P-N-F is described in detail in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F"

\end_inset

.
\end_layout

\begin_layout Section

The P-N-F Contention Manager
\begin_inset CommandInset label
LatexCommand label
name "P-N-F"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float algorithm
wide false
sideways false
status open


\begin_layout Standard


\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
LinesNumbered
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
KwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\shape italic
Executing Transaction:
\shape default
 is one that cannot be aborted by any other transaction, nor preempted by a higher priority task
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\shape italic

\begin_inset Formula $m$
\end_inset

-set:
\shape default
 
\begin_inset Formula $m$
\end_inset

-length set that contains only non-conflicting executing transactions
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\shape italic

\begin_inset Formula $n$
\end_inset

-set:
\shape default
 
\begin_inset Formula $n$
\end_inset

-length set that contains retrying transactions for 
\begin_inset Formula $n$
\end_inset

 tasks in non-increasing order of priority
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\shape italic
n(z):
\shape default
 transaction at index 
\begin_inset Formula $z$
\end_inset

 of the 
\begin_inset Formula $n$
\end_inset

-set
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $s_i^k$
\end_inset

: a newly released transaction
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $s_j^l$
\end_inset

: one of the executing transactions
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
KwResult
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

atomic sections that will commit
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
eIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_i^k$
\end_inset

 does not conflict with any executing transaction
\begin_inset CommandInset label
LatexCommand label
name "s_i^k true"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 Assign 
\begin_inset Formula $s_i^k$
\end_inset

 as an executing transaction
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Add 
\begin_inset Formula $s_i^k$
\end_inset

 to the 
\begin_inset Formula $m$
\end_inset

-set
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Select 
\begin_inset Formula $s_i^k$
\end_inset

 to commit 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 Add 
\begin_inset Formula $s_i^k$
\end_inset

 to the 
\begin_inset Formula $n$
\end_inset

-set according to its priority
\begin_inset CommandInset label
LatexCommand label
name "move to n"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Assign temporary priority -1 to the job that owns 
\begin_inset Formula $s_i^k$
\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "priority to -1"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Select transaction(s) conflicting with 
\begin_inset Formula $s_i^k$
\end_inset

 for commit
\begin_inset CommandInset label
LatexCommand label
name "s_i^k commit"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $s_j^l$
\end_inset

 commits
\begin_inset CommandInset label
LatexCommand label
name "s_j^l commits"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

z=1 to size of n-set
\begin_inset CommandInset label
LatexCommand label
name "traverse n-set"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

n(z) does not conflict with any executing transaction
\begin_inset CommandInset label
LatexCommand label
name "n(z) no conflict"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

processor available
\begin_inset CommandInset label
LatexCommand label
name "processor available"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

 Restore priority of task owning n(z)
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Assign n(z) as executing transaction
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Add n(z) to m-set
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 Select n(z) for commit
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 move to the next n(z)
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

\size footnotesize

P-N-F Algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize


\begin_inset CommandInset label
LatexCommand label
name "P-N-F-algorithm"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-algorithm"

\end_inset

 describes P-N-F. It manages two sets. The first is the 
\begin_inset Formula $m$
\end_inset

-set, which contains at most 
\begin_inset Formula $m$
\end_inset

 non-conflicting transactions, where 
\begin_inset Formula $m$
\end_inset

 is the number of processors, as there cannot be more than 
\begin_inset Formula $m$
\end_inset

 executing transactions (or generally, 
\begin_inset Formula $m$
\end_inset

 executing jobs) at the same time. When a transaction is entered in the 
\begin_inset Formula $m$
\end_inset

-set, it executes non-preemptively and no other transaction can abort it. A transaction in the 
\begin_inset Formula $m$
\end_inset

-set is called an 
\emph on
executing transaction
\emph default
. This means that, when a transaction is executing before the arrival of higher priority conflicting transactions, then the one that started executing first will be committed (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "s_i^k commit"

\end_inset

) (hence the word 
\begin_inset Quotes eld
\end_inset

First
\begin_inset Quotes erd
\end_inset

 in the algorithm's name).
\end_layout

\begin_layout Standard

The second set is the 
\begin_inset Formula $n$
\end_inset

-set, which holds the transactions that are retrying because of a conflict with one or more of the executing transactions (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "move to n"

\end_inset

), where 
\begin_inset Formula $n$
\end_inset

 stands for the number of tasks in the system. It also holds transactions that cannot currently execute, because processors are busy, either due to processing 
\emph on
executing transactions
\emph default
 and/or higher priority jobs. Any transaction in the 
\begin_inset Formula $n$
\end_inset

-set is assigned a temporal priority of -1 (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "priority to -1"

\end_inset

) (hence the word 
\begin_inset Quotes eld
\end_inset

Negative
\begin_inset Quotes erd
\end_inset

 in the algorithm's name). A negative priority is considered smaller than any normal priority, and a transaction continues to hold this negative priority until it is moved to the 
\begin_inset Formula $m$
\end_inset

-set, where it is restored its normal priority.
\end_layout

\begin_layout Standard

A job holding a transaction in the 
\begin_inset Formula $n$
\end_inset

-set can be preempted by any other job with normal priority, even if that normal priority job does not have transactions conflicting with the preempted job. Hence, this set is of length 
\begin_inset Formula $n$
\end_inset

, as there can be at most 
\begin_inset Formula $n$
\end_inset

 jobs in the system at the same time. Transactions in the 
\begin_inset Formula $n$
\end_inset

-set whose jobs have been preempted are called 
\emph on
preempted transactions
\emph default
. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%BR: From here on, there is no need to italicize  
\backslash
emph{preempted transactions} and 
\backslash
emph{executing transactions}. (First time is okay.) Remove all such emphasis from here. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

The 
\begin_inset Formula $n$
\end_inset

-set list keeps track of 
\emph on
preempted transactions
\emph default
, because as it will be shown, 
\emph on
preempted transactions
\emph default
 are examined when any of the 
\emph on
executing transaction
\emph default
 commits. Then, one or more transactions are selected from the 
\begin_inset Formula $m$
\end_inset

-set to be 
\emph on
executing transactions
\emph default
. If a 
\emph on
preempted transaction
\emph default
 is selected as an 
\emph on
executing transaction
\emph default
, then the task that owns the 
\emph on
preempted transaction
\emph default
 regains its priority. Thus, an aborted transaction can preempt the job which previously preempted it when the transaction was in the 
\begin_inset Formula $n$
\end_inset

-set.
\end_layout

\begin_layout Standard

When a new transaction is released, and it does not conflict with any of the 
\emph on
executing transactions
\emph default
 (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "s_i^k true"

\end_inset

), then it will allocate a slot in the 
\begin_inset Formula $m$
\end_inset

-set and becomes an 
\emph on
executing transaction
\emph default
 itself. When this transaction is released (which means that its containing task is already allocated to a processor), it will be able to access a processor immediately. This new transaction may have a conflict with any of the transactions in the 
\begin_inset Formula $n$
\end_inset

-set. However, since transactions in the 
\begin_inset Formula $n$
\end_inset

-set have priorities of -1, they cannot prevent this new transaction from executing if it does not conflict with any of the 
\emph on
executing transactions
\emph default
.
\end_layout

\begin_layout Standard

When one of the 
\emph on
executing transactions
\emph default
 commits (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "s_j^l commits"

\end_inset

), it is time to select one of the 
\begin_inset Formula $n$
\end_inset

-set transactions to commit. The 
\begin_inset Formula $n$
\end_inset

-set is traversed from the highest priority transaction to the lowest priority (where priority here refers to the original priority of the transactions, and not -1) (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "traverse n-set"

\end_inset

).
\end_layout

\begin_layout Standard

If an examined transaction in the 
\begin_inset Formula $n$
\end_inset

-set, 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, does not conflict with any 
\emph on
executing transaction
\emph default
 (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "n(z) no conflict"

\end_inset

), and there is an available processor for it (Step
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "processor available"

\end_inset

) (where 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

 means either an idle processor, or one that is executing a job of lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

), then 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 is moved from the 
\begin_inset Formula $n$
\end_inset

-set to the 
\begin_inset Formula $m$
\end_inset

-set, as an 
\emph on
executing transaction
\emph default
 and restored its original priority.
\end_layout

\begin_layout Standard

If 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 is added to the 
\begin_inset Formula $m$
\end_inset

-set, the new 
\begin_inset Formula $m$
\end_inset

-set is used to compare with other transactions in the 
\begin_inset Formula $n$
\end_inset

-set with lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

. Hence, if one of the transactions in the 
\begin_inset Formula $n$
\end_inset

-set, 
\begin_inset Formula $s_{d}^{g}$
\end_inset

, is of lower priority than 
\begin_inset Formula $s_{h}^{b}$
\end_inset

 and conflicts with 
\begin_inset Formula $s_{h}^{b}$
\end_inset

, it will remain in the 
\begin_inset Formula $n$
\end_inset

-set.
\end_layout

\begin_layout Standard

The choice of the new transaction from the 
\begin_inset Formula $n$
\end_inset

-set depends on the original priority of transactions (hence the word 
\begin_inset Quotes eld
\end_inset

PCM
\begin_inset Quotes erd
\end_inset

 in the name of the algorithm). Thus, the algorithm avoids interrupting an already executing transaction to reduce its retry cost. In the meanwhile, it tries to avoid delaying the highest priority transaction in the 
\begin_inset Formula $n$
\end_inset

-set when it is time to select a new one to commit, even if the highest priority transaction arrives after other lower priority transactions in the 
\begin_inset Formula $n$
\end_inset

-set.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: How about a subsection here called "Illustrative Example", where you show how P-N-F works for an example task set? Use a small task set with 3-4 tasks, etc. That will significantly help the reviewers. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Properties
\begin_inset CommandInset label
LatexCommand label
name "pnf properties sec"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "P-N-F-transitive-retry"

\end_inset

 Transactions scheduled under P-N-F do not suffer from transitive retry. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The proof is by contradiction. Assume that a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is retrying because of a higher priority transaction 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which in turn is retrying because of another higher priority transaction 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Assume that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict, yet, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Note that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot exit together in the 
\begin_inset Formula $m$
\end_inset

-set as they have common objects. But they both can exist in the 
\begin_inset Formula $n$
\end_inset

-set, as they both can conflict with other 
\emph on
executing transactions
\emph default
. We have three cases:
\end_layout

\begin_layout Standard


\shape italic
Case 1:
\shape default
 Assume that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an 
\emph on
executing transaction
\emph default
. This means that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is in the 
\begin_inset Formula $n$
\end_inset

-set. When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, by the definition of P-N-F, it will be compared with the 
\begin_inset Formula $m$
\end_inset

-set, which contains 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Now, it will be found that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Also, by the definition of P-N-F, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared with transactions in the 
\begin_inset Formula $n$
\end_inset

-set. When it newly arrives, priorities of 
\begin_inset Formula $n$
\end_inset

-set transactions are lower than any normal priority. Therefore, as 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with any other executing transaction, it joins the 
\begin_inset Formula $m$
\end_inset

-set and becomes an 
\emph on
executing transaction
\emph default
. This contradicts the assumption that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

.
\end_layout

\begin_layout Standard


\shape italic
Case 2:
\shape default
 Assume that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is in the 
\begin_inset Formula $n$
\end_inset

-set, while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is an executing transaction. When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, it will conflict with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 and joins the 
\begin_inset Formula $n$
\end_inset

-set. Now, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 retries due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, and not 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. When 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits, the 
\begin_inset Formula $n$
\end_inset

-set is traversed from the highest priority transaction to the lowest one: if 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 does not conflict with any other executing transaction and there are available processors, 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 becomes an executing transaction. When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is compared with the 
\begin_inset Formula $m$
\end_inset

-set, it is found that it does not conflict with 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. Additionally, if it also does not conflict with any other executing transaction and there are available processors, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes an executing transaction. This means that 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 are executing concurrently, which violates the assumption of transitive retry.
\end_layout

\begin_layout Standard


\shape italic
Case 3:
\shape default
 Assume that 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 both exist in the 
\begin_inset Formula $n$
\end_inset

-set. When 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives, it is compared with the 
\begin_inset Formula $m$
\end_inset

-set. If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 does not conflict with any executing transactions and there are available processors, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes an executing transaction. Even though 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 has common objects with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is not compared with 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, which is in the 
\begin_inset Formula $n$
\end_inset

-set. If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 joins the 
\begin_inset Formula $n$
\end_inset

-set, it is because, it conflicts with one or more executing transactions, not because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, which violates the transitive retry assumption. If the three transactions 
\begin_inset Formula $s_i^k$
\end_inset

, 
\begin_inset Formula $s_j^l$
\end_inset

 and 
\begin_inset Formula $s_z^h$
\end_inset

 exist in the 
\begin_inset Formula $n$
\end_inset

-set, and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is chosen as a new executing transaction, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 remains in the 
\begin_inset Formula $n$
\end_inset

-set. This leads to Case 1. If 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is chosen, because 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 conflicts with another executing transaction and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 does not, then this leads to Case 2. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "first-access"

\end_inset

 The 
\emph on
first access
\emph default
 property of P-N-F is important to avoid increased retry cost of transactions suffering from transitive retry. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: This is badly worded! A claim should be quantitative or at least stating that something won't happen (e.g., "X protocol prevents deadlocks"). Saying that something is important as a claim doesn't make any sense. Reword (e.g., "The 
\backslash
emph{first access} property of P-N-F bounds the transitive retry cost of transactions.")
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The proof is by contradiction. Assume that the retry cost of transactions in the absence of the first access property is the same as when first access exists. Now, assume that P-N-F is devoid of the first access property. This means that executing transactions can be aborted.
\end_layout

\begin_layout Standard

Assume three transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

, and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

, where 
\begin_inset Formula $s_{z}^{h}$
\end_inset

's priority is higher than 
\begin_inset Formula $s_{j}^{l}$
\end_inset

's priority, and 
\begin_inset Formula $s_j^l$
\end_inset

's priority is higher than 
\begin_inset Formula $s_{i}^{k}$
\end_inset

's priority. Assume that 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 conflicts with both 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 do not conflict together. If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 arrives while 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 is an 
\emph on
executing transaction
\emph default
 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 exists in the 
\begin_inset Formula $n$
\end_inset

-set, then 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 becomes an 
\emph on
executing transaction
\emph default
 itself while 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is retrying. If 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 did not commit at least when 
\begin_inset Formula $s_{z}^{h}$
\end_inset

 commits, then 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 becomes an executing transaction. Due to the lack of the first access property, 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 will cause 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 to retry. So, the retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 will be 
\begin_inset Formula $len(s_{z}^{h}+s_{j}^{l})$
\end_inset

. This retry cost for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 is the same if it had been transitively retrying because of 
\begin_inset Formula $s_{z}^{h}$
\end_inset

. This contradicts the first assumption. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
begin{clm}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%P-N-F handles multi-object transactions better than ECM and RCM.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
end{clm}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
begin{proof}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: I suggest not stating this as a claim, as it is quite straightforward from the previous ones. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

From Claims 
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-transitive-retry"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "first-access"

\end_inset

, P-N-F does not increase the retry cost of multi-object transactions. However, this is not the case for ECM and RCM as shown by Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "ecm-rcm-transitive-retry"

\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%Claim follows.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
end{proof}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "higher retry does not affect response"

\end_inset

 Under P-N-F, any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is not affected by the retry cost in any other job 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 As explained in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-algorithm"

\end_inset

, P-N-F assigns a temporary priority of -1 to any job that includes a retrying transaction. So, retrying transactions have lower priority than any other normal priority. When 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is released and 
\begin_inset Formula $\tau_j^l$
\end_inset

 has a retrying transaction, 
\begin_inset Formula $\tau_i^x$
\end_inset

 will have a higher priority than 
\begin_inset Formula $\tau_j^l$
\end_inset

. Thus, 
\begin_inset Formula $\tau_i^x$
\end_inset

 can run on any available processor while 
\begin_inset Formula $\tau_j^l$
\end_inset

 is retrying one of its transactions. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Section

Retry Cost under P-N-F
\begin_inset CommandInset label
LatexCommand label
name "rc pnf sec"

\end_inset


\end_layout

\begin_layout Standard

We now derive an upper bound on the retry cost of any job 
\begin_inset Formula $\tau_i^x$
\end_inset

 under P-N-F during an interval 
\begin_inset Formula $L\le T_i$
\end_inset

. Since all tasks are sporadic (i.e., each task 
\begin_inset Formula $\tau_i$
\end_inset

 has a minimum period 
\begin_inset Formula $T_i$
\end_inset

), 
\begin_inset Formula $T_i$
\end_inset

 is the maximum study interval for each task 
\begin_inset Formula $\tau_i$
\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "two transactions retry cost P-N-F"

\end_inset

 Assume two conflicting transactions 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

. Under P-N-F, the maximum retry cost suffered by 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 due to 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 is 
\begin_inset Formula $len(s_{j}^{l})$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 By P-N-F's definition, 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 cannot have started before 
\begin_inset Formula $s_{j}^{l}$
\end_inset

. Otherwise, 
\begin_inset Formula $s_i^k$
\end_inset

 would have been an 
\emph on
executing transaction
\emph default
 and 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 cannot abort it. So, the earliest release time for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 would have been just after 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 starts execution. Then, 
\begin_inset Formula $s_i^k$
\end_inset

 would have to wait until 
\begin_inset Formula $s_{j}^{l}$
\end_inset

 commits. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 The retry cost for any job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to conflicts between its transactions and transactions of other jobs under P-N-F during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
RC(L)\le\sum_{\tau_{j}\in\gamma_{i}}\left(\sum_{\theta\in\theta_{i}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{l}(\theta)}}len\left(\bar{s_{j}^{l}(\theta)}\right)\right)\right)\label{rc-P-N-F}
\end{equation}
\end_inset

 where 
\begin_inset Formula $\bar{s_{j}^{l}(\theta)}$
\end_inset

 is the same as 
\begin_inset Formula $s_{j}^{l}(\theta)$
\end_inset

 except for the following difference: if 
\begin_inset Formula $\bar{s_{j}^{l}}$
\end_inset

 accesses multiple objects in 
\begin_inset Formula $\theta_{i}$
\end_inset

, then 
\begin_inset Formula $\bar{s_{j}^{l}}$
\end_inset

 is included only once in the last summation (i.e., 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 is not repeated for each shared object with 
\begin_inset Formula $s_i^k$
\end_inset

). 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Consider a transaction 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 belonging to job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. Under P-N-F, higher priority transactions than 
\begin_inset Formula $s_i^k$
\end_inset

 can become 
\emph on
executing transactions
\emph default
 before 
\begin_inset Formula $s_i^k$
\end_inset

. A lower priority transaction 
\begin_inset Formula $s_v^f$
\end_inset

 can also become an 
\emph on
executing transaction
\emph default
 before 
\begin_inset Formula $s_i^k$
\end_inset

. This happens when 
\begin_inset Formula $s_i^k$
\end_inset

 conflicts with any 
\emph on
executing transaction
\emph default
 while 
\begin_inset Formula $s_v^f$
\end_inset

 does not. The worst case scenario for 
\begin_inset Formula $s_{i}^{k}$
\end_inset

 occurs when 
\begin_inset Formula $s_i^k$
\end_inset

 has to wait in the 
\begin_inset Formula $n$
\end_inset

-set, while all other conflicting transactions with 
\begin_inset Formula $s_i^k$
\end_inset

 are chosen to be 
\emph on
executing transactions
\emph default
. Let 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 accesses multiple objects in 
\begin_inset Formula $\theta_i$
\end_inset

. If 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 is an 
\emph on
executing transaction
\emph default
, then 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 will not repeat itself for each object it accesses. Besides, 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 will finish before 
\begin_inset Formula $s_i^k$
\end_inset

 starts execution. Consequently, 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 will not conflict with 
\begin_inset Formula $s_i^{k+1}$
\end_inset

. This means that an 
\emph on
executing transaction
\emph default
 can force no more than one transaction in a given job to retry. This is why 
\begin_inset Formula $\bar{s_j^l}$
\end_inset

 is included only once in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) for all shared objects with 
\begin_inset Formula $s_i^k$
\end_inset

.
\end_layout

\begin_layout Standard

The maximum number of jobs of any task 
\begin_inset Formula $\tau_{j}$
\end_inset

 that can interfere with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during interval 
\begin_inset Formula $L$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{j}}\right\rceil +1$
\end_inset

. From the previous observations and Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "two transactions retry cost P-N-F"

\end_inset

, Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "delay"

\end_inset

 The delay time for a 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "delay time" is somewhat awkward. How about "blocking time"? Use it consistently throughout the paper. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to lower priority jobs, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by: 
\begin_inset Formula \begin{equation}
D(\tau_{i}^{x})\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\left(\left(\left\lceil \frac{L}{T_{j}}\right\rceil +1\right)\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right)\right)\right\rfloor \label{P-N-F-delay}
\end{equation}
\end_inset

 where 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is the delay time 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "blocking time"? 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

suffered by 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 due to lower priority jobs. 
\begin_inset Formula $\bar{\tau_{j}^{l}}=\{\tau_{j}^{l}:p_{j}^{l}<p_{i}^{x}\}$
\end_inset

 and 
\begin_inset Formula $\ddot{s_{j}^{h}}=\{s_{j}^{h}:s_{j}^{h}\, does\, not\, conflict\, with\, any\, s_{i}^{k}\}$
\end_inset

. During this delay time, 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "blocking time"? 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

all processors are unavailable for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Under P-N-F, 
\emph on
executing transactions
\emph default
 are non-preemptive. So, lower priority 
\emph on
executing transactions
\emph default
 can delay a higher priority job 
\begin_inset Formula $\tau_i^x$
\end_inset

 if no other processors are available. Lower priority executing transactions can be conflicting or non-conflicting with any transaction in 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. They also can exist when 
\begin_inset Formula $\tau_i^x$
\end_inset

 is newly released, or after that. So, we have the following cases:
\end_layout

\begin_layout Standard


\emph on
Lower priority conflicting transactions after 
\begin_inset Formula $\tau_i^x$
\end_inset

 is released:
\emph default
 This case is already covered by the retry cost in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

).
\end_layout

\begin_layout Standard


\emph on
Lower priority conflicting transactions when 
\begin_inset Formula $\tau_i^x$
\end_inset

 is newly released:
\emph default
 Each lower priority conflicting transaction 
\begin_inset Formula $s_j^h$
\end_inset

 will delay 
\begin_inset Formula $\tau_i^x$
\end_inset

 for 
\begin_inset Formula $len(s_j^h)$
\end_inset

. The effect of 
\begin_inset Formula $s_j^h$
\end_inset

 is already covered by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

). Besides,
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) does not divide the retry cost by 
\begin_inset Formula $m$
\end_inset

 as done in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

). Thus, the worst case scenario requires inclusion of 
\begin_inset Formula $s_j^h$
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

), and not in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

).
\end_layout

\begin_layout Standard


\emph on
Lower priority non-conflicting transactions when 
\begin_inset Formula $\tau_i^x$
\end_inset

 is newly released:
\emph default
 
\begin_inset Formula $\tau_i^x$
\end_inset

 is delayed if there are no available processors for it. Otherwise, 
\begin_inset Formula $\tau_i^x$
\end_inset

 can run in parallel with these non-conflicting lower priority transactions. Each lower priority non-conflicting transaction 
\begin_inset Formula $\ddot{s_j^h}$
\end_inset

 will delay 
\begin_inset Formula $\tau_i^x$
\end_inset

 for 
\begin_inset Formula $len(\ddot{s_j^h})$
\end_inset

.
\end_layout

\begin_layout Standard


\emph on
Lower priority non-conflicting transactions after 
\begin_inset Formula $\tau_i^x$
\end_inset

 is released:
\emph default
 This situation can happen if 
\begin_inset Formula $\tau_i^x$
\end_inset

 is retrying one of its transactions 
\begin_inset Formula $s_i^k$
\end_inset

. So, 
\begin_inset Formula $\tau_i^x$
\end_inset

 is assigned a priority of -1. 
\begin_inset Formula $\tau_i^x$
\end_inset

 can be preempted by any other job. When 
\begin_inset Formula $s_i^k$
\end_inset

 is checked again to be an 
\emph on
executing transaction
\emph default
, all processors may be busy with lower priority non-conflicting transaction and/or higher priority jobs. Otherwise, 
\begin_inset Formula $\tau_i^x$
\end_inset

 can run in parallel with these lower priority non-conflicting transactions. The effect of higher priority jobs is included by Claims
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "response time ecm P-N-F"

\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%,
\backslash
ref{response rcm P-N-F}. 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: is there a need to cite the section? 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

Each lower priority non-conflicting transaction 
\begin_inset Formula $\ddot{s_j^h}$
\end_inset

 will delay 
\begin_inset Formula $\tau_i^x$
\end_inset

 for 
\begin_inset Formula $len(\ddot{s_j^h})$
\end_inset

.
\end_layout

\begin_layout Standard

From the previous cases, lower priority non-conflicting transactions act as if they were higher priority jobs interfering with 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. So, the delay time can be calculated by the interference workload given by Theorem 1 in 
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response time ecm P-N-F"

\end_inset

 Assume that P-N-F is used with the G-EDF scheduler. The response time of a job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

, is upper bounded by: 
\begin_inset Formula \begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D_{edf}(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}
\end_inset

 where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

). 
\begin_inset Formula $D_{edf}(\tau_{i}^{x})$
\end_inset

 is the same as 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 defined in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

). However, for G-EDF systems. 
\begin_inset Formula $D_{edf}(\tau_i^x)$
\end_inset

 is calculated as: 
\begin_inset Formula \begin{equation}
D_{edf}(\tau_{i}^{x})\le\left\lfloor \frac{1}{m}\sum_{\forall\bar{\tau_{j}^{l}}}\begin{cases}
0 & ,L\le T_{i}-T_{j}\\
\sum_{\forall\ddot{s_{j}^{h}}}len\left(\ddot{s_{j}^{h}}\right) & ,L>T_{i}-T_{j}
\end{cases}\right\rfloor \label{d-edf}
\end{equation}
\end_inset

 and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (3) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Response time for 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 is calculated by (3) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 with the addition of delay time 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: blocking time?
\end_layout

\begin_layout Standard


\end_layout

\end_inset

defined by Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

. G-EDF uses absolute deadlines for scheduling. This defines which jobs of the same task can be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

, and which will not. Any instance 
\begin_inset Formula $\tau_j^h$
\end_inset

, released between 
\begin_inset Formula $r_i^x - T_j$
\end_inset

 and 
\begin_inset Formula $d_i^x - T_j$
\end_inset

, will be of higher priority than 
\begin_inset Formula $\tau_i^x$
\end_inset

. Before 
\begin_inset Formula $r_i^x-T_j$
\end_inset

, 
\begin_inset Formula $\tau_j^h$
\end_inset

 would have finished before 
\begin_inset Formula $\tau_i^x$
\end_inset

 is released. After 
\begin_inset Formula $d_i^x-T_j$
\end_inset

, 
\begin_inset Formula $d_j^h$
\end_inset

 would be greater than 
\begin_inset Formula $d_i^x$
\end_inset

. Thus, 
\begin_inset Formula $\tau_j^h$
\end_inset

 will be of lower priority than 
\begin_inset Formula $\tau_i^x$
\end_inset

. So, during 
\begin_inset Formula $T_i$
\end_inset

, there can be only one instance 
\begin_inset Formula $\tau_j^h$
\end_inset

 of 
\begin_inset Formula $\tau_j$
\end_inset

 with lower priority than 
\begin_inset Formula $\tau_i^x$
\end_inset

. 
\begin_inset Formula $\tau_j^h$
\end_inset

 is released between 
\begin_inset Formula $d_i^x-T_j$
\end_inset

 and 
\begin_inset Formula $d_i^x$
\end_inset

. Consequently, during 
\begin_inset Formula $L<T_i-T_j$
\end_inset

, no existing instance of 
\begin_inset Formula $\tau_j$
\end_inset

 is of lower priority than 
\begin_inset Formula $\tau_i^x$
\end_inset

. Hence, 0 is used in the first case of
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

). But if 
\begin_inset Formula $L>T_i-T_j$
\end_inset

, there can be only one instance 
\begin_inset Formula $\tau_j^h$
\end_inset

 of 
\begin_inset Formula $\tau_j$
\end_inset

 with lower priority than 
\begin_inset Formula $\tau_i^x$
\end_inset

. Hence, 
\begin_inset Formula $\left\lceil\frac{L}{T_i}\right\rceil+1$
\end_inset

 in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

) is replaced with 1 in the second case in
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "d-edf"

\end_inset

). Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "response rcm P-N-F"

\end_inset

 Assume that P-N-F is used with the G-RMA scheduler. Response time of job 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
R_{i}^{up}=c_{i}+RC(L)+D(\tau_{i}^{x})+\left\lfloor \frac{1}{m}\sum_{\forall j\ne i,p_j>p_i}W_{ij}(R_{i}^{up})\right\rfloor 
\end{equation}
\end_inset

 where 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

), 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 is calculated by (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

), and 
\begin_inset Formula $W_{ij}(R_{i}^{up})$
\end_inset

 is calculated by (2) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The proof is the same as for Claim 
\begin_inset CommandInset ref
LatexCommand ref
reference "response time ecm P-N-F"

\end_inset

, except that G-RMA assigns static priorities for tasks. Hence, (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F-delay"

\end_inset

) can be used directly for calculating 
\begin_inset Formula $D(\tau_{i}^{x})$
\end_inset

 without modifications. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Section

Comparison between P-N-F and Other Synchronization Techniques
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:pnf-sched-comparison"

\end_inset


\end_layout

\begin_layout Standard

We now (formally) compare the schedulability of G-EDF (G-RMA) with P-N-F against other synchronization techniques including the ECM and RCM STM contention managers
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 and retry-loop lock-free synchronization
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11,key-5"

\end_inset

. Such a comparison will reveal when P-N-F outperforms others. Toward this, we compare the total utilization under G-EDF (G-RMA)/P-N-F, with that under the other synchronization methods. Inflated execution time of each method, which is the sum of the worst-case execution time of the task and its retry cost, is used in the utilization calculation of each task.
\end_layout

\begin_layout Standard

By Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "delay"

\end_inset

, no processor is available for 
\begin_inset Formula $\tau_i^x$
\end_inset

 during the delay time. As each processor is busy with some other job than 
\begin_inset Formula $\tau_i^x$
\end_inset

, 
\begin_inset Formula $D(\tau_i^x)$
\end_inset

 is not added to the inflated execution time of 
\begin_inset Formula $\tau_i^x$
\end_inset

. Hence, 
\begin_inset Formula $D(\tau_i^x)$
\end_inset

 is not added to the utilization calculation of 
\begin_inset Formula $\tau_i^x$
\end_inset

.
\end_layout

\begin_layout Standard

Let 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 denote the retry cost of any 
\begin_inset Formula $\tau_i^x$
\end_inset

 using the synchronization method 
\begin_inset Formula $A$
\end_inset

 during 
\begin_inset Formula $T_i$
\end_inset

. Let 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 denote the retry cost of any 
\begin_inset Formula $\tau_i^x$
\end_inset

 using synchronization method 
\begin_inset Formula $B$
\end_inset

 during 
\begin_inset Formula $T_i$
\end_inset

. Then, schedulability of 
\begin_inset Formula $A$
\end_inset

 is comparable to 
\begin_inset Formula $B$
\end_inset

 if: 
\begin_inset Formula \begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{c_{i}+RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{c_{i}+RC_{B}(T_{i})}{T_{i}}\nonumber \\
\therefore\sum_{\forall\tau_{i}}\frac{RC_{A}(T_{i})}{T_{i}} & \le & \sum_{\forall\tau_{i}}\frac{RC_{B}(T_{i})}{T_{i}}\label{utilization comparison}
\end{eqnarray}
\end_inset


\end_layout

\begin_layout Standard

As described in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "probelm description"

\end_inset

, the set of common objects needs to be extended under ECM and RCM. Toward this, we introduce a few additional notions. Let 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

 be an extended set of distinct objects that contains all objects in 
\begin_inset Formula $\theta_i$
\end_inset

. Thus, 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

 contains all objects accessed by 
\begin_inset Formula $\tau_i$
\end_inset

. 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

 can also contain other objects that can cause any transaction in 
\begin_inset Formula $\tau_i$
\end_inset

 to retry as explained in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "probelm description"

\end_inset

. Thus, 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

 may contain objects not accessed by 
\begin_inset Formula $\tau_i$
\end_inset

. 
\begin_inset Formula $\gamma_i^{ex}$
\end_inset

 is an extended set of tasks that access any object in 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

. Therefore, 
\begin_inset Formula $\gamma_i^{ex}$
\end_inset

 contains at least all tasks in 
\begin_inset Formula $\gamma_i$
\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

There are two sources of retry cost for any 
\begin_inset Formula $\tau_i^x$
\end_inset

 under ECM, RCM, and lock-free. First is due to conflict between 
\begin_inset Formula $\tau_i^x$
\end_inset

's transactions and transactions of other jobs. This is denoted as 
\begin_inset Formula $RC$
\end_inset

. Second is due to the preemption of any transaction in 
\begin_inset Formula $\tau_i^x$
\end_inset

 due to the release of a higher priority job 
\begin_inset Formula $\tau_j^h$
\end_inset

. This is denoted as 
\begin_inset Formula $RC_{re}$
\end_inset

. Retry due to the release of higher priority jobs do not occur under P-N-F, because 
\emph on
executing transactions
\emph default
 are non-preemptive. It is up to the implementation of the contention manager to safely avoid 
\begin_inset Formula $RC_{re}$
\end_inset

. Here, we assume that ECM and RCM do not avoid 
\begin_inset Formula $RC_{re}$
\end_inset

. Thus, we introduce 
\begin_inset Formula $RC_{re}$
\end_inset

 for ECM and RCM first before comparing P-N-F with other synchronization techniques.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "ecm rlease conflict"

\end_inset

 Under ECM, the total retry cost suffered by all transactions in any 
\begin_inset Formula $\tau_i^x$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_i$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
RC_{to}(L)=RC(L)+RC_{re}(L)
\label{total rc ecm eq}
\end{equation}
\end_inset

 where 
\begin_inset Formula $RC(L)$
\end_inset

 is the retry cost resulting from conflict between transactions in 
\begin_inset Formula $\tau_i^x$
\end_inset

 and transactions of other jobs. 
\begin_inset Formula $RC(L)$
\end_inset

 is calculated by (15) in
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol:emsoft11"

\end_inset

 with replacing 
\begin_inset Formula $\gamma_i$
\end_inset

 and 
\begin_inset Formula $\theta_i$
\end_inset

 with 
\begin_inset Formula $\gamma_i^{ex}$
\end_inset

 and 
\begin_inset Formula $\theta_i^{ex}$
\end_inset

, respectively. 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 is the retry cost resulting from the release of higher priority jobs, which preempt 
\begin_inset Formula $\tau_i^x$
\end_inset

. 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 is given by: 
\begin_inset Formula \begin{equation}
RC_{re}(L)=\sum_{\forall \tau_{j}\in\zeta_{i}}\begin{cases}
\left\lceil \frac{L}{T_{j}}\right\rceil s_{i_{max}} & ,L\le T_{i}-T_{j}\\\\
\left\lfloor \frac{T_{i}}{T_{j}}\right\rfloor s_{i_{max}} & ,L>T_{i}-T_{j}
\end{cases}\label{eq6}
\end{equation}
\end_inset

 where 
\begin_inset Formula $\zeta_i=\{\tau_j:\left(\tau_j \ne \tau_i\right)\wedge \left(D_j < D_i \right)\}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Two conditions must be satisfied for any 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 to be able to preempt 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 under G-EDF: 
\begin_inset Formula $r_{i}^{x}<r_{j}^{l}<d_{i}^{x}$
\end_inset

, and 
\begin_inset Formula $d_{j}^{l}\le d_{i}^{x}$
\end_inset

. Without the first condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 would have been already released before 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. Thus, 
\begin_inset Formula $\tau_j^l$
\end_inset

 will not preempt 
\begin_inset Formula $\tau_i^x$
\end_inset

. Without the second condition, 
\begin_inset Formula $\tau_{j}^{l}$
\end_inset

 will be of lower priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

 and will not preempt it. If 
\begin_inset Formula $D_{j} \ge D_{i}$
\end_inset

, then there will be at most one instance 
\begin_inset Formula $\tau_j^l$
\end_inset

 with higher priority than 
\begin_inset Formula $\tau_{i}^{x}$
\end_inset

. 
\begin_inset Formula $\tau_j^l$
\end_inset

 must have been released at most at 
\begin_inset Formula $r_i^x$
\end_inset

, which violates the first condition. The other instance 
\begin_inset Formula $\tau_j^{l+1}$
\end_inset

 would have an absolute deadline greater than 
\begin_inset Formula $d_i^x$
\end_inset

. This violates the second condition. Hence, only tasks with shorter relative deadline than 
\begin_inset Formula $D_{i}$
\end_inset

 are going to be considered. These jobs are grouped in 
\begin_inset Formula $\zeta_i$
\end_inset

.
\end_layout

\begin_layout Standard

The total number of released instances of 
\begin_inset Formula $\tau_{j}$
\end_inset

 during any interval 
\begin_inset Formula $L\le T_{i}$
\end_inset

 is 
\begin_inset Formula $\left\lceil \frac{L}{T_{i}}\right\rceil +1$
\end_inset

. The 
\begin_inset Quotes eld
\end_inset

carried-in" jobs (i.e., each job released before 
\begin_inset Formula $r_i^x$
\end_inset

 and has an absolute deadline before 
\begin_inset Formula $d_i^x$
\end_inset


\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

) are discarded as they violate the first condition. The 
\begin_inset Quotes eld
\end_inset

carried-out" jobs (i.e., each job released after 
\begin_inset Formula $r_i^x$
\end_inset

 and has an absolute deadline after 
\begin_inset Formula $d_i^x$
\end_inset


\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-2"

\end_inset

) are also discarded because they violate the second condition. Thus, the number of considered higher priority instances of 
\begin_inset Formula $\tau_j$
\end_inset

 during the interval 
\begin_inset Formula $L\le T_i-T_j$
\end_inset

 is 
\begin_inset Formula $\left\lceil\frac{L}{T_j}\right\rceil$
\end_inset

. The number of considered higher priority instances of 
\begin_inset Formula $\tau_j$
\end_inset

 during interval 
\begin_inset Formula $L> T_i-T_j$
\end_inset

 is 
\begin_inset Formula $\left\lfloor\frac{T_i}{T_j}\right\rfloor$
\end_inset

.
\end_layout

\begin_layout Standard

The worst 
\begin_inset Formula $RC_{re}$
\end_inset

 for 
\begin_inset Formula $\tau_i^x$
\end_inset

 occurs when 
\begin_inset Formula $\tau_i^x$
\end_inset

 is always interfered at the end of execution of its longest atomic section, 
\begin_inset Formula $s_{i_{max}}$
\end_inset

. 
\begin_inset Formula $\tau_i^x$
\end_inset

 will have to retry for 
\begin_inset Formula $len(s_{i_{max}})$
\end_inset

, as shown in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig8"

\end_inset

. The total retry cost suffered by 
\begin_inset Formula $\tau_i^x$
\end_inset

 is the combination of 
\begin_inset Formula $RC$
\end_inset

 and 
\begin_inset Formula $RC_{re}$
\end_inset

. Claim follows.
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename figures/figure8.eps
	scale 70

\end_inset


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig8"

\end_inset

Transactional retry due to release of higher priority tasks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "rcm rlease conflict"

\end_inset

 Under RCM, the total retry cost suffered by all transactions in any 
\begin_inset Formula $\tau_i^x$
\end_inset

 during an interval 
\begin_inset Formula $L\le T_i$
\end_inset

 is upper bounded by: 
\begin_inset Formula \begin{equation}
RC_{to}(L)=RC(L)+RC_{re}(L)
\label{total rc rcm eq}
\end{equation}
\end_inset

 where 
\begin_inset Formula $RC(L)$
\end_inset

 and 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 are defined in Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "ecm rlease conflict"

\end_inset

. 
\begin_inset Formula $RC_{re}(L)$
\end_inset

 is calculated by: 
\begin_inset Formula \begin{equation}
RC_{re}(L)=\sum_{\forall \tau_j \in \zeta_i^*}\left(\left\lceil\frac{L}{T_j}\right\rceil s_{i_{max}}\right)\label{eq21}
\end{equation}
\end_inset

 where 
\begin_inset Formula $\zeta_i^*=\{\tau_j:p_j > p_i \}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The proof is the same as that for Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "ecm rlease conflict"

\end_inset

, except that G-RMA uses static priority. Thus, the carried-out jobs will be considered in the interference with 
\begin_inset Formula $\tau_i^x$
\end_inset

. The carried-in jobs are still not considered because they are released before 
\begin_inset Formula $r_i^x$
\end_inset

. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lock free release"

\end_inset

 Consider retry-loop lock-free synchronization. Let 
\begin_inset Formula $r_{i_{max}}$
\end_inset

 be the maximum execution cost of a single iteration of any retry loop of 
\begin_inset Formula $\tau_i$
\end_inset

. 
\begin_inset Formula $RC_{re}$
\end_inset

 under G-EDF with retry-loop lock-free synchronization is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

), where 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 is replaced by 
\begin_inset Formula $r_{i_{max}}$
\end_inset

. 
\begin_inset Formula $RC_{re}$
\end_inset

 under G-RMA with retry-loop lock-free synchronization is calculated by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq21"

\end_inset

), where 
\begin_inset Formula $s_{i_{max}}$
\end_inset

 is replaced by 
\begin_inset Formula $r_{i_{max}}$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The interference pattern of higher priority jobs to lower priority jobs is the same in ECM and G-EDF with retry-loop lock-free synchronization. The pattern is also the same in RCM and G-RMA with retry-loop lock-free. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

P-N-F versus ECM
\begin_inset CommandInset label
LatexCommand label
name "pnf vs ecm sec"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "P-N-F ecf comaprison clm"

\end_inset

 The schedulability of P-N-F with G-EDF tends to be 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "tends to be" is weak. Why don't you say "is"?
\end_layout

\begin_layout Standard


\end_layout

\end_inset

 better or equal to the schedulability of ECM when conflicting atomic sections have equal lengths. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Substitue 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "total rc ecm eq"

\end_inset

), respectively. Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

, where 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

 is the set of objects not accessed directly by 
\begin_inset Formula $\tau_{i}$
\end_inset

 but can cause transactions in 
\begin_inset Formula $\tau_{i}$
\end_inset

 to retry due to transitive retry. Let 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

, where 
\begin_inset Formula $\gamma_{i}^{*}$
\end_inset

 is the set of tasks that access objects in 
\begin_inset Formula $\theta_{i}^{*}$
\end_inset

.
\end_layout

\begin_layout Standard

Let: 
\begin_inset Note Comment
status open

\begin_layout Standard


\begin_inset Formula \begin{eqnarray*}
g(\tau_{i}) & = & \left(\sum_{\forall\tau_{j}\in\gamma_{i}^{*}}\sum_{\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\\
& + & s_{max}^{*}(\theta)\right)\right)\right) + RC_{re}(T_{i})
\end{eqnarray*}
\end_inset

 
\end_layout

\end_inset


\begin_inset Formula \begin{eqnarray*}
g(\tau_{i}) & = & \Bigg(\sum_{\forall\tau_{j}\in\gamma_{i}^{*}}\sum_{\theta\in\theta_{i}^{*}}\Bigg(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\Big(\bar{s_{j}^{k}(\theta)}\\
 & + & s_{max}^{*}(\theta)\Big)\Bigg)\Bigg)+RC_{re}(T_{i})
\end{eqnarray*}
\end_inset

 where 
\begin_inset Formula $RC_{re}$
\end_inset

 is given by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq6"

\end_inset

). Let: 
\begin_inset Formula \begin{equation*}
\eta_{1}(\tau_{i})=\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)
\end{equation*}
\end_inset

 
\begin_inset Formula \begin{equation*}
\eta_{2}(\tau_{i})=\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)\right)
\end{equation*}
\end_inset

 and 
\begin_inset Formula \begin{equation*}
\eta_{3}(\tau_{i})=\sum_{\forall\tau_{j}\in\gamma_{i}}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil \sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)
\end{equation*}
\end_inset

 By substitution of 
\begin_inset Formula $g(\tau_{i})$
\end_inset

, 
\begin_inset Formula $\eta_1(\tau_i)$
\end_inset

, and 
\begin_inset Formula $\eta_2(\tau_i)$
\end_inset

, and subtraction of 
\begin_inset Formula $\sum_{\forall \tau_i} \frac{\eta_3(\tau_i)}{T_i}$
\end_inset

 from both sides of (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

), we get: 
\begin_inset Formula \begin{equation}
\sum_{\forall \tau_i} \frac{\eta_1(\tau_i)}{T_i} \le \sum_{\forall \tau_i} \frac{\eta_2(\tau_i)+g(\tau_i)}{T_i}
\label{P-N-F ecm comparison 2}
\end{equation}
\end_inset

 From (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F ecm comparison 2"

\end_inset

), we note that by keeping every 
\begin_inset Formula $len(\bar{s_{j}^{k}(\theta)})\le len(s_{max}^{j}(\theta))$
\end_inset

 for each 
\begin_inset Formula $\tau_{i}$
\end_inset

, 
\begin_inset Formula $\tau_{j}\in\gamma_{i}$
\end_inset

, and 
\begin_inset Formula $\theta\in\theta_{i}$
\end_inset

, (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F ecm comparison 2"

\end_inset

) holds. Because of the dynamic priority of G-EDF, 
\begin_inset Formula $s_{max}^{j}(\theta)$
\end_inset

 can belong to any task other than 
\begin_inset Formula $\tau_{j}$
\end_inset

. Assume four jobs 
\begin_inset Formula $\tau_a^b$
\end_inset

, 
\begin_inset Formula $\tau_c^d$
\end_inset

, 
\begin_inset Formula $\tau_e^f$
\end_inset

, and 
\begin_inset Formula $\tau_g^h$
\end_inset

 with a common object 
\begin_inset Formula $\theta$
\end_inset

. Let 
\begin_inset Formula $s_{max}(\theta)=s_{g_{max}}(\theta)$
\end_inset

. When 
\begin_inset Formula $\tau_a^b$
\end_inset

 is the checked 
\begin_inset Formula $\tau_i$
\end_inset

 by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F ecm comparison 2"

\end_inset

), any 
\begin_inset Formula $s_c^x(\theta)$
\end_inset

 and 
\begin_inset Formula $s_e^y(\theta)$
\end_inset

 will be less or equal to 
\begin_inset Formula $s_{g_{max}}(\theta)$
\end_inset

. But 
\begin_inset Formula $s_{e_{max}}(\theta)$
\end_inset

 should also be smaller or equal to either 
\begin_inset Formula $s_{a_{max}}(\theta)$
\end_inset

 or 
\begin_inset Formula $s_{c_{max}}(\theta)$
\end_inset

 or 
\begin_inset Formula $s_{g_{max}}(\theta)$
\end_inset

. Thus, there must be at least two equal maximum-length atomic sections in different tasks that access 
\begin_inset Formula $\theta$
\end_inset

. By generalizing the previous concept to every 
\begin_inset Formula $\tau_i$
\end_inset

, 
\begin_inset Formula $\tau_j \in \gamma_i$
\end_inset

, and 
\begin_inset Formula $\theta \in \theta_i$
\end_inset

, claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

P-N-F versus RCM
\begin_inset CommandInset label
LatexCommand label
name "pnf vs rcm sec"

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset

 The schedulability of P-N-F with G-RMA tends to be 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: "tends to be" is weak. Why don't you say "is"?
\end_layout

\begin_layout Standard


\end_layout

\end_inset

better or equal to the schedulability of RCM when a large number of tasks are heavily conflicting together. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 Let 
\begin_inset Formula $\theta_{i}^{ex}=\theta_{i}+\theta_{i}^{*}$
\end_inset

 and 
\begin_inset Formula $\gamma_{i}^{ex}=\gamma_{i}+\gamma_{i}^{*}$
\end_inset

, as defined in the proof of Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F ecf comaprison clm"

\end_inset

. Substitute 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "total rc rcm eq"

\end_inset

), respectively. Let 
\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset Formula \begin{eqnarray*}
g(\tau_{i}) & =RC_{re}(T_{i})+\Bigg( & \sum_{\forall\tau_{j}\in(\gamma_{i}^{*}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}^{*}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\times\\
 &  & \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\Bigg)
\end{eqnarray*}
\end_inset

 where 
\begin_inset Formula $RC_{re}$
\end_inset

 and 
\begin_inset Formula $\zeta_i^*$
\end_inset

 are defined by
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq21"

\end_inset

). Let 
\begin_inset Formula $\gamma_{i}=\zeta_{i}^{*}\cup\bar{\zeta_{i}}$
\end_inset

, where 
\begin_inset Formula $\bar{\zeta_{i}}=\left\{ \tau_{j}:\left(\tau_{j}\ne\tau_{i}\right)\wedge\left(p_{j}<p_{i}\right)\right\} $
\end_inset

, thus 
\begin_inset Formula $\zeta_{i}^{*}\cap\bar{\zeta_{i}}=\phi$
\end_inset

.
\end_layout

\begin_layout Standard

Let: 
\begin_inset Formula \begin{equation*}
\eta_{1}(\tau_{i})=\sum_{\forall\tau_{j}\in(\gamma_{i}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)
\end{equation*}
\end_inset

 
\begin_inset Formula \begin{equation*}
\eta_{2}(\tau_{i})=\sum_{\forall\tau_{j}\in(\gamma_{i}\cap\bar{\zeta_{i}})}\sum_{\forall\theta\in\theta_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)\right)
\end{equation*}
\end_inset

 and 
\begin_inset Formula \begin{eqnarray*}
\eta_{3}(\tau_{i}) & = & \sum_{\forall\tau_{j}\in(\gamma_{i}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}}\Bigg(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\times\\
 &  & \sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}+s_{max}^{j}(\theta)\right)\Bigg)
\end{eqnarray*}
\end_inset

 By substitution of 
\begin_inset Formula $g(\tau_i)$
\end_inset

, 
\begin_inset Formula $\eta_1(\tau_i)$
\end_inset

, 
\begin_inset Formula $\eta_2(\tau_i)$
\end_inset

, and 
\begin_inset Formula $\eta_3(\tau_i)$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

), we get: 
\begin_inset Formula \begin{equation}
\sum_{\forall\tau_{i}}\frac{\eta_{1}(\tau_{i})+\eta_{2}(\tau_{i})}{T_{i}}\le\sum_{\forall\tau_{i}}\frac{\eta_{3}(\tau_{i})+g(\tau_{i})}{T_{i}}
\label{P-N-F rcm comparison 3}
\end{equation}
\end_inset

 For implicit deadline tasks scheduled with 
\begin_inset ERT
status collapsed

\begin_layout Standard

%%BR: Better to say "When tasks with deadlines equal to periods are scheduled with.." (Systor may not know what is "implicit deadline tasks") 
\end_layout

\begin_layout Standard


\end_layout

\end_inset

G-RMA, 
\begin_inset Formula $T_{j}>T_{i}$
\end_inset

 if 
\begin_inset Formula $p_{j}<p_{i}$
\end_inset

. So, for each 
\begin_inset Formula $\tau_{j}\in\bar{\zeta_{i}}$
\end_inset

, 
\begin_inset Formula $\left\lceil \frac{T_{i}}{T_{j}}\right\rceil =1$
\end_inset

. Then: 
\begin_inset Formula \begin{equation}
\eta_{2}(\tau_{i})=2\sum_{\forall\tau_{j}\in(\gamma_{i}\cap\bar{\zeta_{i}})}\sum_{\forall\theta\in\theta_{i}}\sum_{\bar{\forall s_{j}^{k}(\theta)}}len\left(\bar{s_{j}^{k}(\theta)}\right)
\label{P-N-F rcm comparison 5}
\end{equation}
\end_inset

 Let: 
\begin_inset Formula \begin{equation*}
\eta_{4}(\tau_{i})=\sum_{\forall\tau_{j}\in(\gamma_{i}\cap\zeta_{i}^{*})}\sum_{\forall\theta\in\theta_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\sum_{\forall\bar{s_{j}^{k}(\theta)}}len\left(s_{max}^{j}(\theta)\right)
\end{equation*}
\end_inset

 By substitution of
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F rcm comparison 5"

\end_inset

) and subtraction of 
\begin_inset Formula $\sum_{\forall \tau_i} \frac{\eta_1 (\tau_i)}{T_i}$
\end_inset

 from both sides of
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F rcm comparison 3"

\end_inset

), we get: 
\begin_inset Formula \begin{equation}
2\sum_{\forall\tau_{i}}\frac{\eta_{2}(\tau_{i})}{T_{i}}\le\sum_{\forall\tau_{i}}\frac{\eta_{4}(\tau_{i})+g(\tau_{i})}{T_{i}}
\label{P-N-F rcm comparison 4}
\end{equation}
\end_inset

 From (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F rcm comparison 4"

\end_inset

), we note that when higher priority jobs increasingly conflict with lower priority jobs, (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F rcm comparison 4"

\end_inset

) tends to hold. This occurs when the number of conflicting tasks, their job instances, and their shared objects increases. When the number of shared objects among tasks increases, 
\begin_inset Formula $g(\tau_{i})$
\end_inset

 also increases. This allows (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F rcm comparison 4"

\end_inset

) to hold. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

P-N-F versus lock-free
\begin_inset CommandInset label
LatexCommand label
name "pnf vs lock free sec"

\end_inset


\end_layout

\begin_layout Standard

Retry-loop lock-free synchronization
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5,stmconcurrencycontrol:emsoft11"

\end_inset

 accesses only one object. Thus, the number of accessed objects per transaction in P-N-F is limited to one. This allows us to compare the schedulability of P-N-F with the retry-loop lock-free algorithm.
\end_layout

\begin_layout Standard


\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) is replaced with: 
\begin_inset Formula \begin{equation}
\sum_{\forall\tau_{j}\in\gamma_{i}}\Bigg(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}\Bigg)+RC_{re}(T_{i})
\label{lock-free rc}
\end{equation}
\end_inset

 where 
\begin_inset Formula $\beta_{i,j}$
\end_inset

 is the number of retry loops of 
\begin_inset Formula $\tau_{j}$
\end_inset

 that access the same object as accessed by some retry loop of 
\begin_inset Formula $\tau_{i}$
\end_inset


\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. 
\begin_inset Formula $r_{max}$
\end_inset

 is the maximum execution cost of a single iteration of any retry loop of any task
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. 
\begin_inset Formula $RC_{re}(T_i)$
\end_inset

 is defined in Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lock free release"

\end_inset

. Retry-loop lock-free synchronization does not depend on priorities of tasks. Thus,
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lock-free rc"

\end_inset

) applies for both G-EDF and G-RMA systems.
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{clm}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "P-N-F lock-free comparison"

\end_inset

 Let 
\begin_inset Formula $r_{max}$
\end_inset

 be the maximum execution cost of a single iteration of any retry loop of any task
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "key-5"

\end_inset

. Let 
\begin_inset Formula $s_{max}$
\end_inset

 be the maximum transaction length in all tasks. Assume that each transaction under P-N-F accesses only one object for once. The schedulability of P-N-F with either G-EDF or G-RMA scheduler is better or equal to the schedulability of retry-loop lock-free synchronization if 
\begin_inset Formula $s_{max}/r_{max}\le 1$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{clm}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{proof}
\end_layout

\end_inset

 The assumption in Claim
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F lock-free comparison"

\end_inset

 is made to enable a comparison between P-N-F and the retry-loop lock-free technique. Let 
\begin_inset Formula $RC_{A}(T_{i})$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) be replaced with (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) and 
\begin_inset Formula $RC_{B}(T_{i})$
\end_inset

 be replaced with (
\begin_inset CommandInset ref
LatexCommand ref
reference "lock-free rc"

\end_inset

). To simplify comparison, (
\begin_inset CommandInset ref
LatexCommand ref
reference "rc-P-N-F"

\end_inset

) is upper bounded by: 
\begin_inset Formula \begin{equation*}
RC(T_{i})=\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}^* s_{max}\right)
\end{equation*}
\end_inset

 where 
\begin_inset Formula $\beta_{i,j}^*$
\end_inset

 is the number of times transactions in 
\begin_inset Formula $\tau_j$
\end_inset

 accesses shared objects with 
\begin_inset Formula $
\tau_i$
\end_inset

. Thus, 
\begin_inset Formula $\beta_{i,j}^* = \beta_{i,j}$
\end_inset

. Thus, (
\begin_inset CommandInset ref
LatexCommand ref
reference "utilization comparison"

\end_inset

) will be: 
\begin_inset Formula \begin{eqnarray}
\sum_{\forall\tau_{i}}\frac{\sum_{\tau_{j}\in\gamma_{i}}\left(\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}s_{max}\right)}{T_{i}} & \le\nonumber \\
\sum_{\forall\tau_{i}}\frac{\sum_{\forall\tau_{j}\in\gamma_{i}}\left(\left\lceil \frac{T_{i}}{T_{j}}\right\rceil +1\right)\beta_{i,j}r_{max}+RC_{re}(\tau_i)}{T_{i}}\label{P-N-F lock-free comparison}
\end{eqnarray}
\end_inset

 From (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F lock-free comparison"

\end_inset

), we note that if 
\begin_inset Formula $s_{max}\le r_{max}$
\end_inset

, then (
\begin_inset CommandInset ref
LatexCommand ref
reference "P-N-F lock-free comparison"

\end_inset

) holds. Claim follows. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

Experiments
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 6. Experiments 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Having established LCM's retry and response time upper bounds, and the conditions under which it outperforms ECM, RCM, and lock-free synchronization, we now would like to understand how LCM's retry and response times in practice (i.e., on average) compare with that of competitor methods. Since this can only be understood experimentally, we implement LCM and the competitor methods and conduct experimental studies.
\end_layout

\begin_layout Section

Experimental Setup
\end_layout

\begin_layout Standard

We used the ChronOS real-time Linux kernel
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "dellinger2011chronos"

\end_inset

 and the RSTM library
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "marathe2006lowering"

\end_inset

. We modified RSTM to include implementations of ECM, RCM, G-EDF/LCM, and G-RMA/LCM contention managers, and modified ChronOS to include implementations of G-EDF and G-RMA schedulers.
\end_layout

\begin_layout Standard

For the retry-loop lock-free implementation, we used a loop that reads an object and attempts to write to the object using a compare-and-swap (CAS) instruction. The task retries until the CAS succeeds. 
\begin_inset ERT
status collapsed

\begin_layout Standard

%We call this lock-free operation, CAS-loop operation.
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

We use an 8 core, 2GHz AMD Opteron platform. The average time taken for one write operation by RSTM on any core is 0.0129653375
\begin_inset Formula $\mu s$
\end_inset

, and the average time taken by one CAS-loop operation on any core is 0.0292546250 
\begin_inset Formula $\mu s$
\end_inset

.
\end_layout

\begin_layout Standard

We used the periodic task set shown in Table
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

. Each task runs in its own thread and has a set of atomic sections. Atomic section properties are probabilistically controlled (for experimental evaluation) using three parameters: the maximum and minimum lengths of any atomic section within the task, and the total length of atomic sections within any task. All task atomic sections access the same object, and do write operations on the object (thus, contention is the highest).
\end_layout

\begin_layout Standard


\begin_inset Float table
wide false
sideways false
status open


\begin_layout Standard


\begin_inset Caption


\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "tab:Task-set-1"

\end_inset

Task sets. (a) 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(a)"

\end_inset

 Task set 1: 5-task set; 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(b)"

\end_inset

 (b) Task set 2: 10-task set; 
\begin_inset CommandInset label
LatexCommand label
name "tab:Task-sets-(c)"

\end_inset

 (c) Task set 3: 12-task set
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{}
\end_layout

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features>
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

(a)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $T_{i}(\mu s)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{1}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

150000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{2}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

227000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{3}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

410000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{4}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

3000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

299000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{5}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

5000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

500000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="3">
<features>
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

(b)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $T_{i}(\mu s)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{1}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

400000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

75241
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{2}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

750000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

69762
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{3}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1200000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

267122
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{4}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

69863
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{5}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

2400000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

152014
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{6}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

4000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

286301
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{7}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

7500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

493150
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{8}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

10000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

794520
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{9}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

15000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1212328
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{10}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

20000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1775342
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="3">
<features>
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

(c)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $T_{i}(\mu s)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $c_{i}(\mu s)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{1}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

400000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

58195
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{2}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

750000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

53963
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{3}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

206330
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{4}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1200000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

53968
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{5}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

117449
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{6}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

2400000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

221143
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{7}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

3000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

290428
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{8}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

4000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

83420
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{9}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

7500000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

380917
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{10}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

10000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

613700
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{11}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

15000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

936422
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $\tau_{12}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

20000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1371302
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

Results
\end_layout

\begin_layout Standard

Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RC_results"

\end_inset

 shows the retry cost (RC) for each task in the three task sets in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

, where each task has a single atomic section of length equal to 0.2 of the task length. Each data point in the figure has a confidence level of 0.95. We observe that G-EDF/LCM and G-RMA/LCM achieve shorter or comparable retry cost than ECM and RCM. Since all tasks are initially released at the same time, and due to the specific nature of task properties, tasks with lower IDs somehow have higher priorities under the G-EDF scheduler. Note that tasks with lower IDs have higher priorities under G-RMA, since tasks are ordered in non-decreasing order of their periods.
\end_layout

\begin_layout Standard

Thus, we observe that G-EDF/LCM and G-RMA/LCM achieve comparable retry costs to ECM and RCM for some tasks with lower IDs. But when task ID increases, LCM --- for both schedulers --- achieves much shorter retry costs than ECM and RCM. This is because, higher priority tasks in LCM can be delayed by lower priority tasks, which is not the case for ECM and RCM. However, as task priority decreases, LCM, by definition, prevents higher priority tasks from aborting lower priority ones if a higher priority task interferes with a lower priority one after a specified threshold. In contrast, under ECM and RCM, lower priority tasks abort in favor of higher priority ones. G-EDF/LCM and G-RMA/LCM also achieve shorter retry costs than the retry-loop lock-free algorithm.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_5t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_10t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set2"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_12t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set3"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task retry costs under LCM and competitor synchronization methods
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:RC_results"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results-1"

\end_inset

 shows the response time of each task of the task sets in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Task-set-1"

\end_inset

 with a confidence level of 0.95. (Again, each task's atomic section length is equal to half of the task length.) We observe that G-EDF/LCM and G-RMA/LCM achieve shorter response time than the retry-loop lock-free algorithm, and shorter or comparable response time than ECM and RCM.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_5t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set1-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_10t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set2-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3 ]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_12t_nl_g_30_0.2_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set3-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task response times under LCM and competitor synchronization methods
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:res_results-1"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

We repeated the experiments by varying the number and length of atomic sections. Due to space limitations, only a subset of the results are shown in Figures
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RC_results 5 2 2"

\end_inset

 to
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:res_results 8 5 2"

\end_inset

. (The complete set of results are shown in Appendix B of
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "stmconcurrencycontrol_techreport"

\end_inset

.) Each figure has three parameters 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

, and 
\begin_inset Formula $z$
\end_inset

 in the label. 
\begin_inset Formula $x$
\end_inset

 specifies the relative total length of all atomic sections to the length of the task. 
\begin_inset Formula $y$
\end_inset

 specifies the maximum relative length of any atomic section to the length of the task. 
\begin_inset Formula $z$
\end_inset

 specifies the minimum relative length of any atomic section to the length of the task. These figures show a consistent trend with previous results.
\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_5t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_10t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set2"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_12t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set3"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task retry costs under LCM and competitor synchronization methods (0.5,0.2,0.2)
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:RC_results 5 2 2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_5t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set1-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_10t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set2-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3 ]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_12t_nl_g_30_0.5_0.2_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set3-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task response times under LCM and competitor synchronization methods (0.5,0.2,0.2)
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:res_results 5 2 2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_5t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_10t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set2"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Abr_dur_12t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-RC-set3"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task retry costs under LCM and competitor synchronization methods (0.8,0.5,0.2)
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:RC_results 8 5 2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
placement htbp
wide false
sideways false
status open


\begin_layout Standard

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 1]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_5t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set1-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 2]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_10t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set2-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
subfigure[Task set 3 ]{
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figures/Res_Time_12t_nl_g_30_0.8_0.5_0.2_1.eps
	scale 60

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "fig-res-set3-1"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset Caption


\begin_layout Standard

Task response times under LCM and competitor synchronization methods (0.8,0.5,0.2)
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:res_results 8 5 2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Chapter

Conclusions, Contributions, and Proposed Post Preliminary-Exam Work 
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Chapter 7. Conclusions, Contributions, and Future Work 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% If you are using BibTeX, uncomment the following:
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
thebibliography
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% Otherwise, uncomment the following:
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
chapter*{Bibliography}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset

 
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "global_bibliography"
options "plain"

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
markright{
\end_layout

\end_inset

Mohammed Elshambakey 
\begin_inset space \hfill{}

\end_inset

Bibliography 
\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
appendix
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% In LaTeX, each appendix is a "chapter"
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

% 
\backslash
chapter{Program Source}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\end_body
\end_document
